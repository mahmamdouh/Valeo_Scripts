b'commit bb2fcca7db5f0e892a6a1d308d62a7ca3c98d46c
Author: Santosh Pallanti <santos.pallanti.jv.ext@valeo.com>
Date:   Mon Apr 4 16:19:23 2022 +0530

    $100kW-57768$ - [CR B03] FCT_DetmnRslvrOfsSw- Update and release SW Detail Design and Unit Construction
    
    Change-Id: I31e1876ba8dc7af5c2a8c9078e5a9c9f2c66e6b4

diff --git a/src/fw_cu/Components/Cmn/Com/C2cCom/include/C2cComBswData.h b/src/fw_cu/Components/Cmn/Com/C2cCom/include/C2cComBswData.h
index 19caad230..56984f8f2 100644
--- a/src/fw_cu/Components/Cmn/Com/C2cCom/include/C2cComBswData.h
+++ b/src/fw_cu/Components/Cmn/Com/C2cCom/include/C2cComBswData.h
@@ -123,12 +123,15 @@ typedef struct BswC2cDataType_
    C2cRslvrOffsNvmType RslvrOffsNvm;
 
    /*
-   @@ SUB_STRUCTURE = RslvrOffsUds
+   @@ ELEMENT = RslvrOffsValReqUds
    @@ STRUCTURE = BswC2cDataType
-   @@ DATA_TYPE = STRUCTURE C2cRslvrOffsUdsType
+   @@ A2L_TYPE = MEASURE
+   @@ DATA_TYPE = FLOAT
+   @@ DESCRIPTION = "Provide Resolver Offset Calibration data getting from diagnostic write access through UDS"
+   @@ GROUP = C2cCom
    @@ END
    */
-   C2cRslvrOffsUdsType RslvrOffsUds;
+   float32 RslvrOffsValReqUds;
    
    /*
    @@ ELEMENT = ReqCalibSfty
diff --git a/src/fw_cu/Components/Inv/RslvrCal/BswRslvrOffsHndlr/src/BswRslvrOffsHndlr.c b/src/fw_cu/Components/Inv/RslvrCal/BswRslvrOffsHndlr/src/BswRslvrOffsHndlr.c
index 906cb3c22..5e46c2627 100644
--- a/src/fw_cu/Components/Inv/RslvrCal/BswRslvrOffsHndlr/src/BswRslvrOffsHndlr.c
+++ b/src/fw_cu/Components/Inv/RslvrCal/BswRslvrOffsHndlr/src/BswRslvrOffsHndlr.c
@@ -426,7 +426,6 @@ STATIC void BswRslvrOffHndlr_Nvm_Wait(void)
 STATIC void BswRslvrOffHndlr_None(void)
 {
    C2cRslvrOffsUdsType temp_uds;
-   Std_ReturnType retval;
 
    if( NvmHndlrRslvrOffs.RslvrOffs || NvmHndlrRslvrOffs.RslvrOffsChks || NvmHndlrRslvrOffs.Pattern )/*PRQA S 4115, 4558, 4568, 3398*/
    {
@@ -434,10 +433,10 @@ STATIC void BswRslvrOffHndlr_None(void)
    }
    else
    {
-      retval = Rte_Read_Idp_RslvrOffsValReqUds_RslvrOffsValReqUds(&temp_uds.RslvrOffs);
+      (void)Rte_Read_Idp_RslvrOffsValReqUds_RslvrOffsValReqUds(&temp_uds.RslvrOffs);
       if( temp_uds.RslvrOffs )/*PRQA S 3344*/
       {
-         BswC2cData.RslvrOffsUds = temp_uds;
+         BswC2cData.RslvrOffsValReqUds = temp_uds.RslvrOffs;
          ReqCalibSftyType = REQ_VERIFICATION_UDS;
          BswC2cData.ReqCalibSfty = REQ_CALIB_SFTY_RSLVR_OFFS_VERIFICATION_UDS;
       }
diff --git a/src/fw_cu/Components/Safety/Sfty_Inv/SftyRslvrOffsHndlr/src/SftyRslvrOffsHndlr.c b/src/fw_cu/Components/Safety/Sfty_Inv/SftyRslvrOffsHndlr/src/SftyRslvrOffsHndlr.c
index a7b4d0c0a..8d4c97d29 100644
--- a/src/fw_cu/Components/Safety/Sfty_Inv/SftyRslvrOffsHndlr/src/SftyRslvrOffsHndlr.c
+++ b/src/fw_cu/Components/Safety/Sfty_Inv/SftyRslvrOffsHndlr/src/SftyRslvrOffsHndlr.c
@@ -40,7 +40,7 @@
 #include "SftyCrc_data.h" /* PRQA S 0380 # header file necessary; inclusion of macros unavoidable */
 #include "SftyE2eRx_data.h" /* PRQA S 0380 # header file necessary; inclusion of macros unavoidable */
 #include "SftyE2eFpga_data.h"
-#include "SftyHvDcUEvln_data.h"
+#include "SftyHvDcUEvln_data.h" /* PRQA S 0380 # header file necessary; inclusion of macros unavoidable */
 #include "SftyRslvrOffsHndlr.h"
 #include "SftyRslvrOffsHndlr_data.h"
 #include "SftyRslvrCalcn_data.h"
@@ -1302,7 +1302,8 @@ LOCAL_INLINE void SftyRslvrOffsHndlr_AccumIq(void)
    }
 
    /* modulo 2PI */
-   angle = angle - (SYSCON_2PI * MLIB_F32S32(MLIB_S32F32(angle/SYSCON_2PI)));
+   /* PRQA S 4119, 4395 1 # This operation is needed to find modulo 2PI */
+   angle = angle - (SYSCON_2PI * ((float32) (sint32) (angle / SYSCON_2PI)));
 
    /* Scale angle to [-pi ... pi] */
    angle = SftyRslvrOffsHndlr_ScaleAng(angle);
@@ -2367,7 +2368,7 @@ LOCAL_INLINE void SftyRslvrOffsHndlr_ValidateRslvrDataUdsRangeChk(void)
    /* ************* Source code **************** */
 
    /* Read UDS resolver offset value (in electrical degree) received from BSW */
-   SftyRslvrOffsHndlrUdsOffsInDeg = BswC2cData.RslvrOffsUds.RslvrOffs;
+   SftyRslvrOffsHndlrUdsOffsInDeg = BswC2cData.RslvrOffsValReqUds;
 
    /* Check if UDS offset is within valid range */
    if(
diff --git a/src/fw_cu/build/a2l/Measurements-to-Timeslices-Mapping.csv b/src/fw_cu/build/a2l/Measurements-to-Timeslices-Mapping.csv
index e96bceb74..3cce23f93 100644
--- a/src/fw_cu/build/a2l/Measurements-to-Timeslices-Mapping.csv
+++ b/src/fw_cu/build/a2l/Measurements-to-Timeslices-Mapping.csv
@@ -54,7 +54,7 @@ BswC2cData.ReqShtdn,Core_0,C0_1ms_TimeTask,10,,,BSW
 BswC2cData.RslvrOffsNvm.Pattern,Core_0,C0_1ms_TimeTask,1,,,BSW
 BswC2cData.RslvrOffsNvm.RslvrOffs,Core_0,C0_1ms_TimeTask,1,,,BSW
 BswC2cData.RslvrOffsNvm.RslvrOffsChks,Core_0,C0_1ms_TimeTask,1,,,BSW
-BswC2cData.RslvrOffsUds.RslvrOffs,Core_0,C0_1ms_TimeTask,1,,,BSW
+BswC2cData.RslvrOffsValReqUds,Core_0,C0_1ms_TimeTask,1,,,BSW
 BswC2cData.ScuOvcCon,Core_0,C0_1ms_TimeTask,1,,,BSW
 BswC2cData.ScuOvcEna,Core_0,C0_1ms_TimeTask,1,,,BSW
 BswC2cData.SpdReq,Core_0,C0_1ms_TimeTask,1,,,BSW
'
