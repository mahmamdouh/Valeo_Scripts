b'commit 441e13829c4b70a93b641c6505d75bbe91682c56
Author: Mohammed ANDALOUSSI (JV) <mohammed.andaloussi.jv@valeo.com>
Date:   Mon Jan 24 12:02:28 2022 +0100

    $100kW-51135$ - IGBT U and W temperature use the same look up tables.
    
                           - Fix several QAC and HIS warnings
                           - Fix defect 51201 - FCT_Prioritize_Control_Signal_SW-Arch : Standby mode is not considered, for mode synchronisation with FPGA
    
    Change-Id: I0907be8f7fc2a0f5659755ad92c8be43f051caff

diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyCrashSigMon/include/SftyCrashSigMon_data.h b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyCrashSigMon/include/SftyCrashSigMon_data.h
index 065b49259..ddee88d5d 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyCrashSigMon/include/SftyCrashSigMon_data.h
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyCrashSigMon/include/SftyCrashSigMon_data.h
@@ -71,39 +71,6 @@ extern CONST(uint16, SFTYCRASHSIGMON_CALIB) SftyCrashSigMonCrashSigAccuracy;
 #include "MemMap.h"
 /* End: SFTYCRASHSIGMON_STOP_SEC_CALIB_16 (calib) */
 
-/* Begin: SFTYREPLCMT_START_SEC_CALIB_8 (calib) */
-#define SFTYREPLCMT_START_SEC_CALIB_8
-#include "MemMap.h"
-
-extern CONST(uint8, SFTYREPLCMT_CALIB) SftyReplcmtCrashSigMonStiEna;
-
-extern CONST(uint8, SFTYREPLCMT_CALIB) SftyReplcmtE2eCrashEvt;
-
-extern CONST(uint8, SFTYREPLCMT_CALIB) SftyReplcmtVadcCrashStiEna;
-
-
-#define SFTYREPLCMT_STOP_SEC_CALIB_8
-#include "MemMap.h"
-/* End: SFTYREPLCMT_STOP_SEC_CALIB_8 (calib) */
-
-/* Begin: SFTYREPLCMT_START_SEC_CALIB_16 (calib) */
-#define SFTYREPLCMT_START_SEC_CALIB_16
-#include "MemMap.h"
-
-extern CONST(uint16, SFTYREPLCMT_CALIB) SftyReplcmtCrashSigMonCurRawVal;
-#define SFTYREPLCMT_STOP_SEC_CALIB_16
-#include "MemMap.h"
-/* End: SFTYREPLCMT_STOP_SEC_CALIB_16 (calib) */
-
-/* Begin: SFTYREPLCMT_START_SEC_CALIB_32 (calib) */
-#define SFTYREPLCMT_START_SEC_CALIB_32
-#include "MemMap.h"
-
-extern CONST(uint32, SFTYREPLCMT_CALIB) SftyReplcmtCrashSigMonCurTiStamp;
-#define SFTYREPLCMT_STOP_SEC_CALIB_32
-#include "MemMap.h"
-/* End: SFTYREPLCMT_STOP_SEC_CALIB_32 (calib) */
-
 /*================== [closure] ==============================================*/
 /*! @} doxygen end of group definition */
 #endif
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyCrashSigMon/src/SftyCrashSigMon.c b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyCrashSigMon/src/SftyCrashSigMon.c
index 934c8f527..89292fb93 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyCrashSigMon/src/SftyCrashSigMon.c
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyCrashSigMon/src/SftyCrashSigMon.c
@@ -32,7 +32,6 @@
 #include "Sfty_Types.h"
 #include "AddEnumTypes.h"
 #include "AddGlobalDefines.h"
-
 #include "SftyDma.h"
 #include "SftyDma_data.h"
 #include "SftyCrashSigMon.h"
@@ -40,6 +39,7 @@
 #include "SftyErrDeb.h"
 #include "SftyUtils.h"         /* PRQA S 0380 # macro definitions cannot be split into different files*/
 #include "SftyE2eRx_data.h"
+#include "SftyReplcmt_data.h"
 
 #if  defined(SWIT_Active) || defined(SWIT_IT_Active) || defined(SWIT_FC_Active)
 #include "SWIT_Sfty.h"
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eCompst_Cfg/SftyE2eRx_Cfg/src/SftyE2eRx_cfg.c b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eCompst_Cfg/SftyE2eRx_Cfg/src/SftyE2eRx_cfg.c
index 915c8c634..493f1e70a 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eCompst_Cfg/SftyE2eRx_Cfg/src/SftyE2eRx_cfg.c
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eCompst_Cfg/SftyE2eRx_Cfg/src/SftyE2eRx_cfg.c
@@ -483,7 +483,7 @@ const SftyE2eRxConfigType SftyE2eRxConfig[SFTY_E2E_RX_MSG_NR] =
  * \\retval FALSE : Value not correct
  */
 /***********************************************************************************************************/
-LOCAL_INLINE FUNC(boolean, SFTYE2E_CODE) SftyE2eRx_ChkLimAndScal(uint32 Val, const SftyE2eCanDataRngType* RngData, float32* PhysVal) /* PRQA S 4700 # This function is inline function so HIS warning STM29 can be suppressed since there is no call and the code will be only copied */
+LOCAL_INLINE boolean SftyE2eRx_ChkLimAndScal(uint32 Val, const SftyE2eCanDataRngType* RngData, float32* PhysVal) /* PRQA S 4700 # This function is inline function so HIS warning STM29 can be suppressed since there is no call and the code will be only copied */
 {
 #ifdef SWIT_FC_Active
 if((SWIT_SftyE2eRx_EN_KEY==SWIT_First_HookEnableKey))
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eFpga/include/SftyE2eFpga.h b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eFpga/include/SftyE2eFpga.h
index 72091dd0a..10644c8bb 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eFpga/include/SftyE2eFpga.h
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eFpga/include/SftyE2eFpga.h
@@ -7,7 +7,7 @@
 /* Department: Valeo Siemens eAutomotive                                  */
 /* I DT EC R&D                                                            */
 /* ********************************************************************** */
-/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2020              */
+/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2022              */
 /* All Rights Reserved. Confidential                                      */
 /* ********************************************************************** */
 #ifndef SFTYE2EFPGA_H
@@ -40,7 +40,7 @@ extern FUNC(void, SFTYE2EFPGA_CODE) SftyE2eFpga_MainFunction(void);
 /*! @} doxygen end of group definition */
 #endif
 /* ********************************************************************** */
-/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2020              */
+/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2022              */
 /* All Rights Reserved. Confidential */
 /* ********************************************************************** */
 /*==================[end of file]============================================*/
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eFpga/include/SftyE2eFpga_data.h b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eFpga/include/SftyE2eFpga_data.h
index 089c98040..c5b72b403 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eFpga/include/SftyE2eFpga_data.h
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eFpga/include/SftyE2eFpga_data.h
@@ -3,7 +3,7 @@
 /* ADD Container: SftyE2eFpga                                         */
 /* ADD Container Version:                                             */
 /* *****************************************************************  */
-/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2020                  */
+/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2022                  */
 /* All Rights Reserved. Confidential                                  */
 /* *****************************************************************  */
 #ifndef  SFTYE2EFPGA_DATA_H
@@ -18,7 +18,9 @@
 #include "SftyE2eFpga_Type.h"
 
 
-#define SFTY_E2E_FPGA_SPI_RX_BUF_LEN (8u)
+#define SFTY_E2E_FPGA_SPI_RX_BUF_LEN      (8u)
+#define SFTY_E2E_FPGA_DFLT_MODE           (0u)
+#define SFTY_E2E_FPGA_FLT_ST_DFLT         (0xFFFFU)
 
 
 #define SFTY_DMA_QM_SHARE_START_SEC_VAR_FAST_NO_INIT_ALIGN200HEX
@@ -103,6 +105,10 @@ extern CONST(uint8, SFTYREPLCMT_CALIB)   SftyE2eFpgaActvDchaReqOvrdEna;
 extern CONST(uint8, SFTYREPLCMT_CALIB)   SftyE2eFpgaStateReqEmgySwOvrdVal;
 extern CONST(uint8, SFTYREPLCMT_CALIB)   SftyE2eFpgaStateReqSCSpdReadyOvrdVal; /* PRQA S 0777 # following Arch interface long naming; External identifier does not differ from other identifier is here wrong */
 extern CONST(boolean, SFTYREPLCMT_CALIB) SftyE2eFpgaActvDchaReqValOvrdVal;
+extern CONST(uint8, SFTYREPLCMT_CALIB)   SftyE2eFpgaModOvrdEna;
+extern CONST(uint8, SFTYREPLCMT_CALIB)   SftyE2eFpgaModValOvrdVal;
+extern CONST(uint8, SFTYREPLCMT_CALIB)   SftyE2eFpgaReiniCombinedFltOvrdEna;
+extern CONST(uint16, SFTYREPLCMT_CALIB)  SftyE2eFpgaReiniCombinedFltOvrdVal;
 
 
 #define SFTYREPLCMT_STOP_SEC_CALIB_8
@@ -110,7 +116,7 @@ extern CONST(boolean, SFTYREPLCMT_CALIB) SftyE2eFpgaActvDchaReqValOvrdVal;
 
 #endif
 /* *****************************[closure]**************************** */
-/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2020                 */
+/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2022                 */
 /* All Rights Reserved. Confidential                                 */
 /* ***************************************************************** */
 /*==================[end of file]====================================*/
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eFpga/src/SftyE2eFpga.c b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eFpga/src/SftyE2eFpga.c
index b8b9b3a5a..243035d0e 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eFpga/src/SftyE2eFpga.c
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eFpga/src/SftyE2eFpga.c
@@ -7,7 +7,7 @@
 /* Department: Valeo Siemens eAutomotive                                  */
 /* I DT EC R&D                                                            */
 /* ********************************************************************** */
-/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2020              */
+/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2022              */
 /* All Rights Reserved. Confidential                                      */
 /* ********************************************************************** */
 
@@ -57,8 +57,6 @@
 #define SFTY_E2E_FPGA_NO_REQ              (1u)
 #define SFTY_E2E_FPGA_TRACTION            (1u)
 #define SFTY_E2E_FPGA_MLI_TRACTION        (1u)
-#define SFTY_E2E_FPGA_DFLT_MODE           (0u)
-#define SFTY_E2E_FPGA_FLT_ST_DFLT         (0xFFFFU)
 #define SFTY_E2E_FPGA_ACC_MONR_STS_PASSED (0U)
 #define SFTY_E2E_FPGA_ACC_MONR_STS_FAILED (1U)
 #define SFTY_E2E_FPGA_INIT_MODE           (2U)
@@ -379,6 +377,15 @@ STATIC VAR(uint8, SFTYE2EFPGA_VAR) SftyE2eFpgaCurrMod;
 */
 STATIC VAR(uint8, SFTYE2EFPGA_VAR) SftyE2eFpgaActvDchaReq;
 
+/*
+@@ SYMBOL = SftyE2eFpgaMod
+@@ A2L_TYPE = MEASURE
+@@ DATA_TYPE = UBYTE
+@@ DESCRIPTION = "FPGA Mode"
+@@ GROUP = SftyE2eFpga
+@@ END
+*/
+STATIC VAR(uint8, SFTYE2EFPGA_VAR) SftyE2eFpgaMod;
 
 
 #define SFTYE2EFPGA_STOP_SEC_VAR_AREA_CMN_FAST_CLEARED
@@ -1805,34 +1812,70 @@ LOCAL_INLINE uint8 SftyE2eFpga_ChkTiStamp(uint8 frameIdx)
 
 /******************************************************************/
 /*!
- * \\fn      void SftyE2eFpga_UpdtC2cData(void)
- * \\brief   This function updates C2C data
+ * \\fn      void SftyE2eFpga_UpdtC2cFltBReinitStData(void)
+ * \\brief   This function updates C2C data for fault B
  * \\Parent_DD : SftyE2eFpga_MainFunction
  * \\param   -
  * \\return  void
  */
 /******************************************************************/
-LOCAL_INLINE void SftyE2eFpga_UpdtC2cData(void)
+LOCAL_INLINE void SftyE2eFpga_UpdtC2cFltBReinitStData(void)
 {
+   if ( SftyE2eFpgaReiniCombinedFltOvrdEna == FALSE)
+   {
+      SftyC2cData.FpgaTxDataFltBReinitSt.B.OverUndCurU    = SftyAcEvlnSetOverCurrPhaReinitSt[SYSDEF_PHA_U];
+      SftyC2cData.FpgaTxDataFltBReinitSt.B.OverUndCurV    = SftyAcEvlnSetOverCurrPhaReinitSt[SYSDEF_PHA_V];
+      SftyC2cData.FpgaTxDataFltBReinitSt.B.OverUndCurW    = SftyAcEvlnSetOverCurrPhaReinitSt[SYSDEF_PHA_W];
+      SftyC2cData.FpgaTxDataFltBReinitSt.B.OvVbat         = SftyHvDcUEvlnSetOverVoltReinitSt;
+      SftyC2cData.FpgaTxDataFltBReinitSt.B.IgbtMidPointW  = SftyInvActrSetMidPointPhaWReinitSt;
+      SftyC2cData.FpgaTxDataFltBReinitSt.B.IgbtMidPointV  = SftyInvActrSetMidPointPhaVReinitSt;
+      SftyC2cData.FpgaTxDataFltBReinitSt.B.IgbtMidPointU  = SftyInvActrSetMidPointPhaUReinitSt;
+   }
+   else
+   {
+      SftyC2cData.FpgaTxDataFltBReinitSt.U = SftyE2eFpgaReiniCombinedFltOvrdVal;
+   }
 
-#ifdef SWIT_IT_Active
-   SWIT_SftyE2eFpga_UpdtC2cData_BgnHook();
-#endif
-
-   SftyC2cData.FpgaTxDataFltBReinitSt.B.OverUndCurU    = SftyAcEvlnSetOverCurrPhaReinitSt[SYSDEF_PHA_U];
-   SftyC2cData.FpgaTxDataFltBReinitSt.B.OverUndCurV    = SftyAcEvlnSetOverCurrPhaReinitSt[SYSDEF_PHA_V];
-   SftyC2cData.FpgaTxDataFltBReinitSt.B.OverUndCurW    = SftyAcEvlnSetOverCurrPhaReinitSt[SYSDEF_PHA_W];
 
-   SftyC2cData.FpgaTxDataFltAReinitSt.B.MeasCohernc    = SftyAcEvlnSetPlausReinitSt | SftyHvDcUEvlnSetPlausReinitSt;
-   SftyC2cData.FpgaTxDataFltBReinitSt.B.OvVbat         = SftyHvDcUEvlnSetOverVoltReinitSt;
+   return;
+}
 
-   SftyC2cData.FpgaTxDataFltBReinitSt.B.IgbtMidPointW  = SftyInvActrSetMidPointPhaWReinitSt;
-   SftyC2cData.FpgaTxDataFltBReinitSt.B.IgbtMidPointV  = SftyInvActrSetMidPointPhaVReinitSt;
-   SftyC2cData.FpgaTxDataFltBReinitSt.B.IgbtMidPointU  = SftyInvActrSetMidPointPhaUReinitSt;
+/******************************************************************/
+/*!
+ * \\fn      void SftyE2eFpga_UpdtC2cFltAReinitStData(void)
+ * \\brief   This function updates C2C data for fault A
+ * \\Parent_DD : SftyE2eFpga_MainFunction
+ * \\param   -
+ * \\return  void
+ */
+/******************************************************************/
+LOCAL_INLINE void SftyE2eFpga_UpdtC2cFltAReinitStData(void)
+{
+   if ( SftyE2eFpgaReiniCombinedFltOvrdEna == FALSE)
+   {
+      SftyC2cData.FpgaTxDataFltAReinitSt.B.MeasCohernc    = SftyAcEvlnSetPlausReinitSt | SftyHvDcUEvlnSetPlausReinitSt;
+      SftyC2cData.FpgaTxDataFltAReinitSt.B.IgbtH          = SftyInvActrSetHsGateDrvrReinitSt;
+      SftyC2cData.FpgaTxDataFltAReinitSt.B.IgbtL          = SftyInvActrSetLoGateDrvrReinitSt;
+   }
+   else
+   {
+      SftyC2cData.FpgaTxDataFltAReinitSt.U = SftyE2eFpgaReiniCombinedFltOvrdVal;
+   }
 
-   SftyC2cData.FpgaTxDataFltAReinitSt.B.IgbtH          = SftyInvActrSetHsGateDrvrReinitSt;
-   SftyC2cData.FpgaTxDataFltAReinitSt.B.IgbtL          = SftyInvActrSetLoGateDrvrReinitSt;
+   return;
+}
 
+/******************************************************************/
+/*!
+ * \\fn      void SftyE2eFpga_UpdtC2cStateReq(void)
+ * \\brief   This function updates C2C FpgaStateReq
+ * \\Parent_DD : SftyE2eFpga_MainFunction
+ * \\param   -
+ * \\return  void
+ */
+/******************************************************************/
+LOCAL_INLINE void SftyE2eFpga_UpdtC2cStateReq(void)
+{
    if(SftyE2eFpgaStateReqEmgySwOvrdEna == FALSE)
    {
       SftyE2eFpgaNoEmgySwReq = SftyInvActrStateReqEmgySw;
@@ -1842,6 +1885,8 @@ LOCAL_INLINE void SftyE2eFpga_UpdtC2cData(void)
       SftyE2eFpgaNoEmgySwReq = SftyE2eFpgaStateReqEmgySwOvrdVal;
    }
 
+   SftyC2cData.FpgaStateReq.B.NoEmgySw    = SftyE2eFpgaNoEmgySwReq;
+
    if(SftyE2eFpgaStateReqSCSpdReadyOvrdEna == FALSE)
    {
       SftyE2eFpgaSCspdReady = SftyInvActrStateReqSCSpdReady;
@@ -1851,10 +1896,33 @@ LOCAL_INLINE void SftyE2eFpga_UpdtC2cData(void)
       SftyE2eFpgaSCspdReady = SftyE2eFpgaStateReqSCSpdReadyOvrdVal;
    }
 
-   SftyC2cData.FpgaStateReq.B.NoEmgySw    = SftyE2eFpgaNoEmgySwReq;
-
    SftyC2cData.FpgaStateReq.B.SCspdReady  = SftyE2eFpgaSCspdReady;
 
+   if(SftyE2eFpgaModOvrdEna == FALSE)
+   {
+      SftyE2eFpgaMod = SftyInvActrStateReqMod;
+   }
+   else
+   {
+      SftyE2eFpgaMod = SftyE2eFpgaModValOvrdVal;
+   }
+
+   SftyC2cData.FpgaStateReq.B.Mode = SftyE2eFpgaMod;
+
+   return;
+}
+
+/******************************************************************/
+/*!
+ * \\fn      void SftyE2eFpga_UpdtC2cActvDchaReq(void)
+ * \\brief   This function updates C2C ActvDchaReq
+ * \\Parent_DD : SftyE2eFpga_MainFunction
+ * \\param   -
+ * \\return  void
+ */
+/******************************************************************/
+LOCAL_INLINE void SftyE2eFpga_UpdtC2cActvDchaReq(void)
+{
    if(SftyE2eFpgaActvDchaReqOvrdEna == FALSE)
    {
       SftyE2eFpgaActvDchaReq = SftyActvDchaCtrlActvDchaReqViaR;
@@ -1869,6 +1937,33 @@ LOCAL_INLINE void SftyE2eFpga_UpdtC2cData(void)
    return;
 }
 
+/******************************************************************/
+/*!
+ * \\fn      void SftyE2eFpga_UpdtC2cData(void)
+ * \\brief   This function updates C2C data
+ * \\Parent_DD : SftyE2eFpga_MainFunction
+ * \\param   -
+ * \\return  void
+ */
+/******************************************************************/
+LOCAL_INLINE void SftyE2eFpga_UpdtC2cData(void)
+{
+
+#ifdef SWIT_IT_Active
+   SWIT_SftyE2eFpga_UpdtC2cData_BgnHook();
+#endif
+
+   SftyE2eFpga_UpdtC2cFltAReinitStData();
+
+   SftyE2eFpga_UpdtC2cFltBReinitStData();
+
+   SftyE2eFpga_UpdtC2cStateReq();
+
+   SftyE2eFpga_UpdtC2cActvDchaReq();
+
+   return;
+}
+
 /******************************************************************/
 /*!
  * \\fn      void SftyE2eFpga_AccModPlausChk(void)
@@ -2577,7 +2672,7 @@ FUNC(void, SFTYE2EFPGA_CODE) SftyE2eFpga_Init(void)
 /*================== [closure] ==============================================*/
 /*! @} doxygen end of group definition */
 /* ************************************************************************* */
-/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2020                 */
+/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2022                 */
 /* All Rights Reserved. Confidential                                         */
 /* ************************************************************************* */
 /*==================[end of file]============================================*/
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eFpga/src/SftyE2eFpga_data.c b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eFpga/src/SftyE2eFpga_data.c
index b076d7036..d6d5df467 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eFpga/src/SftyE2eFpga_data.c
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eFpga/src/SftyE2eFpga_data.c
@@ -3,7 +3,7 @@
 /* ADD Container: SftySbcCtrl                                        */
 /* ADD Container Version:                                            */
 /* ***************************************************************** */
-/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2020                 */
+/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2022                 */
 /* All Rights Reserved. Confidential                                 */
 /* ***************************************************************** */
 
@@ -451,6 +451,16 @@ CONST(uint8, SFTYREPLCMT_CALIB) SftyE2eFpgaStateReqSCSpdReadyOvrdEna = FALSE;
 */
 CONST(uint8, SFTYREPLCMT_CALIB) SftyE2eFpgaActvDchaReqOvrdEna = FALSE;
 
+/*
+@@ SYMBOL = SftyE2eFpgaModOvrdEna
+@@ A2L_TYPE = PARAMETER
+@@ DATA_TYPE = UBYTE
+@@ DESCRIPTION = "Enable stimulation of FPGA Mode"
+@@ GROUP = SftyHvDcUEvln
+@@ END
+*/
+CONST(uint8, SFTYREPLCMT_CALIB) SftyE2eFpgaModOvrdEna = FALSE;
+
 
 /*
 @@ SYMBOL = SftyE2eFpgaStateReqEmgySwOvrdVal
@@ -482,12 +492,45 @@ CONST(uint8, SFTYREPLCMT_CALIB) SftyE2eFpgaStateReqSCSpdReadyOvrdVal = 1u;
 */
 CONST(boolean, SFTYREPLCMT_CALIB) SftyE2eFpgaActvDchaReqValOvrdVal = FALSE;
 
+/*
+@@ SYMBOL = SftyE2eFpgaModValOvrdVal
+@@ A2L_TYPE = PARAMETER
+@@ DATA_TYPE = UBYTE
+@@ DESCRIPTION = "Stimulation value of FPGA Mode"
+@@ GROUP = SftyHvDcUEvln
+@@ END
+*/
+CONST(uint8, SFTYREPLCMT_CALIB) SftyE2eFpgaModValOvrdVal = SFTY_E2E_FPGA_DFLT_MODE;
+
+/*
+@@ SYMBOL = SftyE2eFpgaReiniCombinedFltOvrdEna
+@@ A2L_TYPE = PARAMETER
+@@ DATA_TYPE = UBYTE
+@@ DESCRIPTION = "Enable stimulation of reinit combined fault"
+@@ GROUP = SftyHvDcUEvln
+@@ END
+*/
+CONST(uint8, SFTYREPLCMT_CALIB) SftyE2eFpgaReiniCombinedFltOvrdEna = FALSE;
+
+
+/*
+@@ SYMBOL = SftyE2eFpgaReiniCombinedFltOvrdVal
+@@ A2L_TYPE = PARAMETER
+@@ DATA_TYPE = UWORD
+@@ DESCRIPTION = "Stimulation value of reinit combined fault"
+@@ GROUP = SftyHvDcUEvln
+@@ END
+*/
+CONST(uint16, SFTYREPLCMT_CALIB) SftyE2eFpgaReiniCombinedFltOvrdVal = SFTY_E2E_FPGA_FLT_ST_DFLT;
+
+
+
 #define SFTYREPLCMT_STOP_SEC_CALIB_8
 #include "MemMap.h"
 /* End: SFTYREPLCMT_STOP_SEC_CALIB_8 (calib) */
 
-/* ***************************[closure]******************************* */
-/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2020                 */
+/* ***************************[closure]***************************** */
+/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2022                 */
 /* All Rights Reserved. Confidential                                 */
 /* ***************************************************************** */
 /*==================[end of file]====================================*/
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyErrDeb/src/SftyErrDeb.c b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyErrDeb/src/SftyErrDeb.c
index 29518e2fe..2c4e201be 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyErrDeb/src/SftyErrDeb.c
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyErrDeb/src/SftyErrDeb.c
@@ -387,7 +387,7 @@ FUNC(void, SFTY_ERR_DEB_CODE) SftyErrDeb_PreRun(void)
 /*================== [closure] ==============================================*/
 /*! @} doxygen end of group definition */
 /* ********************************************************************** */
-/* Copyright (C) Valeo Siemens eAutomotive 2012                           */
+/* Copyright (C) Valeo Siemens eAutomotive 2022                           */
 /* All Rights Reserved. Confidential                                      */
 /* ********************************************************************** */
 /*==================[end of file]============================================*/
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyModMgr/src/SftyModMgr.c b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyModMgr/src/SftyModMgr.c
index e46b3fef4..37f6327b7 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyModMgr/src/SftyModMgr.c
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyModMgr/src/SftyModMgr.c
@@ -761,89 +761,6 @@ LOCAL_INLINE void SftyModMgr_HndlKl15(void)
 #ifdef SWIT_FC_Active
 if((SWIT_SftyModMgr_EN_KEY==SWIT_First_HookEnableKey))
    SWIT_SftyModMgr_HndlKl15_BgnHook ();
-#endif
-
-#if 0
-/* ******** Variables declaration *********** */
-ErrDeb_FltStsType   kl15DebSt;
-
-   /* ************* Source code **************** */
-
-   /* Overwriting KL15-Signal is not requested, use sensor value */
-   if(BswC2cData.ReqRstKl15 == REQ_RST_KL15_NOT_REQUESTED)
-   {
-      if(SftyDcEvlnKl15State == KL15_STATE_ON)
-      {
-         SftyModMgrKl15OffErrMonrSt = ERR_DEB_MONR_STS_PASSED;
-      }
-      else if(SftyDcEvlnKl15State == KL15_STATE_OFF)
-      {
-         SftyModMgrKl15OffErrMonrSt = ERR_DEB_MONR_STS_FAILED;
-      }
-      else /* (SftyDcEvlnKl15State == KL15_STATE_UNKNOWN */
-      {
-         SftyModMgrKl15OffErrMonrSt = ERR_DEB_MONR_STS_INACTIVE;
-      }
-   }
-   else if(BswC2cData.ReqRstKl15 == REQ_RST_KL15_KL15_ACTIVE)
-   {
-      /* Overwrite value with KL15_ON */
-      SftyModMgrKl15OffErrMonrSt = ERR_DEB_MONR_STS_PASSED;
-   }
-   else
-   {
-      /* Overwrite value with KL15_OFF */
-      SftyModMgrKl15OffErrMonrSt = ERR_DEB_MONR_STS_FAILED;
-   }
-
-   kl15DebSt = ErrDebFltData_ENA_CDN_KL15_ACTV.FltSts1QualSts;
-
-   /* State machine to reset normal operation errors in case of complete KL15 cycle */
-   if(kl15DebSt == ERR_DEB_FLT_STS_FAILED)
-   {
-      SftyModMgrKl15St = KL15_STATE_OFF;
-      SftyC2cData.Kl15St = STS_KL15_OFF;
-   }
-   else if(kl15DebSt == ERR_DEB_FLT_STS_PASSED)
-   {
-      if(SftyModMgrKl15St == KL15_STATE_OFF)
-      {
-         /* Issue KL15 fault reset request */
-         SftyModMgrFltRstReqKl15++;
-         /* KL15 reset request must be seen by other cores also */
-         ErrDebFltRstReqKl15 = SftyModMgrFltRstReqKl15;
-
-         /* Set new KL15 state */
-         SftyModMgrKl15St = KL15_STATE_ON;
-         SftyC2cData.Kl15St = STS_KL15_ON;
-
-#if SYSCON_FTR_PSM == 1 /* USE_IPMCTRL_CONTROL */
-         /* Reevaluate NVM resolver offset */
-         SftyRslvrOffsHndlr_ValidateRslvrDataNvm();
-#endif
-      }
-      else if(SftyModMgrKl15St == KL15_STATE_ON)
-      {
-         /* KL15 is already on, do nothing */
-      }
-      else /* SftyModMgrKl15St == KL15_STATE_UNKNOWN */
-      {
-         /* Start was done and now we know the status of KL15 */
-         /* Set new KL15 state */
-         SftyModMgrKl15St = KL15_STATE_ON;
-         SftyC2cData.Kl15St = STS_KL15_ON;
-      }
-   }
-   else
-   {
-      /* Do nothing, debouncing not finished */
-   }
-
-#ifdef SWIT_IT_Active
-   if((SWIT_SftyModMgr_EN_KEY==SWIT_First_HookEnableKey)||(SWIT_SftyModMgr_EN_KEY==SWIT_Second_HookEnableKey)||(SWIT_SftyModMgr_EN_KEY==SWIT_Third_HookEnableKey))
-      SWIT_SftyModMgr_HndlKl15_EndHook();
-#endif
-
 #endif
 
    if(SFTY_KL15_PORT_PIN == STD_LOW)
@@ -891,25 +808,7 @@ FUNC(void, SFTY_MOD_MGR_CODE) SftyModMgr_MainFunction(void)
    /* ******** Variables declaration *********** */
 
    /* ************* Source code **************** */
-#if 0
-   /* State machine for shutoffpath and overcurrent protection tests */
-   SftyModMgr_StrtUpDiag();
-
-   /* State machine for diagnostics of power supply during sepic is off */
-   SftyModMgr_SepicOffDiag();
-
-   /* Check stability of power supply, SEPIC only */
-   SftyModMgr_ChkStabPwrSplySepic();
-
-   /* Check stability of power supply that is generated from SEPIC OR HvLv converter */
-   SftyModMgr_ChkStabPwrSplySepicOrHvLv();
-
-   /* Evaluation of mode plausibility */
-   SftyModMgr_ChkModPlaus();
-
-
-#endif
-
+   /* PRQA S 4700 1 # Justification for STVOC2. SWIT hook logik is causing the warning. This code is disabled and no risk is present */
 #ifdef SWIT_Active
 if((SWIT_SftyModMgr_EN_KEY==SWIT_First_HookEnableKey)||(SWIT_SftyModMgr_EN_KEY==SWIT_Second_HookEnableKey)||(SWIT_SftyModMgr_EN_KEY==SWIT_Third_HookEnableKey))
    SWIT_SftyModMgr_MainFunction_EndHook ();
@@ -927,6 +826,7 @@ if((SWIT_SftyModMgr_EN_KEY==SWIT_First_HookEnableKey)||(SWIT_SftyModMgr_EN_KEY==
    SWIT_SftyModMgr_SbcSleepModeHndlr_EndHook();
    }
    #endif
+
    return;
 }
 
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyParkLockPosnAcqn/include/SftyParkLockPosnAcqn_data.h b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyParkLockPosnAcqn/include/SftyParkLockPosnAcqn_data.h
index 063465214..14bd35f58 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyParkLockPosnAcqn/include/SftyParkLockPosnAcqn_data.h
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyParkLockPosnAcqn/include/SftyParkLockPosnAcqn_data.h
@@ -1,6 +1,6 @@
 /* ***************************************************************** */
-/* Sourcefile: SftyParkLockPosnAcqn_data.h                                  */
-/* ADD Container: SftyParkLockPosnAcqn                                      */
+/* Sourcefile: SftyParkLockPosnAcqn_data.h                           */
+/* ADD Container: SftyParkLockPosnAcqn                               */
 /* ADD Container Version: 01.00                                      */
 /* ***************************************************************** */
 /* Copyright (C) Valeo-Siemens eAutomotive GmbH 2021                 */
@@ -56,7 +56,7 @@ extern VAR(uint32, SFTYPARKLOCKPOSNACQN_VAR) SftyParkLockPosnAcqnRawVal;
 #define SFTYPARKLOCKPOSNACQN_START_SEC_CALIB_32
 #include "MemMap.h"
 
-extern CONST(uint32, SFTYPARKLOCKPOSNACQN_VAR)SftyParkLockPosnAcqnDeltaRtsTiStampThd;
+extern CONST(uint32, SFTYPARKLOCKPOSNACQN_VAR) SftyParkLockPosnAcqnDeltaRtsTiStampThd;
 
 #define SFTYPARKLOCKPOSNACQN_STOP_SEC_CALIB_32
 #include "MemMap.h"
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyParkLockPosnAcqn/src/SftyParkLockPosnAcqn_data.c b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyParkLockPosnAcqn/src/SftyParkLockPosnAcqn_data.c
index 4c2a37af3..dc32a2d85 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyParkLockPosnAcqn/src/SftyParkLockPosnAcqn_data.c
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyParkLockPosnAcqn/src/SftyParkLockPosnAcqn_data.c
@@ -89,7 +89,7 @@ VAR(uint32, SFTYPARKLOCKPOSNACQN_VAR) SftyParkLockPosnAcqnRawVal = 0U;
 @@ END
 */
 
-CONST(uint32, SFTYPARKLOCKPOSNACQN_VAR)SftyParkLockPosnAcqnDeltaRtsTiStampThd = 334U;
+CONST(uint32, SFTYPARKLOCKPOSNACQN_VAR) SftyParkLockPosnAcqnDeltaRtsTiStampThd = 334U;
 
 #define SFTYPARKLOCKPOSNACQN_STOP_SEC_CALIB_32
 #include "MemMap.h"
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/include/SftyReplcmt_data.h b/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/include/SftyReplcmt_data.h
index f164d475f..e298d7ee6 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/include/SftyReplcmt_data.h
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/include/SftyReplcmt_data.h
@@ -10,38 +10,12 @@
 #include "AddGlobalDefines.h"
 #include "Platform_Types.h"
 #include "Compiler.h"
-
-#ifndef\t_online
-#define\t_online
-#endif
-#ifndef\t_param
-#define\t_param
-#endif
-#ifndef\t_axis
-#define\t_axis
-#endif
-#ifndef\t_map
-#define\t_map
-#endif
-
-
 #include\t"AddStructTypes.h"
 #include\t"AddEnumTypes.h"
 #include\t"AddGlobalDefines.h"
 
-#ifndef SW_INTERFACE
-
 
 
-
-
-#endif
-
-
-/* QAC warning (0777) - External identifier does not differ from other identifier(s)
-   (e.g. \'%s\') within the specified number of significant characters  */
-/* PRQA S 0777 ++ */
-
 /* Begin: SFTYREPLCMT_START_SEC_CALIB_32 (calib struct) */
 #define SFTYREPLCMT_START_SEC_CALIB_32
 #include "MemMap.h"
@@ -146,6 +120,8 @@ extern CONST(uint16, SFTYREPLCMT_CALIB) SftyReplcmtActvDchaCtrlrIfWHvDcExtAdcRaw
 #include "MemMap.h"
 /* End: SFTYREPLCMT_STOP_SEC_CALIB_16 (calib) */
 
+/* PRQA S 0777 ++ # This identifier is long and differs from other identifier */
+
 /* Begin: SFTYREPLCMT_START_SEC_CALIB_8 (calib) */
 #define SFTYREPLCMT_START_SEC_CALIB_8
 #include "MemMap.h"
@@ -2857,7 +2833,7 @@ extern CONST(boolean, SFTYDCEVLN_CALIB) SftyReplcmtE2eFpgaOverVoltVBatFltSts;
 #define SFTYREPLCMT_START_SEC_CALIB_8
 #include "MemMap.h"
 
-extern CONST(uint8, SFTYPARKLOCKPOSNACQN_VAR)SftyReplcmParkLockPosnAcqnEnaFlg;
+extern CONST(uint8, SFTYPARKLOCKPOSNACQN_VAR) SftyReplcmParkLockPosnAcqnEnaFlg;
 #define SFTYREPLCMT_STOP_SEC_CALIB_8
 #include "MemMap.h"
 /* Stop: SFTYREPLCMT_STOP_SEC_CALIB_8 (calib) */
@@ -2866,7 +2842,7 @@ extern CONST(uint8, SFTYPARKLOCKPOSNACQN_VAR)SftyReplcmParkLockPosnAcqnEnaFlg;
 #define SFTYREPLCMT_START_SEC_CALIB_8
 #include "MemMap.h"
 
-extern CONST(uint8, SFTYPARKLOCKPOSNACQN_VAR)SftyReplcmParkLockActrPosSnsrSts;
+extern CONST(uint8, SFTYPARKLOCKPOSNACQN_VAR) SftyReplcmParkLockActrPosSnsrSts;
 #define SFTYREPLCMT_STOP_SEC_CALIB_8
 #include "MemMap.h"
 /* Stop: SFTYREPLCMT_STOP_SEC_CALIB_8 (calib) */
@@ -2875,7 +2851,7 @@ extern CONST(uint8, SFTYPARKLOCKPOSNACQN_VAR)SftyReplcmParkLockActrPosSnsrSts;
 #define SFTYREPLCMT_START_SEC_CALIB_32
 #include "MemMap.h"
 
-extern CONST(uint32, SFTYPARKLOCKPOSNACQN_VAR)SftyReplcmParkLockPosnAcqnSENTSnrDataRxCrcVal;
+extern CONST(uint32, SFTYPARKLOCKPOSNACQN_VAR) SftyReplcmParkLockPosnAcqnSENTSnrDataRxCrcVal;
 #define SFTYREPLCMT_STOP_SEC_CALIB_32
 #include "MemMap.h"
 /* Stop: SFTYREPLCMT_STOP_SEC_CALIB_32 (calib) */
@@ -2884,7 +2860,7 @@ extern CONST(uint32, SFTYPARKLOCKPOSNACQN_VAR)SftyReplcmParkLockPosnAcqnSENTSnrD
 #define SFTYREPLCMT_START_SEC_CALIB_32
 #include "MemMap.h"
 
-extern CONST(uint32, SFTYPARKLOCKPOSNACQN_VAR)SftyReplcmParkLockPosnAcqnSENTSnrDataRxSnsrDataVal;
+extern CONST(uint32, SFTYPARKLOCKPOSNACQN_VAR) SftyReplcmParkLockPosnAcqnSENTSnrDataRxSnsrDataVal;
 
 #define SFTYREPLCMT_STOP_SEC_CALIB_32
 #include "MemMap.h"
@@ -2894,7 +2870,7 @@ extern CONST(uint32, SFTYPARKLOCKPOSNACQN_VAR)SftyReplcmParkLockPosnAcqnSENTSnrD
 #define SFTYREPLCMT_START_SEC_CALIB_32
 #include "MemMap.h"
 
-extern CONST(uint32, SFTYPARKLOCKPOSNACQN_VAR)SftyReplcmParkLockPosnAcqnSENTSnrDataRxTiStampDmaVal;
+extern CONST(uint32, SFTYPARKLOCKPOSNACQN_VAR) SftyReplcmParkLockPosnAcqnSENTSnrDataRxTiStampDmaVal;
 #define SFTYREPLCMT_STOP_SEC_CALIB_32
 #include "MemMap.h"
 /* Stop: SFTYREPLCMT_STOP_SEC_CALIB_32 (calib) */
@@ -2903,7 +2879,7 @@ extern CONST(uint32, SFTYPARKLOCKPOSNACQN_VAR)SftyReplcmParkLockPosnAcqnSENTSnrD
 #define SFTYREPLCMT_START_SEC_CALIB_32
 #include "MemMap.h"
 
-extern CONST(uint32, SFTYPARKLOCKPOSNACQN_VAR)SftyReplcmParkLockPosnAcqnSENTSnrDataRxTiStampRtsSVal;
+extern CONST(uint32, SFTYPARKLOCKPOSNACQN_VAR) SftyReplcmParkLockPosnAcqnSENTSnrDataRxTiStampRtsSVal;
 
 #define SFTYREPLCMT_STOP_SEC_CALIB_32
 #include "MemMap.h"
@@ -2914,7 +2890,7 @@ extern CONST(uint32, SFTYPARKLOCKPOSNACQN_VAR)SftyReplcmParkLockPosnAcqnSENTSnrD
 #include "MemMap.h"
 
 
-extern CONST(uint32, SFTYPARKLOCKPOSNACQN_VAR)SftyReplcmParkLockPosnAcqnSENTSnrDataRxIntStatVal;
+extern CONST(uint32, SFTYPARKLOCKPOSNACQN_VAR) SftyReplcmParkLockPosnAcqnSENTSnrDataRxIntStatVal;
 #define SFTYREPLCMT_STOP_SEC_CALIB_32
 #include "MemMap.h"
 /* Stop: SFTYREPLCMT_STOP_SEC_CALIB_32 (calib) */
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/src/SftyReplcmt_data.c b/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/src/SftyReplcmt_data.c
index 8061b42a2..c82d4184e 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/src/SftyReplcmt_data.c
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/src/SftyReplcmt_data.c
@@ -3219,7 +3219,7 @@ CONST(uint32, SFTYPARKLOCKPOSNACQN_VAR)SftyReplcmParkLockPosnAcqnSENTSnrDataRxTi
 @@ END
 */
 
-CONST(uint32, SFTYPARKLOCKPOSNACQN_VAR)SftyReplcmParkLockPosnAcqnSENTSnrDataRxTiStampRtsSVal = 0U;
+CONST(uint32, SFTYPARKLOCKPOSNACQN_VAR) SftyReplcmParkLockPosnAcqnSENTSnrDataRxTiStampRtsSVal = 0U;
 
 #define SFTYREPLCMT_STOP_SEC_CALIB_32
 #include "MemMap.h"
diff --git a/src/fw_cu/Components/Safety/Sfty_Inv/SftyAcEvln/include/SftyAcEvln.h b/src/fw_cu/Components/Safety/Sfty_Inv/SftyAcEvln/include/SftyAcEvln.h
index 7ecf8d8fc..4d3e36090 100644
--- a/src/fw_cu/Components/Safety/Sfty_Inv/SftyAcEvln/include/SftyAcEvln.h
+++ b/src/fw_cu/Components/Safety/Sfty_Inv/SftyAcEvln/include/SftyAcEvln.h
@@ -7,7 +7,7 @@
 /* Department: Valeo Siemens eAutomotive                                  */
 /* I DT EC R&D                                                            */
 /* ********************************************************************** */
-/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2021              */
+/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2022              */
 /* All Rights Reserved. Confidential                                      */
 /* ********************************************************************** */
 #ifndef SFTYACEVLN_H
@@ -96,7 +96,7 @@ extern FUNC(void, SFTY_AC_EVLN_CODE) SftyAcEvln_OverCurrPhaWReinitMonrData(void)
 /*! @} doxygen end of group definition */
 #endif
 /* ********************************************************************** */
-/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2021              */
+/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2022              */
 /* All Rights Reserved. Confidential */
 /* ********************************************************************** */
-/*==================[end of file]============================================*/
+/*==================[end of file]=========================================*/
diff --git a/src/fw_cu/Components/Safety/Sfty_Inv/SftyAcEvln/include/SftyAcEvln_data.h b/src/fw_cu/Components/Safety/Sfty_Inv/SftyAcEvln/include/SftyAcEvln_data.h
index 08582e0e0..ccbddcb2d 100644
--- a/src/fw_cu/Components/Safety/Sfty_Inv/SftyAcEvln/include/SftyAcEvln_data.h
+++ b/src/fw_cu/Components/Safety/Sfty_Inv/SftyAcEvln/include/SftyAcEvln_data.h
@@ -3,7 +3,7 @@
 /* ADD Container: SftyAcEvln                                         */
 /* ADD Container Version:01.01                                       */
 /* ***************************************************************** */
-/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2021                 */
+/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2022                 */
 /* All Rights Reserved. Confidential                                 */
 /* ***************************************************************** */
 #ifndef\tSFTYACEVLN_DATA_H
@@ -294,7 +294,7 @@ extern CONST(uint8, SFTYDCEVLN_VAR) SftyReplcmtAcEvlnMeasCoherFltSts;
 
 #endif
 /* ***************************************************************** */
-/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2021                 */
+/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2022                 */
 /* All Rights Reserved. Confidential                                 */
 /* ***************************************************************** */
 /*==================[end of file]====================================*/
diff --git a/src/fw_cu/Components/Safety/Sfty_Inv/SftyAcEvln/src/SftyAcEvln.c b/src/fw_cu/Components/Safety/Sfty_Inv/SftyAcEvln/src/SftyAcEvln.c
index d8d49f769..6230abd48 100644
--- a/src/fw_cu/Components/Safety/Sfty_Inv/SftyAcEvln/src/SftyAcEvln.c
+++ b/src/fw_cu/Components/Safety/Sfty_Inv/SftyAcEvln/src/SftyAcEvln.c
@@ -8,7 +8,7 @@
 /* Department: Valeo Siemens eAutomotive                                  */
 /* I DT EC R&D                                                            */
 /* ********************************************************************** */
-/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2021              */
+/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2022              */
 /* All Rights Reserved. Confidential                                      */
 /* ********************************************************************** */
 
@@ -47,7 +47,7 @@
 
 /*================== [defines] ==============================================*/
 
-
+#define SFTY_AC_EVLN_FLT_STS_PASSED  (1U)
 /*================== [type definitions] =====================================*/
 
 /*================== [local data] ===========================================*/
@@ -79,10 +79,47 @@ STATIC VAR(uint16, SFTYACEVLN_VAR) SftyAcEvlnReinitTimCntr[SYSDEF_EM_PHA_CNT_MAX
 */
 STATIC VAR(uint8, SFTYACEVLN_VAR) SftyAcEvlnReinitCntr[SYSDEF_EM_PHA_CNT_MAX] = {0U};
 
+/*
+@@ SYMBOL = SftyAcEvlnOverUnderCurFltSts
+@@ A2L_TYPE = MEASURE
+@@ DATA_TYPE = UBYTE
+@@ DIMENSION = 3
+@@ DESCRIPTION = "Over/Under current fault status read via Sftye2eFpga"
+@@ GROUP = SftyAcEvln
+@@ END
+*/
+/*! \\cvar Over/Under current fault status read via Sftye2eFpga read via Sftye2eFpg ; unit \'-\' */
+STATIC VAR(boolean, SFTYACEVLN_VAR) SftyAcEvlnOverUnderCurFltSts[SYSDEF_EM_PHA_CNT_MAX] =
+{SFTY_AC_EVLN_FLT_STS_PASSED, SFTY_AC_EVLN_FLT_STS_PASSED, SFTY_AC_EVLN_FLT_STS_PASSED};
+
 #define SFTYACEVLN_STOP_SEC_VAR_AREA_CMN_FAST_INIT_8
 #include "MemMap.h"
 
 /*================== [definition of local functions] ========================*/
+
+/******************************************************************/
+/*!
+ * \\fn        void SftyAcEvln_GetRxCrcErrMonrSt(void)
+ * \\brief     This function gets CRC status of RxS from SftyE2eFpga
+ * \\Parent_DD SftyAcEvln_MainFunctionArea1
+ */
+/******************************************************************/
+LOCAL_INLINE void SftyAcEvln_GetRxCrcErrMonrSt(void)
+{
+#ifndef SERIES_PRODUCTION
+
+   if (SftyReplcmtAcEvlnE2eFpgaErrStStiEna == TRUE)
+   {
+      SftyAcEvlnRxCrcErrMonrSt = SftyReplcmtE2eFpgaRxCrcErrMonrSt;
+   }
+   else
+#endif /* SERIES_PRODUCTION */
+   {
+      SftyAcEvlnRxCrcErrMonrSt = SftyE2eFpgaRxSCrcErrMonrSt;
+   }
+   return;
+}
+
 /******************************************************************/
 /*!
  * \\fn        void SftyAcEvln_GetAcIRawVal(uint8 idxPwrUnit)
@@ -98,44 +135,61 @@ LOCAL_INLINE void SftyAcEvln_GetAcIRawVal(uint8 idxPwrUnit)
    SWIT_SftyAcEvln_GetAcIRawVal_BgnHook ();
 #endif
 
+   /* ******** Variables declaration *********** */
+   uint8          idx;
+
+   /* ************* Source code **************** */
+   for(idx = 0U; idx < (uint8)SYSDEF_EM_PHA_CNT_MAX; idx++)
+   {
+
 #ifndef SERIES_PRODUCTION
-   if(SftyReplcmtHvAcIRawValStiEna == TRUE)
+      if(SftyReplcmtHvAcIRawValStiEna == TRUE)
+      {
+         /* Values shall be manually set by tester */
+         SftyAcEvlnIRawVal[idxPwrUnit][idx] = SftyReplcmtHvAcIRawVal[idxPwrUnit][idx];
+      }
+   else
+#endif /* SERIES_PRODUCTION */
+      {
+         /* Values are copied from SftyE2eFpga */
+         SftyAcEvlnIRawVal[idxPwrUnit][idx] = SftyE2eFpgaIPhaRawVal[idxPwrUnit][idx];
+      }
+   }
+   return;
+}
+
+/******************************************************************/
+/*!
+ * \\fn        void SftyAcEvln_ChkAcIPhaRngHi(uint8 idxPwrUnit)
+ * \\brief     This function checks the range high of physical phase current values
+ * \\param     [in] idxPwrUnit - Number of phase sets (1 or 2)
+ * \\param     [in] idx - index of phase current
+ * \\Parent_DD SftyAcEvln_MainFunctionArea1
+ */
+/******************************************************************/
+LOCAL_INLINE void SftyAcEvln_ChkAcIPhaRngHi(uint8 idxPwrUnit, uint8 idx)
+{
+   /* Lower boundary check is successful */
+   /* Check Upper boundary */
+   if(SftyAcEvlnIPhaVal[idxPwrUnit][idx] >= SftyAcEvlnAcPhaIRngHiThd[idxPwrUnit][idx])
    {
-      /* Values shall be manually set by tester */
-      SftyAcEvlnIRawVal[idxPwrUnit][SFTY_PHA_U] = SftyReplcmtHvAcIRawVal[idxPwrUnit][SFTY_PHA_U];
-      SftyAcEvlnIRawVal[idxPwrUnit][SFTY_PHA_V] = SftyReplcmtHvAcIRawVal[idxPwrUnit][SFTY_PHA_V];
-      SftyAcEvlnIRawVal[idxPwrUnit][SFTY_PHA_W] = SftyReplcmtHvAcIRawVal[idxPwrUnit][SFTY_PHA_W];
+      /* Value is higher than allowed, report error */
+      SftyAcEvlnRngHiErrMonrSt[idxPwrUnit][idx] = ERR_DEB_MONR_STS_FAILED;
+      SftyAcEvlnRngLoErrMonrSt[idxPwrUnit][idx] = ERR_DEB_MONR_STS_PASSED;
    }
    else
-#endif /* SERIES_PRODUCTION */
    {
-      /* Values are copied from SftyE2eFpga */
-      /* Update all phase values from SftyE2eFpga */
-      SftyAcEvlnIRawVal[idxPwrUnit][SFTY_PHA_U] = SftyE2eFpgaIPhaRawVal[idxPwrUnit][SFTY_PHA_U];
-      SftyAcEvlnIRawVal[idxPwrUnit][SFTY_PHA_V] = SftyE2eFpgaIPhaRawVal[idxPwrUnit][SFTY_PHA_V];
-      SftyAcEvlnIRawVal[idxPwrUnit][SFTY_PHA_W] = SftyE2eFpgaIPhaRawVal[idxPwrUnit][SFTY_PHA_W];
+      /* No error */
+      SftyAcEvlnRngLoErrMonrSt[idxPwrUnit][idx] = ERR_DEB_MONR_STS_PASSED;
+      SftyAcEvlnRngHiErrMonrSt[idxPwrUnit][idx] = ERR_DEB_MONR_STS_PASSED;
    }
-\t  /* Read Error Monmitor Status of SftyE2eFpga */
-#ifndef SERIES_PRODUCTION   
-\t  
-\t  if (SftyReplcmtAcEvlnE2eFpgaErrStStiEna == TRUE)
-\t  {
-\t\t SftyAcEvlnRxCrcErrMonrSt = SftyReplcmtE2eFpgaRxCrcErrMonrSt;
-\t  }
-\t  else
-\t\t 
-#endif /* SERIES_PRODUCTION */
-\t\t 
-\t  {
-\t\t SftyAcEvlnRxCrcErrMonrSt = SftyE2eFpgaRxSCrcErrMonrSt;
-\t  }
 
    return;
 }
 /******************************************************************/
 /*!
- * \\fn        void SftyAcEvln_ChkAcIPhaElecRng(uint8 idxPwrUnit)
- * \\brief     This function checks the electrical range of raw phase current values
+ * \\fn        void SftyAcEvln_ChkAcIPhaRng(uint8 idxPwrUnit)
+ * \\brief     This function checks the range of physical phase current values
  * \\param     [in] idxPwrUnit - Number of phase sets (1 or 2)
  * \\Parent_DD SftyAcEvln_MainFunctionArea1
  */
@@ -165,125 +219,209 @@ LOCAL_INLINE void SftyAcEvln_ChkAcIPhaRng(uint8 idxPwrUnit)
 \t      {
 \t         /* Lower boundary check is successful */
 \t         /* Check Upper boundary */
-\t         if(SftyAcEvlnIPhaVal[idxPwrUnit][idx] >= SftyAcEvlnAcPhaIRngHiThd[idxPwrUnit][idx])
-\t         {
-\t            /* Value is higher than allowed, report error */
-\t            SftyAcEvlnRngHiErrMonrSt[idxPwrUnit][idx] = ERR_DEB_MONR_STS_FAILED;
-\t\t\t\t   SftyAcEvlnRngLoErrMonrSt[idxPwrUnit][idx] = ERR_DEB_MONR_STS_PASSED;
-\t         }
-\t         else
-\t         {
-\t            /* No error */
-\t            SftyAcEvlnRngLoErrMonrSt[idxPwrUnit][idx] = ERR_DEB_MONR_STS_PASSED;
-\t            SftyAcEvlnRngHiErrMonrSt[idxPwrUnit][idx] = ERR_DEB_MONR_STS_PASSED;
-\t         }
+\t         SftyAcEvln_ChkAcIPhaRngHi(idxPwrUnit, idx);
 \t      }
 \t   }
-   \t}
+   }
    /* precondition check fail, set monitor status inactive */
-    else
-   \t{
+   else
+   {
        /* Do nothing */
 \t}
+
+   return;
 }
 
 /******************************************************************/
 /*!
- * \\fn        void SftyAcEvln_OverCurRstHandler(uint8 idxPwrUnit)
- * \\brief     This function checks the phase current fault reset status,
- * \\          toggle reinit status if reinit conditin is met and set
- * \\          hw fail status to fail
- * \\param     [in] idxPwrUnit - 3-phase sets electrical machine phase count
+ * \\fn        void SftyAcEvln_UpdOverUnderCurFltSts(void)
+ * \\brief     This function updates Over Under current fault
+ *            from SftyE2eFpga
  * \\Parent_DD SftyAcEvln_MainFunctionAreaCmn
  */
 /******************************************************************/
-LOCAL_INLINE void SftyAcEvln_OverCurRstHandler(uint8 idxPwrUnit)
+LOCAL_INLINE void SftyAcEvln_UpdOverUnderCurFltSts(void)
 {
-   /* ******** Variables declaration *********** */
-   uint8 \t\t idx;
-   boolean        SftyE2eFpgaOverUnderCurFltSts[SYSDEF_EM_PHA_CNT_MAX];
 
-   
-   /* ************* Source code **************** */
 #ifndef SERIES_PRODUCTION
+   
    if (SftyReplcmtHvAcIOcFltStiEna == TRUE)
    {
-      SftyE2eFpgaOverUnderCurFltSts[SYSDEF_PHA_U] = SftyReplcmtE2eFpgaOverUnderCurUFltSts;
-      SftyE2eFpgaOverUnderCurFltSts[SYSDEF_PHA_V] = SftyReplcmtE2eFpgaOverUnderCurVFltSts;
-      SftyE2eFpgaOverUnderCurFltSts[SYSDEF_PHA_W] = SftyReplcmtE2eFpgaOverUnderCurWFltSts;
+      SftyAcEvlnOverUnderCurFltSts[SYSDEF_PHA_U] = SftyReplcmtE2eFpgaOverUnderCurUFltSts;
+      SftyAcEvlnOverUnderCurFltSts[SYSDEF_PHA_V] = SftyReplcmtE2eFpgaOverUnderCurVFltSts;
+      SftyAcEvlnOverUnderCurFltSts[SYSDEF_PHA_W] = SftyReplcmtE2eFpgaOverUnderCurWFltSts;
    }
-   else\t
+   else
+
 #endif
+
    {
-      SftyE2eFpgaOverUnderCurFltSts[SYSDEF_PHA_U] = SftyE2eFpgaOverUnderCurUFltSts;
-      SftyE2eFpgaOverUnderCurFltSts[SYSDEF_PHA_V] = SftyE2eFpgaOverUnderCurVFltSts;
-      SftyE2eFpgaOverUnderCurFltSts[SYSDEF_PHA_W] = SftyE2eFpgaOverUnderCurWFltSts;
+      SftyAcEvlnOverUnderCurFltSts[SYSDEF_PHA_U] = SftyE2eFpgaOverUnderCurUFltSts;
+      SftyAcEvlnOverUnderCurFltSts[SYSDEF_PHA_V] = SftyE2eFpgaOverUnderCurVFltSts;
+      SftyAcEvlnOverUnderCurFltSts[SYSDEF_PHA_W] = SftyE2eFpgaOverUnderCurWFltSts;
    }
+
+   return;
+}
+
+/******************************************************************/
+/*!
+ * \\fn        void SftyAcEvln_OcHWErrMonrStUpd(uint8 idx, uint8 errMonrSt)
+ * \\brief     This function set the OcHW error monitor status
+ *            of the passed phase current to the passed error status
+ * \\param     [in] idx - 3-phase sets electrical machine phase count
+ * \\param     [in] errMonrSt - error monitor status
+ * \\Parent_DD SftyAcEvln_MainFunctionAreaCmn
+ */
+/******************************************************************/
+LOCAL_INLINE void SftyAcEvln_OcHWErrMonrStUpd(uint8 idx, uint8 errMonrSt)
+{
+   /* set hw fault status fail */
+   if (idx == SYSDEF_PHA_U)
+   {
+      SftyAcEvlnPhaseUOcHWErrMonrSt = errMonrSt;
+   }
+   else if (idx == SYSDEF_PHA_V)
+   {
+      SftyAcEvlnPhaseVOcHWErrMonrSt = errMonrSt;
+   }
+   else   /* ==> (idx == SYSDEF_PHA_W) */
+   {
+      SftyAcEvlnPhaseWOcHWErrMonrSt = errMonrSt;
+   }
+
+   return;
+}
+
+/******************************************************************/
+/*!
+ * \\fn        void SftyAcEvln_UpdIPhaVal(uint8 idxPwrUnit, uint8 idx)
+ * \\brief     This function update phase values from SftyE2eFpga
+ * \\param     [in] idx - 3-phase sets electrical machine phase count
+ * \\param     [in] idxPwrUnit - Number of phase sets (1 or 2)
+ * \\Parent_DD SftyAcEvln_MainFunctionAreaCmn
+ */
+/******************************************************************/
+LOCAL_INLINE void SftyAcEvln_UpdIPhaVal(uint8 idxPwrUnit, uint8 idx)
+{
+#ifndef SERIES_PRODUCTION
+
+   if (SftyReplcmtHvAcIRawValStiEna == TRUE)
+   {
+      /* Values shall be manually set by tester */
+      SftyAcEvlnIRawVal[idxPwrUnit][idx] = SftyReplcmtHvAcIRawVal[idxPwrUnit][idx];
+   }
+   else
+#endif /* SERIES_PRODUCTION */
+   {
+      /* Update phase values from SftyE2eFpga */
+      SftyAcEvlnIRawVal[idxPwrUnit][idx] = SftyE2eFpgaIPhaRawVal[idxPwrUnit][idx];
+   }
+
+   return;
+}
+
+/******************************************************************/
+/*!
+ * \\fn        void SftyAcEvln_FltTogglHndlr(uint8 idx)
+ * \\brief     This function handles toggling of fault reinit status
+ * \\param     [in] idx - 3-phase sets electrical machine phase count
+ * \\Parent_DD SftyAcEvln_MainFunctionAreaCmn
+ */
+/******************************************************************/
+LOCAL_INLINE void SftyAcEvln_FltTogglHndlr(uint8 idx)
+{
+   if (SftyAcEvlnReinitTimCntr[idx] > SftyAcEvlnOcFltWaitRstCntThd)
+   {
+      /* clear time counter for next round check */
+      SftyAcEvlnReinitTimCntr[idx] = 0u;
+
+      /* increase counter of fault rest times */
+      SftyAcEvlnReinitCntr[idx]++;
+
+      /* toggle fault reinit status */
+      if (SftyAcEvlnSetOverCurrPhaReinitSt[idx] == TRUE)
+      {
+         SftyAcEvlnSetOverCurrPhaReinitSt[idx] = FALSE;
+      }
+      else
+      {
+         SftyAcEvlnSetOverCurrPhaReinitSt[idx] = TRUE;
+      }
+   }
+   else
+   {
+      /* Do nothing */
+   }
+
+   return;
+}
+/******************************************************************/
+/*!
+ * \\fn        boolean SftyAcEvln_ChkTogglAllwd(uint8 idxPwrUnit, uint8 idx)
+ * \\brief     This function checks whether fault toggel condition
+ *            are met
+ * \\param     [in] idxPwrUnit - Number of phase sets (1 or 2)
+ * \\param     [in] idx - 3-phase sets electrical machine phase count
+ * \\Parent_DD SftyAcEvln_MainFunctionAreaCmn
+ */
+/******************************************************************/
+LOCAL_INLINE boolean SftyAcEvln_ChkTogglAllwd(uint8 idxPwrUnit, uint8 idx)
+{
+   boolean retVal;
+
+   if((SftyAcEvlnIRawVal[idxPwrUnit][idx] < SftyAcEvlnAcPhaIHiErrRstThd[idxPwrUnit][idx]) &&
+      (SftyAcEvlnIRawVal[idxPwrUnit][idx] > SftyAcEvlnAcPhaILoErrRstThd[idxPwrUnit][idx]) &&
+      (SftyAcEvlnReinitCntr[idx] < SftyAcEvlnOcFltRstThd) )
+   {
+      retVal = TRUE;
+   }
+   else
+   {
+      retVal = FALSE;
+   }
+
+   return retVal;
+}
+/******************************************************************/
+/*!
+ * \\fn        void SftyAcEvln_OverCurRstHandler(uint8 idxPwrUnit)
+ * \\brief     This function checks the phase current fault reset status,
+ * \\          toggle reinit status if reinit conditin is met and set
+ * \\          hw fail status to fail
+ * \\param     [in] idxPwrUnit - Number of phase sets (1 or 2)
+ * \\Parent_DD SftyAcEvln_MainFunctionAreaCmn
+ */
+/******************************************************************/
+LOCAL_INLINE void SftyAcEvln_OverCurRstHandler(uint8 idxPwrUnit)
+{
+   /* ******** Variables declaration *********** */
+   uint8   idx;
+   boolean chkRes;
+   /* ************* Source code **************** */
+   SftyAcEvln_UpdOverUnderCurFltSts();
 \t   
-   for (idx = 0U; idx < (uint8)SYSDEF_EM_PHA_CNT_MAX; idx++)
+   for (idx = 0U; idx < SYSDEF_EM_PHA_CNT_MAX; idx++)
    {
       /* check if phase current is in error status */
-      if (SftyE2eFpgaOverUnderCurFltSts[idx] == FALSE)
+      if (SftyAcEvlnOverUnderCurFltSts[idx] == FALSE)
       {
          /* set hw fault status fail */
-         if (idx == SYSDEF_PHA_U)
-         {
-            SftyAcEvlnPhaseUOcHWErrMonrSt = ERR_DEB_MONR_STS_FAILED;
-         }
-         else if (idx == SYSDEF_PHA_V)
-         {
-            SftyAcEvlnPhaseVOcHWErrMonrSt = ERR_DEB_MONR_STS_FAILED; 
-         }
-         else   /* ==> (idx == SYSDEF_PHA_W) */
-         {
-            SftyAcEvlnPhaseWOcHWErrMonrSt = ERR_DEB_MONR_STS_FAILED;
-         }
+         SftyAcEvln_OcHWErrMonrStUpd(idx, ERR_DEB_MONR_STS_FAILED);
 
+         /* Update phase values from SftyE2eFpga*/
+         SftyAcEvln_UpdIPhaVal(idxPwrUnit, idx);
 
-#ifndef SERIES_PRODUCTION
-         if (SftyReplcmtHvAcIRawValStiEna == TRUE)
-         {
-            /* Values shall be manually set by tester */
-            SftyAcEvlnIRawVal[idxPwrUnit][idx] = SftyReplcmtHvAcIRawVal[idxPwrUnit][idx];
-         }
-         else
-#endif /* SERIES_PRODUCTION */
-         {
-            /* Update phase values from SftyE2eFpga */
-            SftyAcEvlnIRawVal[idxPwrUnit][idx] = SftyE2eFpgaIPhaRawVal[idxPwrUnit][idx];
-         }
+         /* check if phase current is in fault reinit */
+         chkRes = SftyAcEvln_ChkTogglAllwd(idxPwrUnit, idx);
 
-         /* check if phase current is in fault reinit  */
-         if ((SftyAcEvlnIRawVal[idxPwrUnit][idx] < SftyAcEvlnAcPhaIHiErrRstThd[idxPwrUnit][idx])
-\t\t\t && 
-\t\t\t (SftyAcEvlnIRawVal[idxPwrUnit][idx] > SftyAcEvlnAcPhaILoErrRstThd[idxPwrUnit][idx])
-\t\t\t && 
-\t\t\t (SftyAcEvlnReinitCntr[idx] < SftyAcEvlnOcFltRstThd))
+         if ( chkRes == TRUE )
          {
             /* wait for debouncing time */
             SftyAcEvlnReinitTimCntr[idx]++;
-            if (SftyAcEvlnReinitTimCntr[idx] > SftyAcEvlnOcFltWaitRstCntThd)
-            {
-               /* clear time counter for next round check */
-               SftyAcEvlnReinitTimCntr[idx] = 0u;
-\t\t\t\t\t\t
-               /* increase counter of fault rest times */
-               SftyAcEvlnReinitCntr[idx]++;
-
-               /* toggle fault reinit status */
-               if (SftyAcEvlnSetOverCurrPhaReinitSt[idx] == TRUE)
-               {
-                  SftyAcEvlnSetOverCurrPhaReinitSt[idx] = FALSE;
-               }
-               else
-               {
-                  SftyAcEvlnSetOverCurrPhaReinitSt[idx] = TRUE;
-               }
-            }
-            else
-            {
-               /* Do nothing */
-            }
+
+            /* handle toggling of fault reinit status*/
+            SftyAcEvln_FltTogglHndlr(idx);
          }
          else
          {
@@ -294,18 +432,7 @@ LOCAL_INLINE void SftyAcEvln_OverCurRstHandler(uint8 idxPwrUnit)
       else
       {
          /* clear reinit status and hw fault status and counter */
-         if (idx == SYSDEF_PHA_U)
-         {
-            SftyAcEvlnPhaseUOcHWErrMonrSt = ERR_DEB_MONR_STS_PASSED;
-         }
-         else if (idx == SYSDEF_PHA_V)
-         {
-\t\t\t\t  SftyAcEvlnPhaseVOcHWErrMonrSt = ERR_DEB_MONR_STS_PASSED; 
-         }
-         else   /* ==> (idx == SYSDEF_PHA_W) */
-         {
-            SftyAcEvlnPhaseWOcHWErrMonrSt = ERR_DEB_MONR_STS_PASSED;
-         }
+         SftyAcEvln_OcHWErrMonrStUpd(idx, ERR_DEB_MONR_STS_PASSED);
 \t\t 
 \t\t /* clear time counter for next round check */
 \t     SftyAcEvlnReinitTimCntr[idx] = 0u;
@@ -335,17 +462,17 @@ LOCAL_INLINE void SftyAcEvln_ScaAcIPhaVal(uint8 idxPwrUnit)
   /* ************* Source code **************** */
 
   /* phasic value = (raw value + offset) * gain */
-  SftyAcEvlnIPhaVal[idxPwrUnit][SFTY_PHA_U] = (MLIB_F32S32((sint32)SftyAcEvlnIRawVal[idxPwrUnit][SFTY_PHA_U])
+  SftyAcEvlnIPhaVal[idxPwrUnit][SYSDEF_PHA_U] = (MLIB_F32S32((sint32)SftyAcEvlnIRawVal[idxPwrUnit][SYSDEF_PHA_U])
                                               + SftyHvAcIMeasProdData.RAW2AMPERE_U_OFFSET)
                                               * SftyHvAcIMeasProdData.RAW2AMPERE_U_GAIN;
 
   /* phasic value = (raw value + offset) * gain */
-  SftyAcEvlnIPhaVal[idxPwrUnit][SFTY_PHA_V] = (MLIB_F32S32((sint32)SftyAcEvlnIRawVal[idxPwrUnit][SFTY_PHA_V])
+  SftyAcEvlnIPhaVal[idxPwrUnit][SYSDEF_PHA_V] = (MLIB_F32S32((sint32)SftyAcEvlnIRawVal[idxPwrUnit][SYSDEF_PHA_V])
                                               + SftyHvAcIMeasProdData.RAW2AMPERE_V_OFFSET)
                                               * SftyHvAcIMeasProdData.RAW2AMPERE_V_GAIN;
 
   /* phasic value = (raw value + offset) * gain */
-  SftyAcEvlnIPhaVal[idxPwrUnit][SFTY_PHA_W] = (MLIB_F32S32((sint32)SftyAcEvlnIRawVal[idxPwrUnit][SFTY_PHA_W])
+  SftyAcEvlnIPhaVal[idxPwrUnit][SYSDEF_PHA_W] = (MLIB_F32S32((sint32)SftyAcEvlnIRawVal[idxPwrUnit][SYSDEF_PHA_W])
                                               + SftyHvAcIMeasProdData.RAW2AMPERE_W_OFFSET)
                                               * SftyHvAcIMeasProdData.RAW2AMPERE_W_GAIN;
 
@@ -375,9 +502,9 @@ LOCAL_INLINE ErrDeb_MonrStsType SftyAcEvln_ChkAcIPhaSum(uint8 idxPwrUnit)
      /* ************* Source code **************** */
 
      /* Calculate sum */
-     sum = SftyAcEvlnIPhaVal[idxPwrUnit][SFTY_PHA_U] +
-           SftyAcEvlnIPhaVal[idxPwrUnit][SFTY_PHA_V] +
-           SftyAcEvlnIPhaVal[idxPwrUnit][SFTY_PHA_W];
+     sum = SftyAcEvlnIPhaVal[idxPwrUnit][SYSDEF_PHA_U] +
+           SftyAcEvlnIPhaVal[idxPwrUnit][SYSDEF_PHA_V] +
+           SftyAcEvlnIPhaVal[idxPwrUnit][SYSDEF_PHA_W];
 
      /* calculate absolute value of sum of all phases */
      SftyAcEvlnPhalSum[idxPwrUnit] = MLIB_F32AbsF32(sum);
@@ -456,6 +583,9 @@ FUNC(void, SFTY_AC_EVLN_CODE) SftyAcEvln_MainFunctionArea1(void)
    uint8                 idxPu = 0U;
    uint8                 pha;
    
+   /* Read Error Monmitor Status of SftyE2eFpga */
+   SftyAcEvln_GetRxCrcErrMonrSt();
+
    /* Logic to loop either once or twice based on if there is 1 or 2 power units */
 #if SYSDEF_EM_PHA_SET_CNT_MAX > 1U
    for(idxPu = 0U; idxPu < (uint8)SYSDEF_EM_PHA_SET_CNT_MAX; idxPu++)
@@ -515,11 +645,10 @@ FUNC(void, SFTY_AC_EVLN_CODE) SftyAcEvln_InitArea1(void)
    {
       for(pha = 0u; pha < SYSDEF_EM_PHA_CNT_MAX; pha++)
       {
-\t\t SftyAcEvlnIRawVal[idxPu][pha] = 0;
+         SftyAcEvlnIRawVal[idxPu][pha] = 0;
          SftyAcEvlnRngHiErrMonrSt[idxPu][pha]  = ERR_DEB_MONR_STS_INACTIVE;
          SftyAcEvlnRngLoErrMonrSt[idxPu][pha]  = ERR_DEB_MONR_STS_INACTIVE;
-\t\t SftyAcEvlnIPhaVal[idxPu][pha] = 0.0f;
-         
+         SftyAcEvlnIPhaVal[idxPu][pha] = 0.0f;
       }
    } 
 
@@ -687,6 +816,10 @@ FUNC(void, SFTY_AC_EVLN_CODE) SftyAcEvln_InitAreaCmn(void)
 \tSftyAcEvlnPhaseVOcHWErrMonrSt = ERR_DEB_MONR_STS_INACTIVE;
 \tSftyAcEvlnPhaseWOcHWErrMonrSt = ERR_DEB_MONR_STS_INACTIVE;
 
+\tSftyAcEvlnOverUnderCurFltSts[SYSDEF_PHA_U] = SFTY_AC_EVLN_FLT_STS_PASSED;
+\tSftyAcEvlnOverUnderCurFltSts[SYSDEF_PHA_V] = SFTY_AC_EVLN_FLT_STS_PASSED;
+\tSftyAcEvlnOverUnderCurFltSts[SYSDEF_PHA_W] = SFTY_AC_EVLN_FLT_STS_PASSED;
+
 \t/* Initialized reinitial timer */
 \tSftyAcEvlnReinitTimCntr[0]    = 0U;
 \tSftyAcEvlnReinitTimCntr[1]\t  = 0U;
@@ -798,7 +931,7 @@ FUNC(void, SFTY_AC_EVLN_CODE) SftyAcEvln_OverCurrPhaWReinitMonrData(void)/* PRQA
 /*================== [closure] ==============================================*/
 /*! @} doxygen end of group definition */
 /* ************************************************************************* */
-/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2021                 */
+/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2022                 */
 /* All Rights Reserved. Confidential                                         */
 /* ************************************************************************* */
 /*==================[end of file]============================================*/
diff --git a/src/fw_cu/Components/Safety/Sfty_Inv/SftyAcEvln/src/SftyAcEvln_data.c b/src/fw_cu/Components/Safety/Sfty_Inv/SftyAcEvln/src/SftyAcEvln_data.c
index 6a5bbf4c0..1a068da21 100644
--- a/src/fw_cu/Components/Safety/Sfty_Inv/SftyAcEvln/src/SftyAcEvln_data.c
+++ b/src/fw_cu/Components/Safety/Sfty_Inv/SftyAcEvln/src/SftyAcEvln_data.c
@@ -3,7 +3,7 @@
 /* ADD Container: SftyAcEvln                                         */
 /* ADD Container Version: 01.01                                      */
 /* ***************************************************************** */
-/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2021                 */
+/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2022                 */
 /* All Rights Reserved. Confidential                                 */
 /* ***************************************************************** */
 
@@ -576,7 +576,7 @@ VAR(uint8, SFTYACEVLN_VAR) SftyAcEvlnRxCrcErrMonrSt = 0U;
 
 
 /* ***************************************************************** */
-/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2021                 */
+/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2022                 */
 /* All Rights Reserved. Confidential                                 */
 /* ***************************************************************** */
 /*==================[end of file]====================================*/
diff --git a/src/fw_cu/Components/Safety/Sfty_Inv/SftyActvDchaCtrl/include/SftyActvDchaCtrl_data.h b/src/fw_cu/Components/Safety/Sfty_Inv/SftyActvDchaCtrl/include/SftyActvDchaCtrl_data.h
index fe2f7bf6f..c68b491da 100644
--- a/src/fw_cu/Components/Safety/Sfty_Inv/SftyActvDchaCtrl/include/SftyActvDchaCtrl_data.h
+++ b/src/fw_cu/Components/Safety/Sfty_Inv/SftyActvDchaCtrl/include/SftyActvDchaCtrl_data.h
@@ -3,7 +3,7 @@
 /* ADD Container: SftyActvDchaCtrl\t\t\t\t\t\t\t\t\t */
 /* ADD Container Version: 01.00\t\t\t\t\t\t\t\t\t\t */
 /* ***************************************************************** */
-/* Copyright (C) Valeo Siemens eAutomotive GmbH 2021 \t\t\t\t */
+/* Copyright (C) Valeo Siemens eAutomotive GmbH 2022 \t\t\t\t */
 /* All Rights Reserved. Confidential \t\t\t\t\t\t\t\t */
 /* ***************************************************************** */
 
@@ -89,7 +89,7 @@ typedef struct SftyActvDchaPrmDataType_
    @@ STRUCTURE = SftyActvDchaPrmDataType
    @@ A2L_TYPE = PARAMETER
    @@ DATA_TYPE = FLOAT [0.00 ... 600.00]
-   @@ DESCRIPTION = "The Minimum\xa0Battery Voltage for checking the internal trigger condition of AD by Resistor"
+   @@ DESCRIPTION = "Min battery voltage for checking the internal trigger condition of active discharge by Resistor"
    @@ GROUP = SftyActvDchaCtrl
    @@ END
    */
@@ -166,7 +166,7 @@ typedef struct SftyActvDchaPrmDataType_
    @@ STRUCTURE = SftyActvDchaPrmDataType
    @@ A2L_TYPE = PARAMETER
    @@ DATA_TYPE = UBYTE [0 ... 10]
-   @@ DESCRIPTION = "The maximum fail times for checking the dv/dt of\xc2\xa0active discharge by resistor in a row"
+   @@ DESCRIPTION = "The maximum fail times for checking the dv/dt of\xa0active discharge by resistor in a row"
    @@ GROUP = SftyActvDchaCtrl
    @@ END
    */
@@ -492,7 +492,7 @@ extern CONST(float32, SFTYREPLCMT_CALIB) SftyReplcmtActvDchaCtrlHvDcVolt; /* PRQ
 /*! @} doxygen end of group definition */
 #endif /* SFTYACTVDCHACTRL_DATA_H */
 /* ***************************************************************** */
-/* Copyright (C) Valeo Siemens eAutomotive GmbH 2021                 */
+/* Copyright (C) Valeo Siemens eAutomotive GmbH 2022                 */
 /* All Rights Reserved. Confidential                                 */
 /* ***************************************************************** */
 /*==================[end of file]============================================*/
diff --git a/src/fw_cu/Components/Safety/Sfty_Inv/SftyActvDchaCtrl/src/SftyActvDchaCtrl.c b/src/fw_cu/Components/Safety/Sfty_Inv/SftyActvDchaCtrl/src/SftyActvDchaCtrl.c
index f45b9b50b..3d275c9ab 100644
--- a/src/fw_cu/Components/Safety/Sfty_Inv/SftyActvDchaCtrl/src/SftyActvDchaCtrl.c
+++ b/src/fw_cu/Components/Safety/Sfty_Inv/SftyActvDchaCtrl/src/SftyActvDchaCtrl.c
@@ -7,7 +7,7 @@
 /* Department: Valeo Siemens eAutomotive                                  */
 /* I DT EC R&D                                                            */
 /* ********************************************************************** */
-/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2021              */
+/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2022              */
 /* All Rights Reserved. Confidential                                      */
 /* ********************************************************************** */
 
@@ -51,8 +51,8 @@
 
 /*================== [defines] ================================================*/
 
-
-
+#define SFTY_ACTV_DCHA_CTRL_ADIS_R_TM_CTR_MAX        (0xFFFFFFFFU)
+#define SFTY_ACTV_DCHA_CTRL_EFCTV_FAIL_TM_R_CTR_MAX  (0xFFU)
 /*================== [type definitions] =======================================*/
 
 /* Begin: SFTYACTVDCHACTRL_START_SEC_VAR_AREA_CMN_FAST_INIT_8 (online) */
@@ -144,14 +144,14 @@ STATIC VAR(uint8, SFTYACTVDCHACTRL_VAR) SftyActvDhaCtrlAdisOperSts = ADIS_OPER_S
 
 
 /*
-@@ SYMBOL = SftyActvDhaCtrlDvDtChkDelayTimAdisByRCnt
+@@ SYMBOL = SftyActvDchaCtrlDvDtChkDlyTimAdisByRCnt
 @@ A2L_TYPE = MEASURE
 @@ DATA_TYPE = UBYTE [0 ... 100]
 @@ DESCRIPTION = "Delay time countor for start checking the dv/dt for active discharge by resistor"
 @@ GROUP = SftyActvDchaCtrl
 @@ END
 */
-STATIC VAR(uint8, SFTYACTVDCHACTRL_VAR) SftyActvDhaCtrlDvDtChkDelayTimAdisByRCnt = 0U;
+STATIC VAR(uint8, SFTYACTVDCHACTRL_VAR) SftyActvDchaCtrlDvDtChkDlyTimAdisByRCnt = 0U;
 
 
 /*
@@ -265,6 +265,8 @@ STATIC VAR(uint32, SFTYACTVDCHACTRL_VAR) SftyActvDchaCtrlAdisFaultTimeCnt = 0UL;
 */
 STATIC VAR(float32, SFTYACTVDCHACTRL_VAR) SftyActvDchaCtrlHvDcUValPre = 0.0f;
 
+STATIC VAR(ErrDeb_MonrStsType, SFTYACTVDCHACTRL_VAR) SftyActvDchaCtrlEfcErrMonrStInRow = ERR_DEB_MONR_STS_INACTIVE;
+STATIC VAR(ErrDeb_MonrStsType, SFTYACTVDCHACTRL_VAR) SftyActvDchaCtrlEfcErrMonrStTotal = ERR_DEB_MONR_STS_INACTIVE;
 
 
 #define SFTYACTVDCHACTRL_STOP_SEC_VAR_AREA_CMN_FAST_INIT_32
@@ -346,8 +348,8 @@ LOCAL_INLINE void SftyActvDchaCtrl_GetInputData(void)
 #endif /* SERIES_PRODUCTION */
 
    {
-\t  SftyActvDchaCtrlActvFltSts   = SftyE2eFpgaActvDchaActvFltSts;
-      SftyActvDchaCtrlInactvFltSts = SftyE2eFpgaActvDchaInactvFltSts;
+      SftyActvDchaCtrlActvFltSts   = SftyE2eFpgaActvDchaActvFltSts;
+\t   SftyActvDchaCtrlInactvFltSts = SftyE2eFpgaActvDchaInactvFltSts;
    }
    
 
@@ -364,7 +366,7 @@ LOCAL_INLINE void SftyActvDchaCtrl_GetInputData(void)
 #endif /* SERIES_PRODUCTION */
 
    {
-\t  SftyActvDchaCtrlHvDcUVal = SftyHvDcUEvlnUdcVal;
+      SftyActvDchaCtrlHvDcUVal = SftyHvDcUEvlnUdcVal;
    }
 
    
@@ -375,7 +377,7 @@ LOCAL_INLINE void SftyActvDchaCtrl_GetInputData(void)
    if (SftyReplcmtActvDchaCtrlCanE2eIpStiEna == TRUE)
    {
       SftyActvDchaCtrlBattCntctrSts = SftyReplcmtActvDchaCtrlBattCntctrSt;
-\t  SftyActvDchaCtrlE2eReq        = SftyReplcmtActvDchaCtrlE2eReq;
+\t   SftyActvDchaCtrlE2eReq        = SftyReplcmtActvDchaCtrlE2eReq;
    }
    else
 \t  
@@ -383,7 +385,7 @@ LOCAL_INLINE void SftyActvDchaCtrl_GetInputData(void)
    
    {
       SftyActvDchaCtrlBattCntctrSts = SftyE2ePhyDataVcuInvStat1BattContactorSt;  
-\t  SftyActvDchaCtrlE2eReq        = SftyE2ePhyDataVcuInvCtrl1ActDischReq;
+\t   SftyActvDchaCtrlE2eReq        = SftyE2ePhyDataVcuInvCtrl1ActDischReq;
    }
 
 
@@ -394,17 +396,17 @@ LOCAL_INLINE void SftyActvDchaCtrl_GetInputData(void)
    if (SftyReplcmtActvDchaCtrlSftyErrDebIpStiEna == TRUE)
    {
       SftyActvDchaCtrlFctIdActvDcha\t\t    = SftyReplcmtActvDchaCtrlFctIdActDcha;
-\t  SftyActvDchaCtrlFctIdCanVcuInvCtrl1   = SftyReplcmtActvDchaCtrlFctIdCanVcuInvStat1;
-\t  SftyActvDchaCtrlFctIdActvDchaCanFailr = SftyReplcmtActvDchaCtrlFctIdActvDchaCanFailr;
+\t   SftyActvDchaCtrlFctIdCanVcuInvCtrl1   = SftyReplcmtActvDchaCtrlFctIdCanVcuInvStat1;
+\t   SftyActvDchaCtrlFctIdActvDchaCanFailr = SftyReplcmtActvDchaCtrlFctIdActvDchaCanFailr;
    }
    else
 
 #endif /* SERIES_PRODUCTION */
 \t  
    {
-\t  SftyActvDchaCtrlFctIdActvDcha\t\t    = SftyErrDebFctInhbnSts.B.FctIdActvDcha;
-\t  SftyActvDchaCtrlFctIdCanVcuInvCtrl1   = SftyErrDebFctInhbnSts.B.FctIdCanVcuInvCtrl1;
-\t  SftyActvDchaCtrlFctIdActvDchaCanFailr = SftyErrDebFctInhbnSts.B.FctIdActvDchaCanFailr;
+      SftyActvDchaCtrlFctIdActvDcha\t\t    = SftyErrDebFctInhbnSts.B.FctIdActvDcha;
+\t   SftyActvDchaCtrlFctIdCanVcuInvCtrl1   = SftyErrDebFctInhbnSts.B.FctIdCanVcuInvCtrl1;
+\t   SftyActvDchaCtrlFctIdActvDchaCanFailr = SftyErrDebFctInhbnSts.B.FctIdActvDchaCanFailr;
    }
    \t
    return;
@@ -430,40 +432,37 @@ LOCAL_INLINE void SftyActvDchaCtrl_StrtupTest(void)
       {
          if (SftyActvDchaCtrlAdisReqCmdHasSent == TRUE)
          {
-\t\t\tif (SftyActvDchaCtrlInactvFltSts == ADIS_STS_FAULT)
-\t\t\t{
-\t\t\t   SftyActvDchaCtrlInactvErrMonrSt = ERR_DEB_MONR_STS_FAILED;
-\t\t\t}
-\t\t\telse
-\t\t\t{
+            if (SftyActvDchaCtrlInactvFltSts == ADIS_STS_FAULT)
+            {
+               SftyActvDchaCtrlInactvErrMonrSt = ERR_DEB_MONR_STS_FAILED;
+            }
+            else
+            {
                SftyActvDchaCtrlInactvErrMonrSt = ERR_DEB_MONR_STS_PASSED;
-\t\t\t}
+            }
 
-\t\t\tSftyActvDchaCtrlStrtupTestSts   = ADIS_STRTUP_TEST_FINISHED;
-\t\t\tSftyActvDchaCtrlActvDchaReqViaR = ACTV_DCHA_NO_REQ;
+            SftyActvDchaCtrlStrtupTestSts   = ADIS_STRTUP_TEST_FINISHED;
+            SftyActvDchaCtrlActvDchaReqViaR = ACTV_DCHA_NO_REQ;
+         }
+         else
+         {
+            SftyActvDchaCtrlActvDchaReqViaR   = ACTV_DCHA_REQ;
+            SftyActvDchaCtrlStrtupTestSts     = ADIS_STRTUP_TEST_RUNNING;
+            SftyActvDchaCtrlAdisReqCmdHasSent = TRUE;
          }
-\t\t else
-\t\t {
-\t\t    SftyActvDchaCtrlActvDchaReqViaR   = ACTV_DCHA_REQ;
-\t\t\tSftyActvDchaCtrlStrtupTestSts     = ADIS_STRTUP_TEST_RUNNING;
-\t\t\tSftyActvDchaCtrlAdisReqCmdHasSent = TRUE;
-\t\t }
       }
-\t  else
-\t  {
-\t     /* Do Nothing! */
-\t  }\t  
+      else
+      {
+         /* Do Nothing! */
+      }
    }
    else
    {
       /* Do Nothing! */
    }
-
-   
    return;
 }
 
-
 /******************************************************************/
 /*!
  * \\fn        void SftyActvDchaCtrl_IntelAdisReq(void)
@@ -476,62 +475,22 @@ LOCAL_INLINE void SftyActvDchaCtrl_StrtupTest(void)
 LOCAL_INLINE void SftyActvDchaCtrl_IntelAdisReq(void)
 {
    /* ******** Variables declaration *********** */
-   uint8 sftyActvDchaCtrlActvDchaReqIntel_1;
-   uint8 sftyActvDchaCtrlActvDchaReqIntel_2;
-   uint8 sftyActvDchaCtrlActvDchaReqIntel_3;
    
    /* ************* Source code **************** */
 
-   /* 1> Checking Condition 1 */
-   if (SftyActvDchaCtrlFctIdActvDcha == ACTV_DCHA_ACTVE)
-   {
-      sftyActvDchaCtrlActvDchaReqIntel_1 = ACTV_DCHA_ACTVE;
-   }
-   else
-   {
-      sftyActvDchaCtrlActvDchaReqIntel_1 = ACTV_DCHA_DEACTVE;
-   }
-
-   
-   /* 2> Checking Condition 2 */
-   if ((SftyActvDchaCtrlFctIdActvDchaCanFailr == ACTV_DCHA_ACTVE)
-   \t   &&
-   \t   (SftyActvDchaCtrlFctIdCanVcuInvCtrl1 == ACTV_DCHA_ACTVE))
-   {
-      sftyActvDchaCtrlActvDchaReqIntel_2 = ACTV_DCHA_ACTVE;
-   }
-   else
-   {
-      sftyActvDchaCtrlActvDchaReqIntel_2 = ACTV_DCHA_DEACTVE;
-   }
-
-
-   /* 3> Checking Condition 3 */
-   if (((SftyActvDchaCtrlHvDcUVal < SftyActvDchaPrmData.VbatMinThd) || (SftyActvDchaCtrlFctIdActvDchaCanFailr == ACTV_DCHA_ACTVE)) 
-   \t   && (SftyActvDchaCtrlFctIdCanVcuInvCtrl1 == ACTV_DCHA_ACTVE))
-   \t{
-   \t   sftyActvDchaCtrlActvDchaReqIntel_3 = ACTV_DCHA_ACTVE;
-   \t}
-\telse
-\t{
-\t   sftyActvDchaCtrlActvDchaReqIntel_3 = ACTV_DCHA_DEACTVE;
-\t}
-
-
-   /* 4> Checking Internal Adis Request */
-   if ((sftyActvDchaCtrlActvDchaReqIntel_1 == ACTV_DCHA_ACTVE)
-   \t    ||
-   \t    (sftyActvDchaCtrlActvDchaReqIntel_2 == ACTV_DCHA_ACTVE)
-   \t    ||
-   \t    (sftyActvDchaCtrlActvDchaReqIntel_3 == ACTV_DCHA_ACTVE))
+   /* Checking Condition */
+   if ( (SftyActvDchaCtrlFctIdActvDcha == ACTV_DCHA_ACTVE)            ||
+        (((SftyActvDchaCtrlHvDcUVal < SftyActvDchaPrmData.VbatMinThd) ||
+        (SftyActvDchaCtrlFctIdActvDchaCanFailr == ACTV_DCHA_ACTVE))   &&
+        (SftyActvDchaCtrlFctIdCanVcuInvCtrl1 == ACTV_DCHA_ACTVE))
+      )
    {
       SftyActvDchaCtrlActvDchaReqIntel = ACTV_DCHA_ACTVE;
    }
    else
-   {
+\t{
       SftyActvDchaCtrlActvDchaReqIntel = ACTV_DCHA_DEACTVE;
-   }
-
+\t}
 
    return;
 }
@@ -590,10 +549,9 @@ LOCAL_INLINE void SftyActvDchaCtrl_DetmnAdisReq(void)
       SftyActvDchaCtrl_ExtelAdisReq();
 
       /* 3> Active Discharge Request Decision */
-      if ((SftyActvDchaCtrlHvDcUVal > (SftyActvDchaPrmData.HvDcVoltThd - SftyActvDchaPrmData.HvDcVoltTole))   /* > (60V -1.3V) */
-   \t      &&
-   \t      ((SftyActvDchaCtrlActvDchaReqIntel == ACTV_DCHA_ACTVE) || 
-   \t       (SftyActvDchaCtrlActvDchaReqExtel == ACTV_DCHA_ACTVE)))
+      if (( SftyActvDchaCtrlHvDcUVal > (SftyActvDchaPrmData.HvDcVoltThd - SftyActvDchaPrmData.HvDcVoltTole)) &&  /* > (60V -1.3V) */
+   \t    ((SftyActvDchaCtrlActvDchaReqIntel == ACTV_DCHA_ACTVE) ||
+   \t     (SftyActvDchaCtrlActvDchaReqExtel == ACTV_DCHA_ACTVE)))
       {
          SftyActvDchaCtrlActvDchaReq = ACTV_DCHA_ACTVE;
       }
@@ -623,19 +581,19 @@ LOCAL_INLINE void SftyActvDchaCtrl_DetmnAdisReq(void)
 LOCAL_INLINE void SftyActvDchaCtrl_UpdAdisReqCmd(void)
 {
    /* ******** Variables declaration *********** */
-   uint32 sftyActvDchaCtrlAdisByRRtryDurnTim;
+   uint32 adisByRRtryDurnTim;
    
    /* ************* Source code **************** */
 
    /* Interval Time Checking between 2 Adjacent Request */
    if (SftyActvDchaCtrlReqAdisByRCmdUpdEna == SFTY_ACTIV_DCHA_DISABLED)
    {
-\t  sftyActvDchaCtrlAdisByRRtryDurnTim = ((uint32)SftyActvDchaPrmData.AdisByRRtryDurnTimThd) * ((uint32)CNT_1S_TO_1MS);
+\t  adisByRRtryDurnTim = ((uint32)SftyActvDchaPrmData.AdisByRRtryDurnTimThd) * ((uint32)CNT_1S_TO_1MS);
 \t  
-      if (SftyActvDchaCtrlByRRtryDurnCnt > sftyActvDchaCtrlAdisByRRtryDurnTim)
-      {
-         SftyActvDchaCtrlReqAdisByRCmdUpdEna = SFTY_ACTIV_DCHA_ENABLED;
-      }
+\t  if (SftyActvDchaCtrlByRRtryDurnCnt > adisByRRtryDurnTim)
+\t  {
+\t     SftyActvDchaCtrlReqAdisByRCmdUpdEna = SFTY_ACTIV_DCHA_ENABLED;
+\t  }
 \t  else
 \t  {
          SftyActvDchaCtrlByRRtryDurnCnt++;
@@ -647,32 +605,31 @@ LOCAL_INLINE void SftyActvDchaCtrl_UpdAdisReqCmd(void)
    }
 
    /* Update the Request Command */
-   if ((SftyActvDchaCtrlActvDchaReq == ACTV_DCHA_ACTVE)
-       &&
-   \t   (SftyActvDchaCtrlReqAdisByRCmdUpdEna == SFTY_ACTIV_DCHA_ENABLED))
+   if ((SftyActvDchaCtrlActvDchaReq == ACTV_DCHA_ACTVE) &&
+   \t (SftyActvDchaCtrlReqAdisByRCmdUpdEna == SFTY_ACTIV_DCHA_ENABLED))
    {
       if (SftyActvDhaCtrlAdisOperSts == ADIS_OPER_STS_FINISHED)
       {
          /* Clear it for Dv/Dt delay monitoring */
-\t     SftyActvDhaCtrlDvDtChkDelayTimAdisByRCnt = 0U;
+         SftyActvDchaCtrlDvDtChkDlyTimAdisByRCnt = 0U;
 
-\t     /* Clear it for Adis via resistor Success monitoring */
-\t     SftyActvDchaCtrlAdisByRTimeCnt = 0U;
-\t     SftyActvChaCtrlAdisSuccessful  = ERR_DEB_MONR_STS_INACTIVE;
+         /* Clear it for Adis via resistor Success monitoring */
+         SftyActvDchaCtrlAdisByRTimeCnt = 0U;
+         SftyActvChaCtrlAdisSuccessful  = ERR_DEB_MONR_STS_INACTIVE;
+      }
+      else
+      {
+         /* Keep those variable value */
       }
-\t  else
-\t  {
-\t     /* Keep those variable value */
-\t  }
 
       /* Set request Cmd and operation status */
-\t  /* Don\'t move them to above! */
-\t  SftyActvDchaCtrlActvDchaReqViaR     = ACTV_DCHA_REQ;
-\t  SftyActvDhaCtrlAdisOperSts          = ADIS_OPER_STS_RUNNING;
+      /* Don\'t move them to above! */
+      SftyActvDchaCtrlActvDchaReqViaR     = ACTV_DCHA_REQ;
+      SftyActvDhaCtrlAdisOperSts          = ADIS_OPER_STS_RUNNING;
 
-\t  /* Reset them for Interval Time Checking */
-\t  SftyActvDchaCtrlByRRtryDurnCnt      = 0UL;
-\t  SftyActvDchaCtrlReqAdisByRCmdUpdEna = SFTY_ACTIV_DCHA_DISABLED;
+      /* Reset them for Interval Time Checking */
+      SftyActvDchaCtrlByRRtryDurnCnt      = 0UL;
+      SftyActvDchaCtrlReqAdisByRCmdUpdEna = SFTY_ACTIV_DCHA_DISABLED;
    }
    else
    {
@@ -682,6 +639,115 @@ LOCAL_INLINE void SftyActvDchaCtrl_UpdAdisReqCmd(void)
    return;
 }
 
+/******************************************************************/
+/*!
+ * \\fn        void SftyActvDchaCtrl_ChkCntnsFlr(void)
+ * \\brief     This function checks continuous Failure
+ * \\return    None
+ * \\Parent_DD SftyActvDchaCtrl_MainFunction
+ */
+/******************************************************************/
+LOCAL_INLINE void SftyActvDchaCtrl_ChkCntnsFlr(void)
+{
+   if (SftyActvDchaCtrlEffeChkFailTimeAdisByRInRowCnt >= SftyActvDchaPrmData.EffeChkFailTimeByRInRowThd)
+   {
+      SftyActvDchaCtrlEfcErrMonrStInRow = ERR_DEB_MONR_STS_FAILED;
+   }
+   else
+   {
+      SftyActvDchaCtrlEfcErrMonrStInRow = ERR_DEB_MONR_STS_PASSED;
+   }
+   return;
+}
+
+
+/******************************************************************/
+/*!
+ * \\fn        void SftyActvDchaCtrl_ChktotalFlr(void)
+ * \\brief     This function checks total Failure
+ * \\return    None
+ * \\Parent_DD SftyActvDchaCtrl_MainFunction
+ */
+/******************************************************************/
+LOCAL_INLINE void SftyActvDchaCtrl_ChktotalFlr(void)
+{
+   uint32  adisEffeChkTotalFlrTim ;
+
+   SftyActvDchaCtrlEffeChkTotalFailTimesAdisByRTimCnt++;
+
+   adisEffeChkTotalFlrTim = MLIB_U32F32((SftyActvDchaPrmData.EffeChkTotalFailTimesByRTimThd) * ((float32)CNT_1S_TO_10MS));
+
+   if ((SftyActvDchaCtrlEffeChkTotalFailTimesAdisByRTimCnt < adisEffeChkTotalFlrTim)    &&     /* < 1.5s */
+       (SftyActvDchaCtrlEffeChkFailTimesAdisByRTotCnt >= SftyActvDchaPrmData.EffeChkFailTimeByRTotThd))   /* >= 5 Times */
+   {
+      SftyActvDchaCtrlEfcErrMonrStTotal = ERR_DEB_MONR_STS_FAILED;
+   }
+   else
+   {
+      SftyActvDchaCtrlEfcErrMonrStTotal = ERR_DEB_MONR_STS_PASSED;
+   }
+
+   return;
+}
+
+/******************************************************************/
+/*!
+ * \\fn        void SftyActvDchaCtrl_HndlFailTimeCntr(void)
+ * \\brief     This function handles fail time counter of checking effectivity of active discharge by Resistor
+ * \\return    None
+ * \\Parent_DD SftyActvDchaCtrl_MainFunction
+ */
+/******************************************************************/
+LOCAL_INLINE void SftyActvDchaCtrl_HndlFailTimeCntr(void)
+{
+   if (SftyActvDchaCtrlEffeChkFailTimeAdisByRInRowCnt < SFTY_ACTV_DCHA_CTRL_EFCTV_FAIL_TM_R_CTR_MAX )
+   {
+      SftyActvDchaCtrlEffeChkFailTimeAdisByRInRowCnt++;
+   }
+   else
+   {
+      SftyActvDchaCtrlEffeChkFailTimeAdisByRInRowCnt = SFTY_ACTV_DCHA_CTRL_EFCTV_FAIL_TM_R_CTR_MAX;
+   }
+
+   if (SftyActvDchaCtrlEffeChkFailTimesAdisByRTotCnt < SFTY_ACTV_DCHA_CTRL_EFCTV_FAIL_TM_R_CTR_MAX)
+   {
+      SftyActvDchaCtrlEffeChkFailTimesAdisByRTotCnt++;
+   }
+   else
+   {
+      SftyActvDchaCtrlEffeChkFailTimesAdisByRTotCnt = SFTY_ACTV_DCHA_CTRL_EFCTV_FAIL_TM_R_CTR_MAX;
+   }
+
+   return;
+}
+
+/******************************************************************/
+/*!
+ * \\fn        void SftyActvDchaCtrl_EfcFinalChkAdisByR(void)
+ * \\brief     This function does final Check of the effectivity of active discharge by Resistor
+ * \\return    None
+ * \\Parent_DD SftyActvDchaCtrl_MainFunction
+ */
+/******************************************************************/
+LOCAL_INLINE void SftyActvDchaCtrl_EfcFinalChkAdisByR(void)
+{
+   /* Final Check the Effectivity of Active Discharge by Resistor */
+   if ((SftyActvDchaCtrlEfcErrMonrStInRow == ERR_DEB_MONR_STS_FAILED) ||
+       (SftyActvDchaCtrlEfcErrMonrStTotal == ERR_DEB_MONR_STS_FAILED))
+   {
+      SftyActvDchaCtrlEfcErrMonrStIntel = ERR_DEB_MONR_STS_FAILED;
+   }
+   else if ((SftyActvDchaCtrlEfcErrMonrStInRow == ERR_DEB_MONR_STS_PASSED) &&
+            (SftyActvDchaCtrlEfcErrMonrStTotal == ERR_DEB_MONR_STS_PASSED))
+   {
+      SftyActvDchaCtrlEfcErrMonrStIntel = ERR_DEB_MONR_STS_PASSED;
+   }
+   else
+   {
+      SftyActvDchaCtrlEfcErrMonrStIntel = ERR_DEB_MONR_STS_INACTIVE;
+   }
+   return;
+}
 
 /******************************************************************/
 /*!
@@ -695,123 +761,66 @@ LOCAL_INLINE void SftyActvDchaCtrl_UpdAdisReqCmd(void)
 LOCAL_INLINE void SftyActvDchaCtrl_MonrAdisByREfc(void)
 {
    /* ******** Variables declaration *********** */
-   float32 sftyActvDchaCtrlDeltaHvDcUVal;
-   uint32 adisEffeChkTotalFailTimesAdisByRTim ;
-   uint8 adisMonrDvDtEn = SFTY_ACTIV_DCHA_DISABLED;
-   static ErrDeb_MonrStsType adisEfcErrMonrStInRow = ERR_DEB_MONR_STS_INACTIVE;
-   static ErrDeb_MonrStsType adisEfcErrMonrStTotal = ERR_DEB_MONR_STS_INACTIVE;
+   float32 adisDeltaHvDcUVal;
+   uint8   adisMonrDvDtEn = SFTY_ACTIV_DCHA_DISABLED;
    
    /* ************* Source code **************** */
 
    /* Checking the delay time for monitoring Dv/Dt */
-   if (SftyActvDhaCtrlDvDtChkDelayTimAdisByRCnt >= SftyActvDchaPrmData.DvDtChkDelayTimAdisByRThd)
+   if (SftyActvDchaCtrlDvDtChkDlyTimAdisByRCnt >= SftyActvDchaPrmData.DvDtChkDelayTimAdisByRThd)
    {
       adisMonrDvDtEn = SFTY_ACTIV_DCHA_ENABLED;
    }
    else
    {
-      SftyActvDhaCtrlDvDtChkDelayTimAdisByRCnt++;
+      SftyActvDchaCtrlDvDtChkDlyTimAdisByRCnt++;
    }
 
    /* Checking Dv/Dt */
-   if ((adisMonrDvDtEn == SFTY_ACTIV_DCHA_ENABLED)
-   \t   &&
-   \t   (SftyActvDchaCtrlHvDcUVal >= SftyActvDchaPrmData.HvDcVoltThd))
+   if ((adisMonrDvDtEn == SFTY_ACTIV_DCHA_ENABLED) &&
+   \t (SftyActvDchaCtrlHvDcUVal >= SftyActvDchaPrmData.HvDcVoltThd))
    {
       if (SftyActvDchaCtrlDeltaTimeResistorCnt >= SftyActvDchaPrmData.DeltaTimAdisByRThd)   /* >= 10ms */
       {
          SftyActvDchaCtrlDeltaTimeResistorCnt = 0U;   /* Clear delta time countor */
 
-\t\t /* Calculate Dv */
-\t\t sftyActvDchaCtrlDeltaHvDcUVal = MLIB_F32AbsF32(SftyActvDchaCtrlHvDcUValPre - SftyActvDchaCtrlHvDcUVal);
-\t\t SftyActvDchaCtrlHvDcUValPre = SftyActvDchaCtrlHvDcUVal;
+         /* Calculate Dv */
+         adisDeltaHvDcUVal = MLIB_F32AbsF32(SftyActvDchaCtrlHvDcUValPre - SftyActvDchaCtrlHvDcUVal);
+         SftyActvDchaCtrlHvDcUValPre = SftyActvDchaCtrlHvDcUVal;
 
-         if ((SftyActvDchaCtrlHvDcUValPre > SftyActvDchaCtrlHvDcUVal)   /* The Trend has to be down */
-\t\t \t &&
-\t\t     (sftyActvDchaCtrlDeltaHvDcUVal >= SftyActvDchaPrmData.AdisByREnaDvThd))
+         if ((SftyActvDchaCtrlHvDcUValPre > SftyActvDchaCtrlHvDcUVal) &&        /* The Trend has to be down */
+             (adisDeltaHvDcUVal >= SftyActvDchaPrmData.AdisByREnaDvThd))
          {
             SftyActvDchaCtrlEffeChkFailTimeAdisByRInRowCnt = 0U;
          }
-\t     else
-\t     {
-            if (SftyActvDchaCtrlEffeChkFailTimeAdisByRInRowCnt < 0xFFU)
-\t\t    {
-\t\t       SftyActvDchaCtrlEffeChkFailTimeAdisByRInRowCnt++;
-\t\t    }
-\t\t\telse
-\t\t\t{
-\t\t\t   SftyActvDchaCtrlEffeChkFailTimeAdisByRInRowCnt = 0xFFU;
-\t\t\t}
-
-\t\t\tif (SftyActvDchaCtrlEffeChkFailTimesAdisByRTotCnt < 0xFFU)
-\t\t    {
-\t\t       SftyActvDchaCtrlEffeChkFailTimesAdisByRTotCnt++;
-\t\t    }
-\t\t\telse
-\t\t\t{
-\t\t\t   SftyActvDchaCtrlEffeChkFailTimesAdisByRTotCnt = 0xFFU;
-\t\t\t}
-\t     }
-
-\t\t /* Checking Continous Failure */
-         if (SftyActvDchaCtrlEffeChkFailTimeAdisByRInRowCnt >= SftyActvDchaPrmData.EffeChkFailTimeByRInRowThd)
+         else
          {
-            adisEfcErrMonrStInRow = ERR_DEB_MONR_STS_FAILED;
+            SftyActvDchaCtrl_HndlFailTimeCntr();
          }
-\t\t else
-\t\t {
-\t\t    adisEfcErrMonrStInRow = ERR_DEB_MONR_STS_PASSED;
-\t\t }
+
+         /* Checking Continous Failure */
+         SftyActvDchaCtrl_ChkCntnsFlr();
 
          /* Checking Total Failure */
-\t\t SftyActvDchaCtrlEffeChkTotalFailTimesAdisByRTimCnt++;
-\t\t adisEffeChkTotalFailTimesAdisByRTim = MLIB_U32F32((SftyActvDchaPrmData.EffeChkTotalFailTimesByRTimThd) * ((float32)CNT_1S_TO_10MS));
-
-\t\t if ((SftyActvDchaCtrlEffeChkTotalFailTimesAdisByRTimCnt < adisEffeChkTotalFailTimesAdisByRTim)         /* < 1.5s */
-\t\t \t &&
-\t\t \t (SftyActvDchaCtrlEffeChkFailTimesAdisByRTotCnt >= SftyActvDchaPrmData.EffeChkFailTimeByRTotThd))   /* >= 5 Times */
-\t\t {
-\t\t    adisEfcErrMonrStTotal = ERR_DEB_MONR_STS_FAILED;
-\t\t }
-\t\t else
-\t\t {
-\t\t    adisEfcErrMonrStTotal = ERR_DEB_MONR_STS_PASSED;
-\t\t }\t\t 
+         SftyActvDchaCtrl_ChktotalFlr();
+      }
+      else
+      {
+         SftyActvDchaCtrlDeltaTimeResistorCnt++;
       }
-\t  else
-\t  {
-\t     SftyActvDchaCtrlDeltaTimeResistorCnt++;
-\t  }
    }
    else
    {
       SftyActvDchaCtrlDeltaTimeResistorCnt               = 0U;
       SftyActvDchaCtrlEffeChkFailTimeAdisByRInRowCnt     = 0U;
       SftyActvDchaCtrlEffeChkFailTimesAdisByRTotCnt      = 0U;
-\t  SftyActvDchaCtrlEffeChkTotalFailTimesAdisByRTimCnt = 0UL;
-\t  SftyActvDchaCtrlHvDcUValPre                        = SftyActvDchaCtrlHvDcUVal;
-
-\t  adisEfcErrMonrStInRow                              = ERR_DEB_MONR_STS_INACTIVE;
-\t  adisEfcErrMonrStTotal                              = ERR_DEB_MONR_STS_INACTIVE;
+\t   SftyActvDchaCtrlEffeChkTotalFailTimesAdisByRTimCnt = 0UL;
+\t   SftyActvDchaCtrlHvDcUValPre                        = SftyActvDchaCtrlHvDcUVal;
+\t   SftyActvDchaCtrlEfcErrMonrStInRow                  = ERR_DEB_MONR_STS_INACTIVE;
+\t   SftyActvDchaCtrlEfcErrMonrStTotal                  = ERR_DEB_MONR_STS_INACTIVE;
    }
 
-   /* Final Check the Effectivity of Active Discharge by Resistor */
-   if ((adisEfcErrMonrStInRow == ERR_DEB_MONR_STS_FAILED)
-       ||
-       (adisEfcErrMonrStTotal == ERR_DEB_MONR_STS_FAILED))
-   {
-      SftyActvDchaCtrlEfcErrMonrStIntel = ERR_DEB_MONR_STS_FAILED;
-   }
-   else if ((adisEfcErrMonrStInRow == ERR_DEB_MONR_STS_PASSED)
-            &&
-            (adisEfcErrMonrStTotal == ERR_DEB_MONR_STS_PASSED))
-   {
-      SftyActvDchaCtrlEfcErrMonrStIntel = ERR_DEB_MONR_STS_PASSED;
-   }
-   else
-   {
-      SftyActvDchaCtrlEfcErrMonrStIntel = ERR_DEB_MONR_STS_INACTIVE;
-   }
+   SftyActvDchaCtrl_EfcFinalChkAdisByR();
 
    return;
 }
@@ -830,15 +839,15 @@ LOCAL_INLINE void SftyActvDchaCtrl_MonrAdisByRSuccess(void)
 {
 
    /* ******** Variables declaration *********** */
-   uint32 sftyActvDchaCtrlAdisByRTime;
+   uint32 adisByRTime;
    
    /* ************* Source code **************** */
 
    if (SftyActvDchaCtrlHvDcUVal < (SftyActvDchaPrmData.HvDcVoltThd - SftyActvDchaPrmData.HvDcVoltHys))
    {
-      sftyActvDchaCtrlAdisByRTime = ((uint32)SftyActvDchaPrmData.AdisByRTimeThd) * ((uint32)CNT_1S_TO_1MS);
+      adisByRTime = ((uint32)SftyActvDchaPrmData.AdisByRTimeThd) * ((uint32)CNT_1S_TO_1MS);
 \t\t 
-      if (SftyActvDchaCtrlAdisByRTimeCnt < sftyActvDchaCtrlAdisByRTime)
+      if (SftyActvDchaCtrlAdisByRTimeCnt < adisByRTime)
       {
          SftyActvChaCtrlAdisSuccessful = ERR_DEB_MONR_STS_PASSED;
       }
@@ -850,13 +859,13 @@ LOCAL_INLINE void SftyActvDchaCtrl_MonrAdisByRSuccess(void)
    else
    {
       /* Update the monitor countor */
-\t  if (SftyActvDchaCtrlAdisByRTimeCnt < 0xFFFFFFFFU)
+\t  if (SftyActvDchaCtrlAdisByRTimeCnt <  SFTY_ACTV_DCHA_CTRL_ADIS_R_TM_CTR_MAX )
 \t  {
 \t     SftyActvDchaCtrlAdisByRTimeCnt++;
 \t  }
 \t  else
 \t  {
-\t     SftyActvDchaCtrlAdisByRTimeCnt = 0xFFFFFFFFU;
+\t     SftyActvDchaCtrlAdisByRTimeCnt = SFTY_ACTV_DCHA_CTRL_ADIS_R_TM_CTR_MAX;
 \t  }
    }
 
@@ -864,7 +873,6 @@ LOCAL_INLINE void SftyActvDchaCtrl_MonrAdisByRSuccess(void)
    return;
 }
 
-
 /******************************************************************/
 /*!
  * \\fn        void SftyActvDchaCtrl_MonrAdisByRExit(void)
@@ -879,11 +887,9 @@ LOCAL_INLINE void SftyActvDchaCtrl_MonrAdisByRExit(void)
    
    /* ************* Source code **************** */
 
-   if ((SftyActvDchaCtrlEfcErrMonrStIntel == ERR_DEB_MONR_STS_FAILED)   /* Effectivity */
-   \t   ||
-   \t   (SftyActvChaCtrlAdisSuccessful == ERR_DEB_MONR_STS_PASSED)        /* Discharge Successful */
-       ||
-       ((SftyActvDchaCtrlActvDchaReqIntel == ACTV_DCHA_DEACTVE) &&       /* No Adis Request */
+   if ((SftyActvDchaCtrlEfcErrMonrStIntel == ERR_DEB_MONR_STS_FAILED) ||  /* Effectivity */
+   \t (SftyActvChaCtrlAdisSuccessful == ERR_DEB_MONR_STS_PASSED)     ||  /* Discharge Successful */
+   \t ((SftyActvDchaCtrlActvDchaReqIntel == ACTV_DCHA_DEACTVE)       &&  /* No Adis Request */
         (SftyActvDchaCtrlActvDchaReqExtel == ACTV_DCHA_DEACTVE)))
    {
       SftyActvDchaCtrlActvDchaReqViaR = ACTV_DCHA_NO_REQ;
@@ -894,7 +900,6 @@ LOCAL_INLINE void SftyActvDchaCtrl_MonrAdisByRExit(void)
       /* Do Nothing! */
    }
 
-
    return;
 }
 
@@ -911,38 +916,37 @@ LOCAL_INLINE void SftyActvDchaCtrl_MonrAdisByRExit(void)
 LOCAL_INLINE void SftyActvDchaCtrl_MonrAdisSts(void)
 {
    /* ******** Variables declaration *********** */
-   float32 sftyActvDchaCtrlAdisFaultThd;
-   uint32 sftyActvDchaCtrlAdisFaultTimeThd;
+   float32 adisFltThd;
+   uint32  adisFltTmThd;
    
    /* ************* Source code **************** */
-
    if (SftyActvDhaCtrlAdisOperSts == ADIS_OPER_STS_RUNNING)
    {
-      sftyActvDchaCtrlAdisFaultTimeThd = ((uint32)SftyActvDchaPrmData.AdisFaultTimeThd) * ((uint32)CNT_1S_TO_1MS);
-\t  
-\t  if (SftyActvDchaCtrlAdisFaultTimeCnt > sftyActvDchaCtrlAdisFaultTimeThd)   /* > 2s */  
+      adisFltTmThd = ((uint32)SftyActvDchaPrmData.AdisFaultTimeThd) * ((uint32)CNT_1S_TO_1MS);
+
+      if (SftyActvDchaCtrlAdisFaultTimeCnt > adisFltTmThd)   /* > 2s */
       {
-\t\t sftyActvDchaCtrlAdisFaultThd = SftyActvDchaPrmData.HvDcVoltThd - SftyActvDchaPrmData.HvDcVoltTole;   /* > (60V - 1.3V) */
-\t\t if (SftyActvDchaCtrlHvDcUVal > sftyActvDchaCtrlAdisFaultThd)
+         adisFltThd = SftyActvDchaPrmData.HvDcVoltThd - SftyActvDchaPrmData.HvDcVoltTole;   /* > (60V - 1.3V) */
+
+         if (SftyActvDchaCtrlHvDcUVal > adisFltThd)
          {
             SftyActvDchaCtrlFltErrMonrStIntel = ERR_DEB_MONR_STS_FAILED;
          }
-\t     else   /* => (SftyActvDchaCtrlHvDcUVal <= SftyActvDchaCtrlActiveDchaFaultThd) */
-\t     {
+         else   /* => (SftyActvDchaCtrlHvDcUVal <= SftyActvDchaCtrlActiveDchaFaultThd) */
+         {
 \t        SftyActvDchaCtrlFltErrMonrStIntel = ERR_DEB_MONR_STS_PASSED;
-\t     }
+         }
+      }
+      else
+      {
+         SftyActvDchaCtrlAdisFaultTimeCnt++;
       }
-\t  else
-\t  {
-\t     SftyActvDchaCtrlAdisFaultTimeCnt++;
-\t  }
    }
    else
    {
       SftyActvDchaCtrlAdisFaultTimeCnt  = 0UL;
-\t  SftyActvDchaCtrlFltErrMonrStIntel = ERR_DEB_MONR_STS_INACTIVE;
+      SftyActvDchaCtrlFltErrMonrStIntel = ERR_DEB_MONR_STS_INACTIVE;
    }
- 
 
    return;
 }
@@ -1006,7 +1010,6 @@ LOCAL_INLINE void SftyActvDchaCtrl_UpdErrMonrSt(void)
    /* ************* Source code **************** */
    SftyActvDchaCtrlEfcErrMonrSt    = SftyActvDchaCtrlEfcErrMonrStIntel;
    SftyActvDchaCtrlFltErrMonrSt    = SftyActvDchaCtrlFltErrMonrStIntel;   
-
    
    if (SftyActvDchaCtrlActvFltSts == ADIS_STS_NO_FAULT)
    {
@@ -1052,9 +1055,6 @@ LOCAL_INLINE void SftyActvDchaCtrl_UpdErrMonrSt(void)
 /******************************************************************/
 FUNC(void, SFTYACTVDCHACTRL) SftyActvDchaCtrl_MainFunction(void)
 {
-#ifdef SWIT_IT_Active
-   SWIT_SftyActvDchaCtrl_MainFunction_BgnHook();
-#endif
    /* ******** Variables declaration *********** */
 
    /* ************* Source code **************** */
@@ -1149,7 +1149,7 @@ FUNC(void, SFTYACTVDCHACTRL) SftyActvDchaCtrl_Init(void)
 /*================== [closure] ==============================================*/
 /*! @} doxygen end of group definition */
 /* ********************************************************************** */
-/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2021              */
+/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2022              */
 /* All Rights Reserved. Confidential                                      */
 /* ********************************************************************** */
 /*==================[end of file]============================================*/
diff --git a/src/fw_cu/Components/Safety/Sfty_Inv/SftyActvDchaCtrl/src/SftyActvDchaCtrl_data.c b/src/fw_cu/Components/Safety/Sfty_Inv/SftyActvDchaCtrl/src/SftyActvDchaCtrl_data.c
index c6bf15dc0..293d12665 100644
--- a/src/fw_cu/Components/Safety/Sfty_Inv/SftyActvDchaCtrl/src/SftyActvDchaCtrl_data.c
+++ b/src/fw_cu/Components/Safety/Sfty_Inv/SftyActvDchaCtrl/src/SftyActvDchaCtrl_data.c
@@ -3,7 +3,7 @@
 /* ADD Container: SftyActvDchaCtrl                                   */
 /* ADD Container Version:01.00                                       */
 /* ***************************************************************** */
-/* Copyright (C) Valeo Siemens eAutomotive GmbH 2021                 */
+/* Copyright (C) Valeo Siemens eAutomotive GmbH 2022                 */
 /* All Rights Reserved. Confidential                                 */
 /* ***************************************************************** */
 /*!
@@ -158,7 +158,7 @@ VAR(uint8, SFTYACTVDCHACTRL_VAR) SftyActvDchaCtrlFctIdActvDcha = ACTV_DCHA_DEACT
 @@ A2L_TYPE = MEASURE
 @@ DATA_TYPE = UBYTE [0 ... 1]
 @@ CONVERSION = TABLE 0 "No Adis Request" 1 "Adis Request"
-@@ DESCRIPTION = "Local Variable for FID to indicate\xc2\xa0VcuInvCtrl1 CAN frame failure"
+@@ DESCRIPTION = "Local Variable for FID to indicate VcuInvCtrl1 CAN frame failure"
 @@ GROUP = SftyActvDchaCtrl
 @@ END
 */
@@ -590,7 +590,7 @@ CONST(uint8, SFTYREPLCMT_CALIB) SftyReplcmtActvDchaCtrlFctIdActDcha = ACTV_DCHA_
 @@ A2L_TYPE = PARAMETER
 @@ DATA_TYPE = UBYTE [0 ... 1]
 @@ CONVERSION = TABLE 0 "No Adis Request" 1 "Adis Request"
-@@ DESCRIPTION = "Replacement value for Local Variable that FID to indicate\xc2\xa0VcuInvCtrl1 CAN frame failure"
+@@ DESCRIPTION = "Replacement value for Local Variable that FID to indicate VcuInvCtrl1 CAN frame failure"
 @@ GROUP = SftyActvDchaCtrl
 @@ END
 */
@@ -650,7 +650,7 @@ CONST(float32, SFTYREPLCMT_CALIB) SftyReplcmtActvDchaCtrlHvDcVolt = 0.0f;
 /*================== [closure] ==============================================*/
 /** @} doxygen end group definition */
 /* ***************************************************************** */
-/* Copyright (C) Valeo Siemens eAutomotive GmbH 2021                 */
+/* Copyright (C) Valeo Siemens eAutomotive GmbH 2022                 */
 /* All Rights Reserved. Confidential                                 */
 /* ***************************************************************** */
 /*==================[end of file]============================================*/
diff --git a/src/fw_cu/Components/Safety/Sfty_Inv/SftyDcEvln/src/SftyDcEvln.c b/src/fw_cu/Components/Safety/Sfty_Inv/SftyDcEvln/src/SftyDcEvln.c
index 6993cd9e1..f3b95fe17 100644
--- a/src/fw_cu/Components/Safety/Sfty_Inv/SftyDcEvln/src/SftyDcEvln.c
+++ b/src/fw_cu/Components/Safety/Sfty_Inv/SftyDcEvln/src/SftyDcEvln.c
@@ -74,7 +74,7 @@
 #define SFTYDCEVLN_EMX_STATUS_EOHVL_OPEN                2U
 #define SFTYDCEVLN_EMX_STATUS_EOHVL_ERROR               3U
 
-
+#if 0
 /**************************************************************************/
 /*!
  * \\fn      void SftyDcEvln_GetNHvFbSt(void)
@@ -3174,6 +3174,7 @@ if((SWIT_SftyDcEvln_EN_KEY==SWIT_First_HookEnableKey))
 /***********************************************************************************/
 LOCAL_INLINE void SftyDcEvln_SepicOffStrtUpDiag(void)
 {
+#if 0
 /*#ifdef SWIT_FC_Active
 if((SWIT_SftyDcEvln_EN_KEY==SWIT_First_HookEnableKey))
    SWIT_SftyDcEvln_SepicOffStrtUpDiag_BgnHook ();
@@ -3269,6 +3270,7 @@ if((SWIT_SftyDcEvln_EN_KEY==SWIT_First_HookEnableKey))
     }
 
    return;
+#endif
 }
 #endif    /*SYSCON_FTR_PSM == 1 USE_IPMCTRL_CONTROL */
 
@@ -3282,6 +3284,8 @@ if((SWIT_SftyDcEvln_EN_KEY==SWIT_First_HookEnableKey))
 /******************************************************************/
 LOCAL_INLINE void SftyDcEvln_OCPStrtUpDiag(void)
 {
+
+#if 0
 /*#ifdef SWIT_FC_Active
 if((SWIT_SftyDcEvln_EN_KEY==SWIT_First_HookEnableKey))
    SWIT_SftyDcEvln_OCPStrtUpDiag_BgnHook ();
@@ -3369,9 +3373,10 @@ if((SWIT_SftyDcEvln_EN_KEY==SWIT_First_HookEnableKey))
       SWIT_SftyDcEvln_OCPStrtUpDiag_EndHook();
 #endif
    return;
+#endif
 }
 
-
+#endif
 
 /******************************** AREA-1 *********************************** */
 /******************************** SLOW   *********************************** */
diff --git a/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvDcUEvln/include/SftyHvDcUEvln.h b/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvDcUEvln/include/SftyHvDcUEvln.h
index 0637196d8..5aaa4175f 100644
--- a/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvDcUEvln/include/SftyHvDcUEvln.h
+++ b/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvDcUEvln/include/SftyHvDcUEvln.h
@@ -7,7 +7,7 @@
 /* Department: Valeo Siemens eAutomotive                                  */
 /* I DT EC R&D                                                            */
 /* ********************************************************************** */
-/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2021              */
+/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2022              */
 /* All Rights Reserved. Confidential                                      */
 /* ********************************************************************** */
 
@@ -109,7 +109,7 @@ extern FUNC(void, SFTY_DC_EVLN_CODE) SftyHvDcUEvln_PlausReinitMonrData(void);
 /*! @} doxygen end of group definition */
 #endif   /* SFTYHVDCUEVLN_H */
 /* ***************************************************************** */
-/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2021                 */
+/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2022                 */
 /* All Rights Reserved. Confidential                                 */
 /* ***************************************************************** */
 /*==================[end of file]====================================*/
diff --git a/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvDcUEvln/include/SftyHvDcUEvln_data.h b/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvDcUEvln/include/SftyHvDcUEvln_data.h
index 47ace4bf3..956d07a41 100644
--- a/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvDcUEvln/include/SftyHvDcUEvln_data.h
+++ b/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvDcUEvln/include/SftyHvDcUEvln_data.h
@@ -3,7 +3,7 @@
 /* ADD Container: SftyHvDcUEvln                                      */
 /* ADD Container Version: 01.02                                      */
 /* ***************************************************************** */
-/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2021                 */
+/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2022                 */
 /* All Rights Reserved. Confidential                                 */
 /* ***************************************************************** */
 /*!
@@ -127,18 +127,6 @@ extern VAR(uint8, SFTYDCEVLN_VAR) SftyHvDcUEvlnDrvBdPwrSplyP16Prsnt;
 #include "MemMap.h"
 /* End: SFTYDCEVLN_STOP_SEC_VAR_AREA_1_FAST_INIT_8 (online) */
 
-
-/* Begin: SFTYDCEVLN_START_SEC_VAR_AREA_1_FAST_INIT_8 (online) */
-#define SFTYDCEVLN_START_SEC_VAR_AREA_1_FAST_INIT_8
-#include "MemMap.h"
-
-extern VAR(SftyHvDcUEvlnRngErrMonStType, SFTYDCEVLN_VAR) SftyHvDcUEvlnDrvBdRngErrMonrSt;
-
-#define SFTYDCEVLN_STOP_SEC_VAR_AREA_1_FAST_INIT_8
-#include "MemMap.h"
-/* End: SFTYDCEVLN_STOP_SEC_VAR_AREA_1_FAST_INIT_8 (online) */
-
-
 /* ********************* SEC_VAR_AREA_2_FAST_INIT_8 ********************* */
 
 #if (COMBINED_ERRDEB_ON == 1)
@@ -259,17 +247,6 @@ extern VAR(boolean, SFTYDCEVLN_VAR) SftyHvDcUEvlnCtrlBdPwrSplyP16Prsnt;
 /* End: SFTYDCEVLN_STOP_SEC_VAR_AREA_2_FAST_INIT_8 (online) */
 
 
-/* Begin: SFTYDCEVLN_START_SEC_VAR_AREA_2_FAST_INIT_8 (online) */
-#define SFTYDCEVLN_START_SEC_VAR_AREA_2_FAST_INIT_8
-#include "MemMap.h"
-
-extern VAR(SftyHvDcUEvlnRngErrMonStType, SFTYDCEVLN_VAR) SftyHvDcUEvlnCtrlBdRngErrMonrSt;
-
-#define SFTYDCEVLN_STOP_SEC_VAR_AREA_2_FAST_INIT_8
-#include "MemMap.h"
-/* End: SFTYDCEVLN_STOP_SEC_VAR_AREA_2_FAST_INIT_8 (online) */
-
-
 /* ********************* VAR_AREA_CMN_FAST_INIT_8 ********************* */
 
 /* Begin: SFTYDCEVLN_START_SEC_VAR_AREA_CMN_FAST_INIT_8 (online) */
@@ -651,26 +628,8 @@ extern CONST(uint8, SFTYREPLCMT_CALIB) SftyReplcmtHvDcUEvlnPlausHWFltStiEna;
 #define SFTYREPLCMT_START_SEC_CALIB_8
 #include "MemMap.h"
 
-extern CONST(boolean, SFTYDCEVLN_VAR) SftyReplcmtHvDcUEvlnPlausHWFltSts;
-
-#define SFTYREPLCMT_STOP_SEC_CALIB_8
-#include "MemMap.h"
-/* End: SFTYREPLCMT_STOP_SEC_CALIB_8 (calib) */
-
-/* Begin: SFTYREPLCMT_START_SEC_CALIB_8 (calib) */
-#define SFTYREPLCMT_START_SEC_CALIB_8
-#include "MemMap.h"
-
-extern CONST(uint8, SFTYREPLCMT_CALIB) SftyReplcmtE2eFpgaOverVoltVBatFltStsStiEna;
-#define SFTYREPLCMT_STOP_SEC_CALIB_8
-#include "MemMap.h"
-/* End: SFTYREPLCMT_STOP_SEC_CALIB_8 (calib) */
-
-/* Begin: SFTYREPLCMT_START_SEC_CALIB_8 (calib) */
-#define SFTYREPLCMT_START_SEC_CALIB_8
-#include "MemMap.h"
+extern CONST(boolean, SFTYDCEVLN_VAR) SftyReplcmtHvDcUEvlnPlausHWFltSts; /* PRQA S 0777 # This identifier is long and differs from other identifier */
 
-extern CONST(boolean, SFTYDCEVLN_CALIB) SftyReplcmtE2eFpgaOverVoltVBatFltSts;
 #define SFTYREPLCMT_STOP_SEC_CALIB_8
 #include "MemMap.h"
 /* End: SFTYREPLCMT_STOP_SEC_CALIB_8 (calib) */
@@ -685,7 +644,7 @@ extern CONST(boolean, SFTYDCEVLN_CALIB) SftyReplcmtE2eFpgaOverVoltVBatFltSts;
 #define SFTYDCEVLN_START_SEC_CALIB_16
 #include "MemMap.h"
 
-extern CONST(uint16, SFTYDCEVLN_CALIB) SftyReplcmtHvDcUEvlnDrvBdRawVal;
+extern CONST(uint16, SFTYDCEVLN_CALIB) SftyReplcmtHvDcUEvlnDrvBdRawVal; /* PRQA S 0777 # This identifier is long and differs from other identifier */
 
 #define SFTYDCEVLN_STOP_SEC_CALIB_16
 #include "MemMap.h"
@@ -696,7 +655,7 @@ extern CONST(uint16, SFTYDCEVLN_CALIB) SftyReplcmtHvDcUEvlnDrvBdRawVal;
 #define SFTYDCEVLN_START_SEC_CALIB_16
 #include "MemMap.h"
 
-extern CONST(uint16, SFTYDCEVLN_CALIB) SftyReplcmtHvDcUEvlnCtrlBdRawVal;
+extern CONST(uint16, SFTYDCEVLN_CALIB) SftyReplcmtHvDcUEvlnCtrlBdRawVal; /* PRQA S 0777 # This identifier is long and differs from other identifier */
 
 #define SFTYDCEVLN_STOP_SEC_CALIB_16
 #include "MemMap.h"
@@ -730,7 +689,7 @@ extern CONST(uint16, SFTYDCEVLN_CALIB) SftyHvDcUEvlnOvRstTi;
 /*! @} doxygen end of group definition */
 #endif  /* SFTYHVDCUEVLN_DATA_H */
 /* ***************************************************************** */
-/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2021                 */
+/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2022                 */
 /* All Rights Reserved. Confidential                                 */
 /* ***************************************************************** */
 /*==================[end of file]====================================*/
diff --git a/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvDcUEvln/src/SftyHvDcUEvln.c b/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvDcUEvln/src/SftyHvDcUEvln.c
index 705716f25..6f8684141 100644
--- a/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvDcUEvln/src/SftyHvDcUEvln.c
+++ b/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvDcUEvln/src/SftyHvDcUEvln.c
@@ -7,7 +7,7 @@
 /* Department: Valeo Siemens eAutomotive                                  */
 /* I DT EC R&D                                                            */
 /* ********************************************************************** */
-/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2021              */
+/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2022              */
 /* All Rights Reserved. Confidential                                      */
 /* ********************************************************************** */
 
@@ -37,7 +37,7 @@
 
 #include "SftyHvDcUEvln.h"
 #include "SftyHvDcUEvln_data.h"
-
+#include "SftyReplcmt_data.h"
 #include "C2cComSftyData.h"
 #include "C2cComBswData.h"
 #include "SftyUtils.h"
@@ -148,10 +148,11 @@ LOCAL_INLINE void SftyHvDcUEvln_ClrDrvBdErrMonrSt(void)
    /* ******** Variables declaration *********** */
 
    /* ************* Source code **************** */
-
-   SftyHvDcUEvlnDrvBdRngErrMonrSt.RngHi = ERR_DEB_MONR_STS_INACTIVE;
-   SftyHvDcUEvlnDrvBdRngErrMonrSt.RngLo = ERR_DEB_MONR_STS_INACTIVE;   
    
+   SftyHvDcUEvlnDrvBdRngHiErrMonrSt = ERR_DEB_MONR_STS_INACTIVE;
+   SftyHvDcUEvlnDrvBdRngLoErrMonrSt = ERR_DEB_MONR_STS_INACTIVE;
+
+
    return;
 }
 
@@ -160,8 +161,7 @@ LOCAL_INLINE void SftyHvDcUEvln_ClrDrvBdErrMonrSt(void)
 /******************************************************************/
 /*!
  * \\fn        void SftyHvDcUEvln_ClrCtrlBdErrMonrSt(void)
- * \\brief     This function copys the data provided by SftyE2eFpga()
- *            to local variable. ( Raw value )
+ * \\brief     This function inactived error monitrs
  * \\Parent_DD SftyHvDcUEvln_MainFunctionArea2
  */
 /******************************************************************/
@@ -174,8 +174,8 @@ LOCAL_INLINE void SftyHvDcUEvln_ClrCtrlBdErrMonrSt(void)
    /* ******** Variables declaration *********** */
 
    /* ************* Source code **************** */
-   SftyHvDcUEvlnCtrlBdRngErrMonrSt.RngHi = ERR_DEB_MONR_STS_INACTIVE;
-   SftyHvDcUEvlnCtrlBdRngErrMonrSt.RngLo = ERR_DEB_MONR_STS_INACTIVE;
+   SftyHvDcUEvlnCtrlBdRngHiErrMonrSt = ERR_DEB_MONR_STS_INACTIVE;
+   SftyHvDcUEvlnCtrlBdRngLoErrMonrSt = ERR_DEB_MONR_STS_INACTIVE;
    
    return;
 }
@@ -441,328 +441,211 @@ LOCAL_INLINE void SftyHvDcUEvln_GetHvDcUDataForOvRst(void)
 
 /******************************************************************/
 /*!
- * \\fn        SftyHvDcUEvlnRngErrMonStType SftyHvDcUEvln_ChkRngDrvBd(void)
- * \\brief     This function checks ranges for HVDC voltage from Driver Board
- *            Internal ADC of FPGA, set error status for Range High & Low
+ * \\fn        void SftyHvDcUEvln_ChkRngHiDrvBd(void)
+ * \\brief     This function checks ranges High for HVDC voltage from Driver Board
+ *            Internal ADC of FPGA, set error status for Range High
  * \\return    monitor status
  * \\Parent_DD SftyHvDcUEvln_MainFunctionArea1
  */
 /******************************************************************/
-LOCAL_INLINE SftyHvDcUEvlnRngErrMonStType SftyHvDcUEvln_ChkRngDrvBd(void)
+LOCAL_INLINE void SftyHvDcUEvln_ChkRngHiDrvBd(void)
 {
-#ifdef SWIT_FC_Active
-   if((SWIT_SftyHvDcUEvln_EN_KEY==SWIT_First_HookEnableKey))
-   SWIT_SftyHvDcUEvln_ChkRngDrvBd_BgnHook();
+   /* TODO: Activation Criteria\' in fault matrix needs to be update */
+#if 0
+   if (SftyHvDcUEvlnCtrlBdE2eFpgaRxCrcErrMonrSt == ERR_DEB_MONR_STS_PASSED)
 #endif
-   /* ******** Variables declaration *********** */
-   SftyHvDcUEvlnRngErrMonStType retVal;
-   
-   /* ************* Source code **************** */
 
-   /* Range High Check */
-   /* TODO: Activation Criteria\' in fault matrix needs to be update */
-#if 0   
-   if (SftyHvDcUEvlnDrvBdE2eFpgaRxCrcErrMonrSt == ERR_DEB_MONR_STS_PASSED)
-   \t{
+   {
       if (SftyHvDcUEvlnDrvBdUdcVal >= SftyHvDcUEvlnDrvBdUdcRngHiThd)
       {
          /* Value is higher than allowed */
-         retVal.RngHi = ERR_DEB_MONR_STS_FAILED;
+         SftyHvDcUEvlnDrvBdRngHiErrMonrSt = ERR_DEB_MONR_STS_FAILED;
       }
       else
       {
          /* No error */
-         retVal.RngHi = ERR_DEB_MONR_STS_PASSED;
+         SftyHvDcUEvlnDrvBdRngHiErrMonrSt = ERR_DEB_MONR_STS_PASSED;
       }
    }
-   else
-   {
-      retVal.RngHi = ERR_DEB_MONR_STS_INACTIVE;
-   }
-#else
 
-   if (SftyHvDcUEvlnDrvBdUdcVal >= SftyHvDcUEvlnDrvBdUdcRngHiThd)
-   {
-      /* Value is higher than allowed */
-      retVal.RngHi = ERR_DEB_MONR_STS_FAILED;
-   }
+#if 0
    else
    {
-      /* No error */
-      retVal.RngHi = ERR_DEB_MONR_STS_PASSED;
+      /* Do nothing*/
    }
-
 #endif
 
+   return;
+}
 
-   /* Range Low Check */
+/******************************************************************/
+/*!
+ * \\fn        void SftyHvDcUEvln_ChkRngLoDrvBd(void)
+ * \\brief     This function checks ranges Low for HVDC voltage from Driver Board
+ *            Internal ADC of FPGA, set error status for Range Low
+ * \\return    monitor status
+ * \\Parent_DD SftyHvDcUEvln_MainFunctionArea1
+ */
+/******************************************************************/
+LOCAL_INLINE void SftyHvDcUEvln_ChkRngLoDrvBd(void)
+{
    /* TODO: Activation Criteria\' in fault matrix needs to be update */
 #if 0
-   if ((SftyHvDcUEvlnDrvBdE2eFpgaRxCrcErrMonrSt  == ERR_DEB_MONR_STS_PASSED)   &&
-   \t   (SftyHvDcUEvlnDrvBdPwrSplyP16Prsnt        == TRUE))
-   {   
+   if (SftyHvDcUEvlnCtrlBdE2eFpgaRxCrcErrMonrSt == ERR_DEB_MONR_STS_PASSED)
+#endif
+
+   {
       if (SftyHvDcUEvlnDrvBdUdcVal <= SftyHvDcUEvlnDrvBdUdcRngLoThd)
       {
          /* Value is lower than allowed */
-         retVal.RngLo = ERR_DEB_MONR_STS_FAILED;
+         SftyHvDcUEvlnDrvBdRngLoErrMonrSt = ERR_DEB_MONR_STS_FAILED;
       }
       else
       {
          /* No error */
-         retVal.RngLo = ERR_DEB_MONR_STS_PASSED;
+         SftyHvDcUEvlnDrvBdRngLoErrMonrSt = ERR_DEB_MONR_STS_PASSED;
       }
    }
-   else
-   {
-      retVal.RngLo = ERR_DEB_MONR_STS_INACTIVE;
-   }
-#else
 
-   if (SftyHvDcUEvlnDrvBdUdcVal <= SftyHvDcUEvlnDrvBdUdcRngLoThd)
-   {
-      /* Value is lower than allowed */
-      retVal.RngLo = ERR_DEB_MONR_STS_FAILED;
-   }
+#if 0
    else
    {
-      /* No error */
-      retVal.RngLo = ERR_DEB_MONR_STS_PASSED;
+      /* Do nothing*/
    }
-
-#endif   
-   
-   return retVal;
+#endif
+   return;
 }
 
-
 /******************************************************************/
 /*!
- * \\fn        SftyHvDcUEvlnRngErrMonStType SftyHvDcUEvln_ChkRngCtrlBd(void)
- * \\brief     This function checks ranges for HVDC voltage from Control Board
- *            External ADC of FPGA, set error status for Range High & Low
+ * \\fn        void SftyHvDcUEvln_ChkRngDrvBd(void)
+ * \\brief     This function checks ranges for HVDC voltage from Driver Board
+ *            Internal ADC of FPGA, set error status for Range High & Low
  * \\return    monitor status
- * \\Parent_DD SftyHvDcUEvln_MainFunctionArea2
+ * \\Parent_DD SftyHvDcUEvln_MainFunctionArea1
  */
 /******************************************************************/
-LOCAL_INLINE SftyHvDcUEvlnRngErrMonStType SftyHvDcUEvln_ChkRngCtrlBd(void)
+LOCAL_INLINE void SftyHvDcUEvln_ChkRngDrvBd(void)
 {
 #ifdef SWIT_FC_Active
    if((SWIT_SftyHvDcUEvln_EN_KEY==SWIT_First_HookEnableKey))
-   SWIT_SftyHvDcUEvln_ChkRngCtrlBd_BgnHook();
+   SWIT_SftyHvDcUEvln_ChkRngDrvBd_BgnHook();
 #endif
    /* ******** Variables declaration *********** */
-   SftyHvDcUEvlnRngErrMonStType retVal;
    
    /* ************* Source code **************** */
 
    /* Range High Check */
+   SftyHvDcUEvln_ChkRngHiDrvBd();
+
+   /* Range Low Check */
+   SftyHvDcUEvln_ChkRngLoDrvBd();
+   
+   return;
+}
+
+/******************************************************************/
+/*!
+ * \\fn        void SftyHvDcUEvln_ChkRngHiCtrlBd(void)
+ * \\brief     This function checks ranges High for HVDC voltage from Control Board
+ *            External ADC of FPGA, set error status for Range High
+ * \\return
+ * \\Parent_DD SftyHvDcUEvln_MainFunctionArea2
+ */
+/******************************************************************/
+LOCAL_INLINE void SftyHvDcUEvln_ChkRngHiCtrlBd(void)
+{
+
    /* TODO: Activation Criteria\' in fault matrix needs to be update */
 #if 0
    if (SftyHvDcUEvlnCtrlBdE2eFpgaRxCrcErrMonrSt == ERR_DEB_MONR_STS_PASSED)
+#endif
+
    {
       if (SftyHvDcUEvlnCtrlBdUdcVal >= SftyHvDcUEvlnCtrlBdUdcRngHiThd)
       {
          /* Value is higher than allowed */
-         retVal.RngHi = ERR_DEB_MONR_STS_FAILED;
+         SftyHvDcUEvlnCtrlBdRngHiErrMonrSt = ERR_DEB_MONR_STS_FAILED;
       }
       else
       {
          /* No error */
-         retVal.RngHi = ERR_DEB_MONR_STS_PASSED;
+         SftyHvDcUEvlnCtrlBdRngHiErrMonrSt = ERR_DEB_MONR_STS_PASSED;
       }
    }
-   else
-   {
-      retVal.RngHi = ERR_DEB_MONR_STS_INACTIVE;
-   } 
-#else
-
-   if (SftyHvDcUEvlnCtrlBdUdcVal >= SftyHvDcUEvlnCtrlBdUdcRngHiThd)
-   {
-      /* Value is higher than allowed */
-      retVal.RngHi = ERR_DEB_MONR_STS_FAILED;
-   }
-   else
-   {
-      /* No error */
-      retVal.RngHi = ERR_DEB_MONR_STS_PASSED;
-   }
-
-#endif
-
-   /* Range Low Check */
-   /* TODO: Activation Criteria\' in fault matrix needs to be update */
 #if 0
-   if ((SftyHvDcUEvlnCtrlBdE2eFpgaRxCrcErrMonrSt == ERR_DEB_MONR_STS_PASSED)   &&
-\t   (SftyHvDcUEvlnCtrlBdPwrSplyP16Prsnt       == TRUE))
-   \t{
-      if (SftyHvDcUEvlnCtrlBdUdcVal <= SftyHvDcUEvlnCtrlBdUdcRngLoThd)
-      {
-         /* Value is lower than allowed */
-         retVal.RngLo = ERR_DEB_MONR_STS_FAILED;
-      }
-      else
-      {
-         /* No error */
-         retVal.RngLo = ERR_DEB_MONR_STS_PASSED;
-      }
-   }
    else
    {
-      retVal.RngLo = ERR_DEB_MONR_STS_INACTIVE;
-   }
-#else
-
-   if (SftyHvDcUEvlnCtrlBdUdcVal <= SftyHvDcUEvlnCtrlBdUdcRngLoThd)
-   {
-      /* Value is lower than allowed */
-      retVal.RngLo = ERR_DEB_MONR_STS_FAILED;
+      /* Do nothing*/
    }
-   else
-   {
-      /* No error */
-      retVal.RngLo = ERR_DEB_MONR_STS_PASSED;
-   }
-
-#endif   
-   
-   return retVal;
+#endif
+   return;
 }
 
-
-
 /******************************************************************/
 /*!
- * \\fn        void SftyHvDcUEvln_UpdDrvBdErrMonrSt(void)
- * \\brief     This function updates the Driver Board Error Monitor Status
- *            according to different error handling concept
-  *\\return    None
- * \\Parent_DD SftyHvDcUEvln_MainFunctionArea1
+ * \\fn        void SftyHvDcUEvln_ChkRngLoCtrlBd(void)
+ * \\brief     This function checks ranges Low for HVDC voltage from Control Board
+ *            External ADC of FPGA, set error status for Range Low
+ * \\return
+ * \\Parent_DD SftyHvDcUEvln_MainFunctionArea2
  */
 /******************************************************************/
-LOCAL_INLINE void SftyHvDcUEvln_UpdDrvBdErrMonrSt(void)
+LOCAL_INLINE void SftyHvDcUEvln_ChkRngLoCtrlBd(void)
 {
-#ifdef SWIT_FC_Active
-   if((SWIT_SftyHvDcUEvln_EN_KEY==SWIT_First_HookEnableKey))
-   SWIT_SftyHvDcUEvln_UpdDrvBdErrMonrSt_BgnHook();
+   /* TODO: Activation Criteria\' in fault matrix needs to be update */
+ #if 0
+      if (SftyHvDcUEvlnCtrlBdE2eFpgaRxCrcErrMonrSt == ERR_DEB_MONR_STS_PASSED)
 #endif
-   /* ******** Variables declaration *********** */
-
-   /* ************* Source code **************** */
-
-#if (COMBINED_ERRDEB_ON == 1)
-
-   /* ******** Variables declaration *********** */
-   uint16 u16TempCombinedMonrStsResult1 = 0U;
-   uint16 u16TempCombinedMonrStsResult2 = 0U;
-   uint16 u16TempResetDataMask = 0U;
-   
-   /* Combined error handling */
-
-   /* Clear data for this cycle only and retain other cycles infromation */
-   /* 0x03 ensures error status for this cycle is made to INVALID before being updated */
-   u16TempResetDataMask = ~(0x0003 << SftyHvDcUEvlnDrvBdRngErrCyclCntr);
-
-   /* Update the Range High error status with new values for this cycle */
-   u16TempCombinedMonrStsResult1 = SftyHvDcUEvlnDrvBdRngHiErrMonrSt.CombinedMonrStsMulCyc;
-   u16TempCombinedMonrStsResult2 = ((uint16)SftyHvDcUEvlnDrvBdRngErrMonrSt.RngHi);
-   SftyHvDcUEvlnDrvBdRngHiErrMonrSt.CombinedMonrStsMulCyc = ((u16TempCombinedMonrStsResult1 & u16TempResetDataMask) | (u16TempCombinedMonrStsResult2 << SftyHvDcUEvlnDrvBdRngErrCyclCntr));
-
-
-   /* Update the Range Low error status with new values for this cycle */
-   u16TempCombinedMonrStsResult1 = SftyHvDcUEvlnDrvBdRngLoErrMonrSt.CombinedMonrStsMulCyc;
-   u16TempCombinedMonrStsResult2 = ((uint16)SftyHvDcUEvlnDrvBdRngErrMonrSt.RngLo);
-   SftyHvDcUEvlnDrvBdRngLoErrMonrSt.CombinedMonrStsMulCyc = ((u16TempCombinedMonrStsResult1 & u16TempResetDataMask) | (u16TempCombinedMonrStsResult2 << SftyHvDcUEvlnDrvBdRngErrCyclCntr));
 
+      {
+         if (SftyHvDcUEvlnCtrlBdUdcVal <= SftyHvDcUEvlnCtrlBdUdcRngLoThd)
+         {
+            /* Value is lower than allowed */
+            SftyHvDcUEvlnCtrlBdRngLoErrMonrSt = ERR_DEB_MONR_STS_FAILED;
+         }
+         else
+         {
+            /* No error */
+            SftyHvDcUEvlnCtrlBdRngLoErrMonrSt = ERR_DEB_MONR_STS_PASSED;
+         }
+      }
 
-   /* Update Cycle Countor */
-   SftyHvDcUEvlnDrvBdRngErrCyclCntr += 2;
-   
-   if (SftyHvDcUEvlnDrvBdRngErrCyclCntr >= 10)
-   {
-      SftyHvDcUEvlnDrvBdRngErrCyclCntr = 0;
-   }
-   else
-   {
-      /* Do Nothing */
-   }\t
-\t\t 
-#else
-   
-   /* Normal error handling */\t
-   SftyHvDcUEvlnDrvBdRngHiErrMonrSt = SftyHvDcUEvlnDrvBdRngErrMonrSt.RngHi;
-   SftyHvDcUEvlnDrvBdRngLoErrMonrSt = SftyHvDcUEvlnDrvBdRngErrMonrSt.RngLo;
-\t  
+#if 0
+      else
+      {
+         /* Do nothing*/
+      }
 #endif
 
-
-   return;
+      return;
 }
 
-
-
 /******************************************************************/
 /*!
- * \\fn        void SftyHvDcUEvln_UpdCtrlBdErrMonrSt(void)
- * \\brief     This function updates the Control Board Error Monitor Status
- *            according to different error handling concept
- *\\return     None
+ * \\fn        void SftyHvDcUEvln_ChkRngCtrlBd(void)
+ * \\brief     This function checks ranges for HVDC voltage from Control Board
+ *            External ADC of FPGA, set error status for Range High & Low
+ * \\return    monitor status
  * \\Parent_DD SftyHvDcUEvln_MainFunctionArea2
  */
 /******************************************************************/
-LOCAL_INLINE void SftyHvDcUEvln_UpdCtrlBdErrMonrSt(void)
+LOCAL_INLINE void SftyHvDcUEvln_ChkRngCtrlBd(void)
 {
 #ifdef SWIT_FC_Active
    if((SWIT_SftyHvDcUEvln_EN_KEY==SWIT_First_HookEnableKey))
-   SWIT_SftyHvDcUEvln_UpdCtrlBdErrMonrSt_BgnHook();
+   SWIT_SftyHvDcUEvln_ChkRngCtrlBd_BgnHook();
 #endif
    /* ******** Variables declaration *********** */
 
-   /* ************* Source code **************** */
-#if (COMBINED_ERRDEB_ON == 1)
-   /* ******** Variables declaration *********** */
-   uint16 u16TempCombinedMonrStsResult1 = 0U;
-   uint16 u16TempCombinedMonrStsResult2 = 0U;
-   uint16 u16TempResetDataMask = 0U;
-   
-   /* Combined error handling */
-   
-   /* Clear data for this cycle only and retain other cycles infromation */
-   /* 0x03 ensures error status for this cycle is made to INVALID before being updated */
-   u16TempResetDataMask = ~(0x0003 << SftyHvDcUEvlnCtrlBdRngErrCyclCntr);
-
-   /* Update the Range High error status with new values for this cycle */
-   u16TempCombinedMonrStsResult1 = SftyHvDcUEvlnCtrlBdRngHiErrMonrSt.CombinedMonrStsMulCyc;
-   u16TempCombinedMonrStsResult2 = ((uint16)SftyHvDcUEvlnCtrlBdRngErrMonrSt.RngHi);
-   SftyHvDcUEvlnCtrlBdRngHiErrMonrSt.CombinedMonrStsMulCyc = ((u16TempCombinedMonrStsResult1 & u16TempResetDataMask) | (u16TempCombinedMonrStsResult2 << SftyHvDcUEvlnCtrlBdRngErrCyclCntr));
    
+   /* ************* Source code **************** */
 
-   /* Update the Range Low error status with new values for this cycle */
-   u16TempCombinedMonrStsResult1 = SftyHvDcUEvlnCtrlBdRngLoErrMonrSt.CombinedMonrStsMulCyc;
-   u16TempCombinedMonrStsResult2 = ((uint16)SftyHvDcUEvlnCtrlBdRngErrMonrSt.RngLo);
-   SftyHvDcUEvlnCtrlBdRngLoErrMonrSt.CombinedMonrStsMulCyc = ((u16TempCombinedMonrStsResult1 & u16TempResetDataMask) | (u16TempCombinedMonrStsResult2 << SftyHvDcUEvlnCtrlBdRngErrCyclCntr));
-
-
-   /* Update Cycle Countor */
-   SftyHvDcUEvlnCtrlBdRngErrCyclCntr += 2;
-   
-   if (SftyHvDcUEvlnCtrlBdRngErrCyclCntr >= 10)
-   {
-      SftyHvDcUEvlnCtrlBdRngErrCyclCntr = 0;
-   }
-   else
-   {
-      /* Do Nothing */
-   }
-\t\t 
-#else
-   
-   /* Normal error handling */\t
-   SftyHvDcUEvlnCtrlBdRngHiErrMonrSt = SftyHvDcUEvlnCtrlBdRngErrMonrSt.RngHi;
-   SftyHvDcUEvlnCtrlBdRngLoErrMonrSt = SftyHvDcUEvlnCtrlBdRngErrMonrSt.RngLo;
-   
-#endif
+   /* Range High Check */
+   SftyHvDcUEvln_ChkRngHiCtrlBd();
 
+   /* Range Low Check */
+   SftyHvDcUEvln_ChkRngLoCtrlBd();
    
    return;
 }
@@ -1067,11 +950,8 @@ FUNC(void, SFTY_DC_EVLN_CODE) SftyHvDcUEvln_MainFunctionArea1(void)
    SftyHvDcUEvlnUdcVal = SftyHvDcUEvlnDrvBdUdcVal;
 
    /* Range Check for HvDcU from Driver Board */
-   SftyHvDcUEvlnDrvBdRngErrMonrSt = SftyHvDcUEvln_ChkRngDrvBd();
+   SftyHvDcUEvln_ChkRngDrvBd();
    
-   /* Update Range Error Status */
-   SftyHvDcUEvln_UpdDrvBdErrMonrSt();
-
    
 #ifdef SWIT_IT_Active
    SWIT_SftyHvDcUEvln_MainFunctionArea1_EndHook();
@@ -1120,11 +1000,7 @@ FUNC(void, SFTY_DC_EVLN_CODE) SftyHvDcUEvln_MainFunctionArea2(void)
    SftyHvDcUEvln_ScaUdcCtrlBdVal();
    
    /* Range Check for HvDcU from Control Board */
-   SftyHvDcUEvlnCtrlBdRngErrMonrSt = SftyHvDcUEvln_ChkRngCtrlBd();
-   
-   /* Update Range Error Status */
-   SftyHvDcUEvln_UpdCtrlBdErrMonrSt();
-
+   SftyHvDcUEvln_ChkRngCtrlBd();
 
 #ifdef SWIT_IT_Active
    SWIT_SftyHvDcUEvln_MainFunctionArea2_EndHook();
@@ -1222,7 +1098,7 @@ FUNC(void, SFTY_DC_EVLN_CODE) SftyHvDcUEvln_MainFunctionAreaCmn(void)
 /*================== [closure] ==============================================*/
 /*! @} doxygen end of group definition */
 /* ********************************************************************** */
-/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2021              */
+/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2022              */
 /* All Rights Reserved. Confidential                                      */
 /* ********************************************************************** */
 /*==================[end of file]=========================================*/
diff --git a/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvDcUEvln/src/SftyHvDcUEvln_data.c b/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvDcUEvln/src/SftyHvDcUEvln_data.c
index 6d15a6a98..0d1c55274 100644
--- a/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvDcUEvln/src/SftyHvDcUEvln_data.c
+++ b/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvDcUEvln/src/SftyHvDcUEvln_data.c
@@ -3,7 +3,7 @@
 /* ADD Container: SftyHvDcUEvln                                      */
 /* ADD Container Version:01.02                                       */
 /* ***************************************************************** */
-/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2021                 */
+/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2022                 */
 /* All Rights Reserved. Confidential                                 */
 /* ***************************************************************** */
 /*!
@@ -31,42 +31,8 @@
 
 /* ********************* SEC_VAR_AREA_1_FAST_INIT_8 ********************* */
 
-
-/* Begin: SFTYDCEVLN_START_SEC_VAR_AREA_1_FAST_INIT_8 (online) */
-#define SFTYDCEVLN_START_SEC_VAR_AREA_1_FAST_INIT_8
-#include "MemMap.h"
-
-/*
-@@ INSTANCE = SftyHvDcUEvlnDrvBdRngErrMonrSt
-@@ STRUCTURE = SftyHvDcUEvlnRngErrMonStType
-@@ END
-*/
-VAR(SftyHvDcUEvlnRngErrMonStType, SFTYDCEVLN_VAR) SftyHvDcUEvlnDrvBdRngErrMonrSt = {0U, 0U};
-
-#define SFTYDCEVLN_STOP_SEC_VAR_AREA_1_FAST_INIT_8
-#include "MemMap.h"
-/* End: SFTYDCEVLN_STOP_SEC_VAR_AREA_1_FAST_INIT_8 (online) */
-
-
 /* ********************* SEC_VAR_AREA_2_FAST_INIT_8 ********************* */
 
-
-/* Begin: SFTYDCEVLN_START_SEC_VAR_AREA_2_FAST_INIT_8 (online) */
-#define SFTYDCEVLN_START_SEC_VAR_AREA_2_FAST_INIT_8
-#include "MemMap.h"
-
-/*
-@@ INSTANCE = SftyHvDcUEvlnCtrlBdRngErrMonrSt
-@@ STRUCTURE = SftyHvDcUEvlnRngErrMonStType
-@@ END
-*/
-VAR(SftyHvDcUEvlnRngErrMonStType, SFTYDCEVLN_VAR) SftyHvDcUEvlnCtrlBdRngErrMonrSt = {0U, 0U};
-
-#define SFTYDCEVLN_STOP_SEC_VAR_AREA_2_FAST_INIT_8
-#include "MemMap.h"
-/* End: SFTYDCEVLN_STOP_SEC_VAR_AREA_2_FAST_INIT_8 (online) */
-
-
 /* ********************* SEC_VAR_AREA_CMN_FAST_INIT_8 ********************* */
 
 /* Begin: SFTYDCEVLN_START_SEC_VAR_AREA_CMN_FAST_INIT_8 (online) */
diff --git a/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvInterlock/include/SftyHvInterlock.h b/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvInterlock/include/SftyHvInterlock.h
index 977b7742b..446985102 100644
--- a/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvInterlock/include/SftyHvInterlock.h
+++ b/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvInterlock/include/SftyHvInterlock.h
@@ -1,5 +1,5 @@
 /* ********************************************************************** */
-/* Sourcefile: SftyHvInterlock.h                                               */
+/* Sourcefile: SftyHvInterlock.h                                          */
 /*                                                                        */
 /* Project: 100KW                                                         */
 /* Aurix                                                                  */
@@ -7,7 +7,7 @@
 /* Department: Valeo Siemens eAutomotive                                  */
 /* I DT EC R&D                                                            */
 /* ********************************************************************** */
-/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2021              */
+/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2022              */
 /* All Rights Reserved. Confidential                                      */
 /* ********************************************************************** */
 #ifndef SFTYHVINTERLOCK_H
@@ -44,7 +44,7 @@ extern FUNC(void, SFTYHVINTERLOCK) SftyHvInterlock_Init(void);
 /*! @} doxygen end of group definition */
 #endif /* SFTYHVINTERLOCK_H_ */
 /* ********************************************************************** */
-/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2021              */
+/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2022              */
 /* All Rights Reserved.  Confidential                                     */
 /* ********************************************************************** */
 /*==================[end of file]============================================*/
diff --git a/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvInterlock/include/SftyHvInterlock_data.h b/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvInterlock/include/SftyHvInterlock_data.h
index df8241cba..1e9119b71 100644
--- a/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvInterlock/include/SftyHvInterlock_data.h
+++ b/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvInterlock/include/SftyHvInterlock_data.h
@@ -1,9 +1,9 @@
 /* ***************************************************************** */
-/* Sourcefile: SftyHVInterlock_data.h                                  */
-/* ADD Container: SftyHVInterlock                                      */
+/* Sourcefile: SftyHVInterlock_data.h                                */
+/* ADD Container: SftyHVInterlock                                    */
 /* ADD Container Version: 01.00                                      */
 /* ***************************************************************** */
-/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2021                 */
+/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2022                 */
 /* All Rights Reserved. Confidential                                 */
 /* ***************************************************************** */
 /*!
@@ -45,38 +45,6 @@ extern VAR(uint8, SFTYCRASHSIGMON_VAR) SftyHvInterlockTiErrMonrSt;
 #include "MemMap.h"
 /* End: SFTYHVINTERLOCK_STOP_SEC_VAR_AREA_2_SLOW_INIT_8 (online) */
 
-/* Begin: SFTYREPLCMT_START_SEC_CALIB_8 (calib) */
-#define SFTYREPLCMT_START_SEC_CALIB_8
-#include "MemMap.h"
-
-extern CONST(uint8, SFTYREPLCMT_CALIB) SftyReplcmtHvInterlockVadcStiEna;
-extern CONST(uint8, SFTYREPLCMT_CALIB) SftyReplcmtHvInterlockVadcTiStampStiEna;
-extern CONST(uint8, SFTYREPLCMT_CALIB) SftyReplcmtHvInterlockStiEna;
-extern CONST(uint8, SFTYREPLCMT_CALIB) SftyReplcmtE2eInterlockEvt;
-
-#define SFTYREPLCMT_STOP_SEC_CALIB_8
-#include "MemMap.h"
-/* End: SFTYREPLCMT_STOP_SEC_CALIB_8 (calib) */
-
-/* Begin: SFTYREPLCMT_START_SEC_CALIB_8 (calib) */
-#define SFTYREPLCMT_START_SEC_CALIB_16
-#include "MemMap.h"
-
-extern CONST(uint16, SFTYREPLCMT_CALIB) SftyReplcmtHvInterlockVadc;
-
-#define SFTYREPLCMT_STOP_SEC_CALIB_16
-#include "MemMap.h"
-/* End: SFTYREPLCMT_STOP_SEC_CALIB_16 (calib) */
-
-/* Begin: SFTYREPLCMT_START_SEC_CALIB_32 (calib) */
-#define SFTYREPLCMT_START_SEC_CALIB_32
-#include "MemMap.h"
-/* PRQA S 0777 1 #This identifier is different from SftyReplcmtHvInterlockVadcTiStampStiEna */
-extern CONST(uint32, SFTYREPLCMT_CALIB) SftyReplcmtHvInterlockVadcTiStamp; 
-#define SFTYREPLCMT_STOP_SEC_CALIB_32
-#include "MemMap.h"
-/* End: SFTYREPLCMT_STOP_SEC_CALIB_32 (calib) */
-
 /* Begin: SFTYHVINTERLOCK_START_SEC_CALIB_16 (calib) */
 #define SFTYHVINTERLOCK_START_SEC_CALIB_16
 #include "MemMap.h"
@@ -96,10 +64,10 @@ extern CONST(uint16, SFTYHVINTERLOCK_CALIB) SftyHvInterlockDtctAcc;
 /* End: SFTYHVINTERLOCK_STOP_SEC_CALIB_16 (calib) */
 
 
-/*================== [closure] ==============================================*/
-/*! @} doxygen end of group definition */
+/*================== [closure] ======================================*/
+/*! @} doxygen end of group definition                               */
 #endif
-/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2021                 */
+/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2022                 */
 /* All Rights Reserved. Confidential                                 */
 /* ***************************************************************** */
 /*==================[end of file]====================================*/
diff --git a/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvInterlock/src/SftyHvInterlock.c b/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvInterlock/src/SftyHvInterlock.c
index 6a3c5da1f..6098cf584 100644
--- a/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvInterlock/src/SftyHvInterlock.c
+++ b/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvInterlock/src/SftyHvInterlock.c
@@ -1,5 +1,5 @@
 /* ********************************************************************** */
-/* Sourcefile:    SftyHvInterlock.c                                            */
+/* Sourcefile:    SftyHvInterlock.c                                       */
 /*                                                                        */
 /* Project:       100kw                                                   */
 /* TriCore                                                                */
@@ -8,10 +8,10 @@
 /* Department: Valeo Siemens eAutomotive                                  */
 /* I DT EC R&D                                                            */
 /* ********************************************************************** */
-/* ***************************************************************** */
-/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2021                 */
-/* All Rights Reserved. Confidential                                 */
-/* ***************************************************************** */
+/* ********************************************************************** */
+/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2022                      */
+/* All Rights Reserved. Confidential                                      */
+/* ********************************************************************** */
 
 /*!
 * \\defgroup SftyHVInterlock SftyHVInterlock - Safety High Voltage Interlock
@@ -40,6 +40,7 @@
 #include "SftyDma.h"
 #include "SftyE2eRx_data.h"
 #include "SftyUtils.h"
+#include "SftyReplcmt_data.h"
 
 #if  defined(SWIT_Active) || defined(SWIT_IT_Active) || defined(SWIT_FC_Active)
 #include "SWIT_Sfty.h"
@@ -238,7 +239,7 @@ LOCAL_INLINE void SftyHvInterlock_PassiveSigChk(void)
    SWIT_SftyHvInterlock_PassiveSigChk_BgnHook();
 #endif
    /* ******** Variables declaration *********** */
-   uint8 SftyHvInterlockEvtE2e; /* local variable to store External Interlock Trigger value*/
+   uint8 interlockEvtE2e; /* local variable to store External Interlock Trigger value*/
 
    /* ************* Source code **************** */
 
@@ -247,38 +248,53 @@ LOCAL_INLINE void SftyHvInterlock_PassiveSigChk(void)
    if (SftyReplcmtHvInterlockStiEna == TRUE)
    {
       /* Replacement value for External Interlock Trigger */
-       SftyHvInterlockEvtE2e = SftyReplcmtE2eInterlockEvt;
+       interlockEvtE2e = SftyReplcmtE2eInterlockEvt;
    }
    else
 #endif /* SERIES_PRODUCTION */
    {
       /* Update actual External Interlock Trigger */
-      SftyHvInterlockEvtE2e = SftyE2ePhyDataVcuInvStat1InterlockEveExt;
+      interlockEvtE2e = SftyE2ePhyDataVcuInvStat1InterlockEveExt;
    }
 
-   /* Check the External Interlock Trigger status and update the corresponding Errdeb Variable*/
-   if (SftyHvInterlockEvtE2e == (uint8)SFTYHVINTERLOCK_CAN_NORMAL)
-   {
-      /* Monitor status should be Connect. Hence the status is set to passed.*/
-      SftyHvInterlockPasErrMonrSt = ERR_DEB_MONR_STS_PASSED;
-   }
-   else if ((SftyHvInterlockEvtE2e == (uint8)SFTYHVINTERLOCK_CAN_FAULT) || (SftyHvInterlockEvtE2e == (uint8)SFTYHVINTERLOCK_CAN_INVALID))
+   switch(interlockEvtE2e)
    {
-      /* Monitor status should be Open. Hence the status is set to failed. */
-      SftyHvInterlockPasErrMonrSt = ERR_DEB_MONR_STS_FAILED;
-   }
-   else if (SftyHvInterlockEvtE2e == (uint8)SFTYHVINTERLOCK_CAN_RESERVED)
-   {
-      /* SftyHvInterlockPasErrMonrSt shall keep its last status */
-      SftyHvInterlockPasErrMonrSt = SftyHvInterlockLstPassiveErrMonrSt;
-   }
-   else
-   {
-      /* Do Nothing*/
+      case (uint8)SFTYHVINTERLOCK_CAN_NORMAL:
+      {
+         /* Monitor status should be Connect. Hence the status is set to passed.*/
+         SftyHvInterlockPasErrMonrSt = ERR_DEB_MONR_STS_PASSED;
+
+         break;
+      }
+
+      case (uint8)SFTYHVINTERLOCK_CAN_FAULT:
+      case (uint8)SFTYHVINTERLOCK_CAN_INVALID:
+      {
+         /* Monitor status should be Open. Hence the status is set to failed. */
+         SftyHvInterlockPasErrMonrSt = ERR_DEB_MONR_STS_FAILED;
+
+         break;
+      }
+
+      case (uint8)SFTYHVINTERLOCK_CAN_RESERVED:
+      {
+         /* SftyHvInterlockPasErrMonrSt shall keep its last status */
+         SftyHvInterlockPasErrMonrSt = SftyHvInterlockLstPassiveErrMonrSt;
+
+         break;
+      }
+
+      default:
+      {
+         /* Do Nothing*/
+         break;
+      }
+
    }
 
    /* Update the last error status to current status */
    SftyHvInterlockLstPassiveErrMonrSt = SftyHvInterlockPasErrMonrSt;
+
 #ifdef SWIT_IT_Active
    SftyHvInterlock_PassiveSigChk_EndHook();
 #endif
@@ -426,7 +442,7 @@ FUNC(void, SFTYHVINTERLOCK) SftyHvInterlock_Init(void)
 #include "MemMap.h"
 
 /* ************************************************************************* */
-/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2021                 */
+/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2022                 */
 /* All Rights Reserved. Confidential                                         */
 /* ************************************************************************* */
 /*==================[end of file]============================================*/
diff --git a/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvInterlock/src/SftyHvInterlock_data.c b/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvInterlock/src/SftyHvInterlock_data.c
index 07c4837f3..766d2453b 100644
--- a/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvInterlock/src/SftyHvInterlock_data.c
+++ b/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvInterlock/src/SftyHvInterlock_data.c
@@ -1,9 +1,9 @@
 /* ***************************************************************** */
-/* Sourcefile: SftyHvInterlock_data.c                                     */
-/* ADD Container: SftyHvInterlock                                        */
-/* ADD Container Version: 01.00                                        */
+/* Sourcefile: SftyHvInterlock_data.c                                */
+/* ADD Container: SftyHvInterlock                                    */
+/* ADD Container Version: 01.00                                      */
 /* ***************************************************************** */
-/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2021                 */
+/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2022                 */
 /* All Rights Reserved. Confidential                                 */
 /* ***************************************************************** */
 /*!
@@ -159,7 +159,7 @@ CONST(uint16, SFTYHVINTERLOCK_CALIB) SftyHvInterlockDtctAcc = 205U;
 
 /** @} doxygen end group definition */
 /* ***************************************************************** */
-/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2021                 */
+/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2022                 */
 /* All Rights Reserved. Confidential                                 */
 /* ***************************************************************** */
 /*==================[end of file]====================================*/
diff --git a/src/fw_cu/Components/Safety/Sfty_Inv/SftyInvActr/include/SftyInvActr.h b/src/fw_cu/Components/Safety/Sfty_Inv/SftyInvActr/include/SftyInvActr.h
index f51d77f89..64f448b87 100644
--- a/src/fw_cu/Components/Safety/Sfty_Inv/SftyInvActr/include/SftyInvActr.h
+++ b/src/fw_cu/Components/Safety/Sfty_Inv/SftyInvActr/include/SftyInvActr.h
@@ -7,7 +7,7 @@
 /* Department: Valeo Siemens eAutomotive                                  */
 /* I DT EC R&D                                                            */
 /* ********************************************************************** */
-/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2021              */
+/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2022              */
 /* All Rights Reserved. Confidential                                      */
 /* ********************************************************************** */
 
@@ -79,7 +79,7 @@ extern FUNC(void, SFTY_INV_ACTR_CODE) SftyInvActr_ReinitMonrData(void);
 /*! @} doxygen end of group definition */
 #endif /* SFTYINVACTR_H */
 /* ********************************************************************** */
-/* Copyright (C) Valeo Siemens eAutomotive GmbH 2021                      */
+/* Copyright (C) Valeo Siemens eAutomotive GmbH 2022                      */
 /* All Rights Reserved. Confidential */
 /* ********************************************************************** */
 /*==================[end of file]=========================================*/
diff --git a/src/fw_cu/Components/Safety/Sfty_Inv/SftyInvActr/include/SftyInvActr_cfg.h b/src/fw_cu/Components/Safety/Sfty_Inv/SftyInvActr/include/SftyInvActr_cfg.h
index 8700d43f3..47341cbb5 100644
--- a/src/fw_cu/Components/Safety/Sfty_Inv/SftyInvActr/include/SftyInvActr_cfg.h
+++ b/src/fw_cu/Components/Safety/Sfty_Inv/SftyInvActr/include/SftyInvActr_cfg.h
@@ -1,16 +1,13 @@
 /* ********************************************************************** */
 /* Sourcefile: SftyInvActr_cfg.h                                          */
 /*                                                                        */
-/* Project: NextGen                                                       */
+/* Project: 100KW                                                         */
 /* Aurix                                                                  */
 /*                                                                        */
-/* Department: SIEMENS AG                                                 */
+/* Department: Valeo Siemens eAutomotive                                  */
 /* I DT EC R&D                                                            */
-/*                                                                        */
-/* First author: Alexander Bochem                                         */
-/* Other authors: -                                                       */
 /* ********************************************************************** */
-/* Copyright (C) Siemens AG 2015                                          */
+/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2022              */
 /* All Rights Reserved. Confidential                                      */
 /* ********************************************************************** */
 #ifndef SFTYINVACTR_CFG_H
@@ -34,8 +31,8 @@
 /*! @} doxygen end of group definition */
 #endif /* SFTYINVACTR_CFG_H */
 /* ********************************************************************** */
-/* Copyright (C) Siemens AG 2015 */
+/* Copyright (C) Valeo Siemens eAutomotive GmbH 2022                      */
 /* All Rights Reserved. Confidential */
 /* ********************************************************************** */
-/*==================[end of file]============================================*/
+/*==================[end of file]=========================================*/
 
diff --git a/src/fw_cu/Components/Safety/Sfty_Inv/SftyInvActr/include/SftyInvActr_data.h b/src/fw_cu/Components/Safety/Sfty_Inv/SftyInvActr/include/SftyInvActr_data.h
index c63f5291a..0544c820c 100644
--- a/src/fw_cu/Components/Safety/Sfty_Inv/SftyInvActr/include/SftyInvActr_data.h
+++ b/src/fw_cu/Components/Safety/Sfty_Inv/SftyInvActr/include/SftyInvActr_data.h
@@ -1,10 +1,10 @@
 /* ***************************************************************** */
-/* Sourcefile: SftyInvActr_data.h\t\t\t\t\t\t\t\t\t */
-/* ADD Container: SftyInvActr\t\t\t\t\t\t\t\t\t\t */
-/* ADD Container Version: 01.01\t\t\t\t\t\t\t\t\t\t */
+/* Sourcefile: SftyInvActr_data.h\t\t\t\t\t\t\t\t\t         */
+/* ADD Container: SftyInvActr\t\t\t\t\t\t\t\t\t\t            */
+/* ADD Container Version: 01.01\t\t\t\t\t\t\t\t\t         \t*/
 /* ***************************************************************** */
-/* Copyright (C) Valeo Siemens eAutomotive GmbH 2021 \t\t\t\t */
-/* All Rights Reserved. Confidential \t\t\t\t\t\t\t\t */
+/* Copyright (C) Valeo Siemens eAutomotive GmbH 2022 \t\t\t\t      */
+/* All Rights Reserved. Confidential \t\t\t\t\t\t\t\t         */
 /* ***************************************************************** */
 
 /*!
@@ -331,7 +331,7 @@ extern CONST(float32, SFTYINVACTR_CALIB) SftyReplcmtInvActrMotorSpdFild;
 /*! @} doxygen end of group definition */
 #endif /* SFTYINVACTR_DATA_H */
 /* ***************************************************************** */
-/* Copyright (C) Valeo Siemens eAutomotive GmbH 2021                 */
+/* Copyright (C) Valeo Siemens eAutomotive GmbH 2022                 */
 /* All Rights Reserved. Confidential                                 */
 /* ***************************************************************** */
 /*==================[end of file]====================================*/
diff --git a/src/fw_cu/Components/Safety/Sfty_Inv/SftyInvActr/src/SftyInvActr.c b/src/fw_cu/Components/Safety/Sfty_Inv/SftyInvActr/src/SftyInvActr.c
index fa46300a0..0e9dcd88b 100644
--- a/src/fw_cu/Components/Safety/Sfty_Inv/SftyInvActr/src/SftyInvActr.c
+++ b/src/fw_cu/Components/Safety/Sfty_Inv/SftyInvActr/src/SftyInvActr.c
@@ -10,7 +10,7 @@
 /* Department: Valeo Siemens eAutomotive                                  */
 /* I DT EC R&D                                                            */
 /* ********************************************************************** */
-/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2021              */
+/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2022              */
 /* All Rights Reserved. Confidential                                      */
 /* ********************************************************************** */
 
@@ -77,14 +77,12 @@ LOCAL_INLINE void SftyInvActr_ClrErrMonrSt(void)
    /* ************* Source code **************** */
 
    SftyInvActrSafeStCompErrMonrSt    = ERR_DEB_MONR_STS_INACTIVE;
-   
    SftyInvActrHSGateDrvrErrMonrSt    = ERR_DEB_MONR_STS_INACTIVE;
    SftyInvActrLSGateDrvrErrMonrSt    = ERR_DEB_MONR_STS_INACTIVE;
    SftyInvActrMidPointPhaUErrMonrSt  = ERR_DEB_MONR_STS_INACTIVE;
    SftyInvActrMidPointPhaVErrMonrSt  = ERR_DEB_MONR_STS_INACTIVE;
    SftyInvActrMidPointPhaWErrMonrSt  = ERR_DEB_MONR_STS_INACTIVE;
    
-   
    return;
 }
 
@@ -101,7 +99,7 @@ LOCAL_INLINE void SftyInvActr_ClrErrMonrSt(void)
 LOCAL_INLINE void SftyInvActr_GetInputData(void)
 {
    /* ******** Variables declaration *********** */
-   uint8 IgbtErrMonitorStMap[2] = {ERR_DEB_MONR_STS_FAILED, ERR_DEB_MONR_STS_PASSED};
+   uint8 igbtErrMonrStMap[2] = {ERR_DEB_MONR_STS_FAILED, ERR_DEB_MONR_STS_PASSED};
 \t  
    /* ************* Source code **************** */
 
@@ -112,20 +110,20 @@ LOCAL_INLINE void SftyInvActr_GetInputData(void)
    if (SftyReplcmtInvActrSafeStReqSftyStiEna == TRUE)
    {
       SftyInvActrFctldHsAscSfty         = SftyReplcmtInvActrFctldHsAscSfty;
-\t  SftyInvActrFctldLsAscSfty         = SftyReplcmtInvActrFctldLsAscSfty;
-\t  SftyInvActrFctldSpoSfty           = SftyReplcmtInvActrFctldSpoSfty;
-\t  SftyInvActrFctldCoordHsAscSpoSfty = SftyReplcmtInvActrFctldCoordHsAscSpoSfty;
-\t  SftyInvActrFctldCoordLsAscSpoSfty = SftyReplcmtInvActrFctldCoordLsAscSpoSfty;
+      SftyInvActrFctldLsAscSfty         = SftyReplcmtInvActrFctldLsAscSfty;
+      SftyInvActrFctldSpoSfty           = SftyReplcmtInvActrFctldSpoSfty;
+      SftyInvActrFctldCoordHsAscSpoSfty = SftyReplcmtInvActrFctldCoordHsAscSpoSfty;
+      SftyInvActrFctldCoordLsAscSpoSfty = SftyReplcmtInvActrFctldCoordLsAscSpoSfty;
    }
    else
    
 #endif /* SERIES_PRODUCTION */
    {
       SftyInvActrFctldHsAscSfty         = (boolean)(SftyErrDebFctInhbnSts.B.FctIdHsAsc);
-\t  SftyInvActrFctldLsAscSfty         = (boolean)(SftyErrDebFctInhbnSts.B.FctIdLsAsc);
-\t  SftyInvActrFctldSpoSfty           = (boolean)(SftyErrDebFctInhbnSts.B.FctIdSpo);
-\t  SftyInvActrFctldCoordHsAscSpoSfty = (boolean)(SftyErrDebFctInhbnSts.B.FctIdCoordHsAscSpo);
-\t  SftyInvActrFctldCoordLsAscSpoSfty = (boolean)(SftyErrDebFctInhbnSts.B.FctIdCoordLsAscSpo);
+      SftyInvActrFctldLsAscSfty         = (boolean)(SftyErrDebFctInhbnSts.B.FctIdLsAsc);
+      SftyInvActrFctldSpoSfty           = (boolean)(SftyErrDebFctInhbnSts.B.FctIdSpo);
+      SftyInvActrFctldCoordHsAscSpoSfty = (boolean)(SftyErrDebFctInhbnSts.B.FctIdCoordHsAscSpo);
+      SftyInvActrFctldCoordLsAscSpoSfty = (boolean)(SftyErrDebFctInhbnSts.B.FctIdCoordLsAscSpo);
    }
 
    /* 2> Read Safe State Request that is from DrvCtrl module */
@@ -185,22 +183,22 @@ LOCAL_INLINE void SftyInvActr_GetInputData(void)
 
    if (SftyReplcmtInvActrIgbtMonrStStiEna == TRUE)
    {
-      SftyInvActrHSGateDrvrErrMonrSt   = IgbtErrMonitorStMap[SftyReplcmtInvActrHSGateDrvrErrMonrSt & (0x01U)];
-      SftyInvActrLSGateDrvrErrMonrSt   = IgbtErrMonitorStMap[SftyReplcmtInvActrLSGateDrvrErrMonrSt & (0x01U)];
-      SftyInvActrMidPointPhaUErrMonrSt = IgbtErrMonitorStMap[SftyReplcmtInvActrMidPointPhaUErrMonrSt & (0x01U)];
-      SftyInvActrMidPointPhaVErrMonrSt = IgbtErrMonitorStMap[SftyReplcmtInvActrMidPointPhaVErrMonrSt & (0x01U)];
-      SftyInvActrMidPointPhaWErrMonrSt = IgbtErrMonitorStMap[SftyReplcmtInvActrMidPointPhaWErrMonrSt & (0x01U)];
+      SftyInvActrHSGateDrvrErrMonrSt   = igbtErrMonrStMap[SftyReplcmtInvActrHSGateDrvrErrMonrSt & (0x01U)];
+      SftyInvActrLSGateDrvrErrMonrSt   = igbtErrMonrStMap[SftyReplcmtInvActrLSGateDrvrErrMonrSt & (0x01U)];
+      SftyInvActrMidPointPhaUErrMonrSt = igbtErrMonrStMap[SftyReplcmtInvActrMidPointPhaUErrMonrSt & (0x01U)];
+      SftyInvActrMidPointPhaVErrMonrSt = igbtErrMonrStMap[SftyReplcmtInvActrMidPointPhaVErrMonrSt & (0x01U)];
+      SftyInvActrMidPointPhaWErrMonrSt = igbtErrMonrStMap[SftyReplcmtInvActrMidPointPhaWErrMonrSt & (0x01U)];
    }
    else
    
 #endif /* SERIES_PRODUCTION */
 
    {
-\t  SftyInvActrHSGateDrvrErrMonrSt   = IgbtErrMonitorStMap[SftyE2eFpgaHsGateDrvrFltSts & (0x01U)];
-      SftyInvActrLSGateDrvrErrMonrSt   = IgbtErrMonitorStMap[SftyE2eFpgaLoGateDrvrFltSts & (0x01U)];   
-      SftyInvActrMidPointPhaUErrMonrSt = IgbtErrMonitorStMap[SftyE2eFpgaMidPointPhaFltSts[SYSDEF_PHA_U] & (0x01U)];   
-      SftyInvActrMidPointPhaVErrMonrSt = IgbtErrMonitorStMap[SftyE2eFpgaMidPointPhaFltSts[SYSDEF_PHA_V] & (0x01U)];   
-      SftyInvActrMidPointPhaWErrMonrSt = IgbtErrMonitorStMap[SftyE2eFpgaMidPointPhaFltSts[SYSDEF_PHA_W] & (0x01U)];
+      SftyInvActrHSGateDrvrErrMonrSt   = igbtErrMonrStMap[SftyE2eFpgaHsGateDrvrFltSts & (0x01U)];
+      SftyInvActrLSGateDrvrErrMonrSt   = igbtErrMonrStMap[SftyE2eFpgaLoGateDrvrFltSts & (0x01U)];
+      SftyInvActrMidPointPhaUErrMonrSt = igbtErrMonrStMap[SftyE2eFpgaMidPointPhaFltSts[SYSDEF_PHA_U] & (0x01U)];
+      SftyInvActrMidPointPhaVErrMonrSt = igbtErrMonrStMap[SftyE2eFpgaMidPointPhaFltSts[SYSDEF_PHA_V] & (0x01U)];
+      SftyInvActrMidPointPhaWErrMonrSt = igbtErrMonrStMap[SftyE2eFpgaMidPointPhaFltSts[SYSDEF_PHA_W] & (0x01U)];
    }
 
 
@@ -211,21 +209,69 @@ LOCAL_INLINE void SftyInvActr_GetInputData(void)
    if (SftyReplcmtInvActrCurrSafeStStiEna == TRUE)
    {
       SftyInvActrEmgySwFltSts     = SftyReplcmtInvActrEmgySwFltSts;
-\t  SftyInvActrSCSpdReadyFltSts = SftyReplcmtInvActrSCSpdReadyFltSts;
+      SftyInvActrSCSpdReadyFltSts = SftyReplcmtInvActrSCSpdReadyFltSts;
    }
    else
 \t   
 #endif /* SERIES_PRODUCTION */
 
-   {    
+   {
       SftyInvActrEmgySwFltSts     = SftyE2eFpgaEmgySWFltSts;
-\t  SftyInvActrSCSpdReadyFltSts = SftyE2eFpgaScSpdReadyFltSts;
+      SftyInvActrSCSpdReadyFltSts = SftyE2eFpgaScSpdReadyFltSts;
    }
    
 
    return;
 }
 
+/******************************************************************/
+/*!
+ * \\fn        uint8 SftyInvActr_GetPrioAscSafeStReq(void)
+ * \\brief     This function privides ASC Safe State Request with high priority
+ * \\return    Safe State Request from SSW module
+ * \\Parent_DD SftyInvActr_MainFunctionAreaCmn
+ */
+/******************************************************************/
+LOCAL_INLINE uint8 SftyInvActr_GetPrioAscSafeStReq(void)
+{
+   uint8 retVal;
+
+   /* LS_ASC has high priority */
+   if (SftyInvActrFctldLsAscSfty == TRUE)
+   {
+      retVal = LS_ASC_REQ_SSW;
+   }
+   else
+   {
+      retVal = HS_ASC_REQ_SSW;
+   }
+
+   return retVal;
+}
+
+/******************************************************************/
+/*!
+ * \\fn        uint8 SftyInvActr_GetPrioAscSafeStReq(void)
+ * \\brief     This function privides Coordinated ASC SPO Safe State Request with high priority
+ * \\return    Safe State Request from SSW module
+ * \\Parent_DD SftyInvActr_MainFunctionAreaCmn
+ */
+/******************************************************************/
+LOCAL_INLINE uint8 SftyInvActr_GetPrioCrdAscSpoSafeStReq(void)
+{
+   uint8 retVal;
+
+   if (SftyInvActrFctldCoordLsAscSpoSfty == TRUE)
+   {
+      retVal = COORD_LS_ASC_SPO_REQ_SSW;
+   }
+   else
+   {
+      retVal = COORD_HS_ASC_SPO_REQ_SSW;
+   }
+
+   return retVal;
+}
 
 /******************************************************************/
 /*!
@@ -239,57 +285,118 @@ LOCAL_INLINE void SftyInvActr_GetInputData(void)
 LOCAL_INLINE uint8 SftyInvActr_GetSafeStReqSfty(void)
 {
    /* ******** Variables declaration *********** */
-   uint8 SafeStReqSfty;\t /* Safe state request from SSW module */
+   uint8 safeStReqSfty;\t /* Safe state request from SSW module */
    
 
    /* ************* Source code **************** */
    
    if ((SftyInvActrFctldLsAscSfty == TRUE)   ||
-   \t   (SftyInvActrFctldHsAscSfty == TRUE))
+   \t (SftyInvActrFctldHsAscSfty == TRUE))
    {
       /* LS_ASC has high priority */
-\t  if (SftyInvActrFctldLsAscSfty == TRUE)
-\t  {
-\t     SafeStReqSfty = LS_ASC_REQ_SSW;
-\t  }
-\t  else
-\t  {
-\t     SafeStReqSfty = HS_ASC_REQ_SSW;
-\t  }
+      safeStReqSfty = SftyInvActr_GetPrioAscSafeStReq();
    }
    else if ((SftyInvActrFctldCoordLsAscSpoSfty == TRUE)   ||
-   \t        (SftyInvActrFctldCoordHsAscSpoSfty == TRUE))
+   \t      (SftyInvActrFctldCoordHsAscSpoSfty == TRUE))
    {
-\t  if (SftyInvActrFctldCoordLsAscSpoSfty == TRUE)
-\t  {
-\t     SafeStReqSfty = COORD_LS_ASC_SPO_REQ_SSW;
-\t  }
-\t  else
-\t  {
-\t     SafeStReqSfty = COORD_HS_ASC_SPO_REQ_SSW;
-\t  }
+      /* LS_ASC_SPO has high priority */
+      safeStReqSfty = SftyInvActr_GetPrioCrdAscSpoSafeStReq();
    }
    else if (SftyInvActrFctldSpoSfty == TRUE)
    {
-      SafeStReqSfty = SPO_REQ_SSW;
+      safeStReqSfty = SPO_REQ_SSW;
    }
    else
    {
-      SafeStReqSfty = NO_SAFE_STATE_REQ_SSW;
+      safeStReqSfty = NO_SAFE_STATE_REQ_SSW;
    }
 
-   
-   return SafeStReqSfty;
+   return safeStReqSfty;
+}
+
+/******************************************************************/
+/*!
+ * \\fn        void SftyInvActr_ChkAscSafeStReq(uint8 safeStReq)
+ * \\brief     This function checks ASC safe state request
+ * \\param     [in] safeStReq: safe stare request
+ * \\return    ASC request is present
+ * \\Parent_DD SftyInvActr_MainFunctionAreaCmn
+ */
+/******************************************************************/
+LOCAL_INLINE boolean SftyInvActr_ChkAscSafeStReq(uint8 safeStReq)
+{
+   boolean retVal;
+
+   if ((safeStReq == HS_ASC_REQ_SSW)             ||
+       (safeStReq == LS_ASC_REQ_SSW)             ||
+       (SftyInvActrSafeStReqDrv == ACS_REQ_DRCO))
+   {
+      retVal = TRUE;
+   }
+   else
+   {
+      retVal = FALSE;
+   }
+
+   return retVal;
 }
 
+/******************************************************************/
+/*!
+ * \\fn        void SftyInvActr_ChkCrdAscSpoSafeStReq(uint8 safeStReq)
+ * \\brief     This function checks coordinated ASC SPO safe state request
+ * \\param     [in] safeStReq: safe stare request
+ * \\return    coordinated ASC SPO request is present
+ * \\Parent_DD SftyInvActr_MainFunctionAreaCmn
+ */
+/******************************************************************/
+LOCAL_INLINE boolean SftyInvActr_ChkCrdAscSpoSafeStReq(uint8 safeStReq)
+{
+   boolean retVal;
+
+   if ((safeStReq == COORD_HS_ASC_SPO_REQ_SSW) ||
+       (safeStReq == COORD_LS_ASC_SPO_REQ_SSW))
+   {
+      retVal = TRUE;
+   }
+   else
+   {
+      retVal = FALSE;
+   }
+
+   return retVal;
+}
 
+/******************************************************************/
+/*!
+ * \\fn        void SftyInvActr_ChkSpoSafeStReq(uint8 safeStReq)
+ * \\brief     This function checks SPO safe state request
+ * \\param     [in] safeStReq: safe stare request
+ * \\return
+ * \\Parent_DD SftyInvActr_MainFunctionAreaCmn
+ */
+/******************************************************************/
+LOCAL_INLINE void SftyInvActr_ChkSpoSafeStReq(uint8 safeStReq)
+{
+   if ((safeStReq               == SPO_REQ_SSW) ||
+       (SftyInvActrSafeStReqDrv == SPO_REQ_DRCO))
+   {
+      SftyInvActrSafeStReqIntel = SPO_REQ_INTEL;
+   }
+   else
+   {
+      SftyInvActrSafeStReqIntel = NO_SAFE_STATE_REQ_INTEL;
+   }
 
+   return;
+}
 /******************************************************************/
 /*!
  * \\fn        void SftyInvActr_DetmnSafeStReq(void)
  * \\brief     This function determines the final safe state request
  * \\          depending on priority (ASC > Coordinated ASCPO > SPO)
- * \\          (SSW core request is high priority if there are 2 safe state request from different core)
+ * \\          (SSW core request is high priority if there are 2
+ *            safe state request from different core)
  * \\return    None
  * \\Parent_DD SftyInvActr_MainFunctionAreaCmn
  */
@@ -297,64 +404,125 @@ LOCAL_INLINE uint8 SftyInvActr_GetSafeStReqSfty(void)
 LOCAL_INLINE void SftyInvActr_DetmnSafeStReq(void)
 {
    /* ******** Variables declaration *********** */      
-   uint8 SafeStReqSSW;\t /* Safe state request from SSW module */
+   uint8 safeStReq;\t /* Safe state request from SSW module */
+   boolean chkRes;
    
    /* ************* Source code **************** */
 
    /* Get Safe State Request from SSW Core */
-   SafeStReqSSW = SftyInvActr_GetSafeStReqSfty();
+   safeStReq = SftyInvActr_GetSafeStReqSfty();
    
-   /* Determining the final safe state request */
-   if ((SafeStReqSSW == HS_ASC_REQ_SSW)             ||
-   \t   (SafeStReqSSW == LS_ASC_REQ_SSW)             ||
-   \t   (SftyInvActrSafeStReqDrv == ACS_REQ_DRCO))
+   chkRes = SftyInvActr_ChkAscSafeStReq(safeStReq);
+
+   if( chkRes == TRUE)
    {
       SftyInvActrSafeStReqIntel = ACS_REQ_INTEL;
-   }   
-   else if ((SafeStReqSSW == COORD_HS_ASC_SPO_REQ_SSW) ||
-   \t        (SafeStReqSSW == COORD_LS_ASC_SPO_REQ_SSW))
+   }
+   else
+   {
+      chkRes = SftyInvActr_ChkCrdAscSpoSafeStReq(safeStReq);
+
+      if (chkRes == TRUE)
+      {
+         SftyInvActrSafeStReqIntel = COORD_ASC_SPO_REQ_INTEL;
+      }
+      else
+      {
+         SftyInvActr_ChkSpoSafeStReq(safeStReq);
+      }
+   }
+
+   return;
+}
+
+/******************************************************************/
+/*!
+ * \\fn        void SftyInvActr_HndlAscCmdNoFlt(void)
+ * \\brief     This function handles ASC command no fault
+ * \\return    None
+ * \\Parent_DD SftyInvActr_MainFunctionAreaCmn
+ */
+/******************************************************************/
+LOCAL_INLINE void SftyInvActr_HndlAscCmdNoFlt(void)
+{
+   /* ASC without fault */
+   SftyInvActrStateReqEmgySw     = NO_FAULT;
+   SftyInvActrStateReqSCSpdReady = ASC_HS_LS;
+
+   /* Update Required Mode for FPGA */
+   if ((SftyInvActrEmmMode == ((uint8)EMM_INIT_MODE))    ||
+       (SftyInvActrEmmMode == ((uint8)EMM_SLEEP_MODE))   ||
+       (SftyInvActrEmmMode == ((uint8)EMM_STANDBY_MODE)))
    {
-      SftyInvActrSafeStReqIntel = COORD_ASC_SPO_REQ_INTEL;
+      SftyInvActrStateReqMod = PWM_INIT_FPGA;
    }
-   else if ((SafeStReqSSW == SPO_REQ_SSW) ||
-            (SftyInvActrSafeStReqDrv == SPO_REQ_DRCO))
+   else if (SftyInvActrEmmMode == ((uint8)EMM_TRQCTRL_MODE))
    {
-       SftyInvActrSafeStReqIntel = SPO_REQ_INTEL;
+      SftyInvActrStateReqMod = PWM_DIRECT_FPGA;
    }
-   else   /* => NO_SAFE_STATE_REQ */
+   else
    {
-\t   SftyInvActrSafeStReqIntel = NO_SAFE_STATE_REQ_INTEL;
+      /* Keep Previous Status */
    }
 
-
    return;
 }
 
+/******************************************************************/
+/*!
+ * \\fn        void SftyInvActr_HndlAscCmdNoFlt(void)
+ * \\brief     This function handles Spo command no fault
+ * \\return    None
+ * \\Parent_DD SftyInvActr_MainFunctionAreaCmn
+ */
+/******************************************************************/
+LOCAL_INLINE void SftyInvActr_HndlSpoCmdNoFlt(void)
+{
+   /* SPO without fault */
+   SftyInvActrStateReqEmgySw     = NO_FAULT;
+   SftyInvActrStateReqSCSpdReady = OPEN_CIRCUIT;
+
+   /* Update Required Mode for FPGA */
+   if ((SftyInvActrEmmMode == ((uint8)EMM_INIT_MODE)) ||
+       (SftyInvActrEmmMode == ((uint8)EMM_SLEEP_MODE)))
+   {
+      SftyInvActrStateReqMod = PWM_INIT_FPGA;
+   }
+   else if (SftyInvActrEmmMode == ((uint8)EMM_TRQCTRL_MODE))
+   {
+      SftyInvActrStateReqMod = PWM_DIRECT_FPGA;
+   }
+   else
+   {
+      /* Keep Previous Status */
+   }
 
+   return;
+}
 
 /******************************************************************/
 /*!
- * \\fn        void SftyInvActr_SendCmd(uint8 inp_SafeStateCmd)
+ * \\fn        void SftyInvActr_SendCmd(uint8 safeStReqCmd)
  * \\brief     This function sends safe state commands
  * \\param     [in] inp_SafeStateCmd: 8-bit-uint8 input data, Safe State Required Command
  * \\return    None
  * \\Parent_DD SftyInvActr_MainFunctionAreaCmn
  */
 /******************************************************************/
-LOCAL_INLINE void SftyInvActr_SendCmd(uint8 SafeStReqCmd)
+LOCAL_INLINE void SftyInvActr_SendCmd(uint8 safeStReqCmd)
 {
    /* ******** Variables declaration *********** */
    
    /* ************* Source code **************** */
 
-   switch (SafeStReqCmd)
+   switch (safeStReqCmd)
    {
       case CMD_ASC:
       {
          /* ASC Commends */
-\t     SftyInvActrStateReqMod        = PWM_DIRECT_FPGA;
+         SftyInvActrStateReqMod        = PWM_DIRECT_FPGA;
          SftyInvActrStateReqEmgySw     = EMERGENCY_STOP;
-\t     SftyInvActrStateReqSCSpdReady = ASC_HS_LS;
+         SftyInvActrStateReqSCSpdReady = ASC_HS_LS;
 \t\t 
          break;
       }
@@ -362,56 +530,20 @@ LOCAL_INLINE void SftyInvActr_SendCmd(uint8 SafeStReqCmd)
       {
          /* SPO Commends */
 \t     SftyInvActrStateReqMod        = PWM_INIT_FPGA;
-\t\t SftyInvActrStateReqEmgySw     = EMERGENCY_STOP;
+\t     SftyInvActrStateReqEmgySw     = EMERGENCY_STOP;
 \t     SftyInvActrStateReqSCSpdReady = ASC_HS_LS;
 \t\t 
          break;
       }
 \t  case CMD_ASC_NO_FAULT:
 \t  {
-         /* ASC without fault */
-         SftyInvActrStateReqEmgySw     = NO_FAULT;
-\t     SftyInvActrStateReqSCSpdReady = ASC_HS_LS;
-
-\t\t /* Update Required Mode for FPGA */
-\t\t if ((SftyInvActrEmmMode == ((uint8)EMM_INIT_MODE))
-\t          ||
-\t\t     (SftyInvActrEmmMode == ((uint8)EMM_SLEEP_MODE)))
-\t\t {
-\t\t    SftyInvActrStateReqMod = PWM_INIT_FPGA;
-\t\t }
-\t\t else if (SftyInvActrEmmMode == ((uint8)EMM_TRQCTRL_MODE))
-\t\t {
-\t\t    SftyInvActrStateReqMod = PWM_DIRECT_FPGA;
-\t\t }
-\t\t else
-\t\t {
-\t\t    /* Keep Previous Status */
-\t\t }\t\t 
+\t     SftyInvActr_HndlAscCmdNoFlt();
 \t     
 \t     break;
 \t  }
 \t  case CMD_SPO_NO_FAULT:
 \t  {
-\t     /* SPO without fault */
-\t\t SftyInvActrStateReqEmgySw     = NO_FAULT;
-\t     SftyInvActrStateReqSCSpdReady = OPEN_CIRCUIT;
-\t\t 
-\t\t /* Update Required Mode for FPGA */
-\t\t if ((SftyInvActrEmmMode == ((uint8)EMM_INIT_MODE))
-\t          ||
-\t\t     (SftyInvActrEmmMode == ((uint8)EMM_SLEEP_MODE)))
-\t\t {
-\t\t    SftyInvActrStateReqMod = PWM_INIT_FPGA;
-\t\t }
-\t\t else if (SftyInvActrEmmMode == ((uint8)EMM_TRQCTRL_MODE))
-\t\t {
-\t\t    SftyInvActrStateReqMod = PWM_DIRECT_FPGA;
-\t\t }
-\t\t else
-\t\t {
-\t\t    /* Keep Previous Status */
-\t\t }
+\t     SftyInvActr_HndlSpoCmdNoFlt();
 \t\t 
 \t     break;
 \t  }
@@ -425,8 +557,102 @@ LOCAL_INLINE void SftyInvActr_SendCmd(uint8 SafeStReqCmd)
    return;
 }
 
+/******************************************************************/
+/*!
+ * \\fn        void SftyInvActr_UpdAscSafeSt(void)
+ * \\brief     This function updates Asc safe state request commands
+ * \\return    None
+ * \\Parent_DD SftyInvActr_MainFunctionAreaCmn
+ */
+/******************************************************************/
+LOCAL_INLINE void SftyInvActr_UpdAscSafeSt(void)
+{
+   /* Send ASC Command */
+   SftyInvActr_SendCmd(CMD_ASC);
+
+   /* Update Safe State Request to SftyC2cData */
+   SftyC2cData.InvSafeStReq = STS_INV_SAFE_ST_ASC;
+
+   return;
+}
+
+/******************************************************************/
+/*!
+ * \\fn        void SftyInvActr_UpdCrdAscSpoSafeSt(void)
+ * \\brief     This function updates COORD_ASC_SPO safe state request commands
+ *            considering motor speed (rpm)
+ * \\return    None
+ * \\Parent_DD SftyInvActr_MainFunctionAreaCmn
+ */
+/******************************************************************/
+LOCAL_INLINE void SftyInvActr_UpdCrdAscSpoSafeSt(void)
+{
+   if (MLIB_F32AbsF32(SftyInvActrMotorSpdFild) >= SftyInvActrSpdReadyHithd)
+   {
+      /* Send ASC Command */
+      SftyInvActr_SendCmd(CMD_ASC);
+
+      /* Update Safe State Request to SftyC2cData */
+      SftyC2cData.InvSafeStReq = STS_INV_SAFE_ST_ASC;
+   }
+   else
+   {
+      /* Send SPO Command */
+      SftyInvActr_SendCmd(CMD_SPO);
+
+      /* Update Safe State Request to SftyC2cData */
+      SftyC2cData.InvSafeStReq = STS_INV_SAFE_ST_SPO;
+   }
+
+   return;
+}
+
+/******************************************************************/
+/*!
+ * \\fn        void SftyInvActr_UpdSpoSafeSt(void)
+ * \\brief     This function updates SPO safe state request commands
+ * \\return    None
+ * \\Parent_DD SftyInvActr_MainFunctionAreaCmn
+ */
+/******************************************************************/
+LOCAL_INLINE void SftyInvActr_UpdSpoSafeSt(void)
+{
+   /* Send SPO Command */
+   SftyInvActr_SendCmd(CMD_SPO);
+
+   /* Update Safe State Request to SftyC2cData */
+   SftyC2cData.InvSafeStReq = STS_INV_SAFE_ST_SPO;
+
+   return;
+}
+
+/******************************************************************/
+/*!
+ * \\fn        void SftyInvActr_UpdNoSafeSt(void)
+ * \\brief     This function updates no safe state request commands
+ *            considering motor speed (rpm)
+ * \\return    None
+ * \\Parent_DD SftyInvActr_MainFunctionAreaCmn
+ */
+/******************************************************************/
+LOCAL_INLINE void SftyInvActr_UpdNoSafeSt(void)
+{
+   if (MLIB_F32AbsF32(SftyInvActrMotorSpdFild) >= SftyInvActrSpdReadyHithd)
+   {
+      /* Send ASC_No_Fault Command */
+      SftyInvActr_SendCmd(CMD_ASC_NO_FAULT);
+   }
+   else
+   {
+      /* Send SPO_No_Fault Command */
+      SftyInvActr_SendCmd(CMD_SPO_NO_FAULT);
+   }
 
+   /* Update Safe State Request to SftyC2cData */
+   SftyC2cData.InvSafeStReq = STS_INV_SAFE_ST_INACTIVE;   /* No safe state request */
 
+   return;
+}
 /******************************************************************/
 /*!
  * \\fn        void SftyInvActr_UpdSafeStCmd(void)
@@ -445,62 +671,24 @@ LOCAL_INLINE void SftyInvActr_UpdSafeStCmd(void)
    /* Update Safe State required commands to FPGA */
    if (SftyInvActrSafeStReqIntel == ACS_REQ_INTEL)
    {
-      /* Send ASC Command */
-\t  SftyInvActr_SendCmd(CMD_ASC);
-\t  
-\t  /* Update Safe State Request to SftyC2cData */
-\t  SftyC2cData.InvSafeStReq = STS_INV_SAFE_ST_ASC;
+      SftyInvActr_UpdAscSafeSt();
    }   
    else if (SftyInvActrSafeStReqIntel == COORD_ASC_SPO_REQ_INTEL)
    {
-      if (MLIB_F32AbsF32(SftyInvActrMotorSpdFild) >= SftyInvActrSpdReadyHithd)
-      {
-         /* Send ASC Command */
-\t\t SftyInvActr_SendCmd(CMD_ASC);
-
-\t\t /* Update Safe State Request to SftyC2cData */
-\t\t SftyC2cData.InvSafeStReq = STS_INV_SAFE_ST_ASC;
-      }
-\t  else
-      {
-         /* Send SPO Command */
-         SftyInvActr_SendCmd(CMD_SPO);
-\t\t 
-\t\t /* Update Safe State Request to SftyC2cData */
-\t\t SftyC2cData.InvSafeStReq = STS_INV_SAFE_ST_SPO;
-\t\t 
-      }
+      SftyInvActr_UpdCrdAscSpoSafeSt();
    }
    else if (SftyInvActrSafeStReqIntel == SPO_REQ_INTEL)
    {
-      /* Send SPO Command */
-      SftyInvActr_SendCmd(CMD_SPO);
-
-\t  /* Update Safe State Request to SftyC2cData */
-\t  SftyC2cData.InvSafeStReq = STS_INV_SAFE_ST_SPO;
+      SftyInvActr_UpdSpoSafeSt();
    }
    else   /* => NO_SAFE_STATE_REQ */
    {
-      if (MLIB_F32AbsF32(SftyInvActrMotorSpdFild) >= SftyInvActrSpdReadyHithd)
-      {
-\t\t /* Send ASC_No_Fault Command */
-\t\t SftyInvActr_SendCmd(CMD_ASC_NO_FAULT);
-      }
-\t  else
-      {
-\t\t /* Send SPO_No_Fault Command */
-\t\t SftyInvActr_SendCmd(CMD_SPO_NO_FAULT);
-      }\t  
-
-\t  /* Update Safe State Request to SftyC2cData */
-\t  SftyC2cData.InvSafeStReq = STS_INV_SAFE_ST_INACTIVE;   /* No safe state request */
+      SftyInvActr_UpdNoSafeSt();
    }
 
    return;
 }
 
-
-
 /******************************************************************/
 /*!
  * \\fn        void SftyInvActr_MonrSafeStExct(void)
@@ -516,7 +704,7 @@ LOCAL_INLINE void SftyInvActr_MonrSafeStExct(void)
 \t  
    /* ************* Source code **************** */
    if ((SftyInvActrEmgySwFltSts     != SftyInvActrStateReqEmgySw)  ||
-   \t   (SftyInvActrSCSpdReadyFltSts != SftyInvActrStateReqSCSpdReady))
+   \t (SftyInvActrSCSpdReadyFltSts != SftyInvActrStateReqSCSpdReady))
    {
       SftyInvActrSafeStCompErrMonrSt = ERR_DEB_MONR_STS_FAILED;
    }
@@ -525,10 +713,38 @@ LOCAL_INLINE void SftyInvActr_MonrSafeStExct(void)
       SftyInvActrSafeStCompErrMonrSt = ERR_DEB_MONR_STS_PASSED;\t
    }
 
-
    return;
 }
 
+/******************************************************************/
+/*!
+ * \\fn        void SftyInvActr_TogglFltSt(void)
+ * \\brief     This function toggles passed fault status
+ * \\param     [in] fltSt: Fault status to be toggled
+ * \\return    result of toggling
+ * \\Parent_DD SftyInvActr_MainFunctionAreaCmn
+ */
+/******************************************************************/
+LOCAL_INLINE uint8 SftyInvActr_TogglFltSt(uint8 fltSt)
+{
+   uint8 retVal;
+
+   /* ******** Variables declaration *********** */
+
+   /* ************* Source code **************** */
+
+   /* Reinitialization request of IGBT HS fault to FPGA */
+   if (fltSt == TRUE)
+   {
+      retVal = FALSE;
+   }
+   else
+   {
+      retVal = TRUE;
+   }
+
+   return retVal;
+}
 
 /*================== [definition of global functions] =======================*/
 
@@ -676,55 +892,19 @@ FUNC(void, SFTY_INV_ACTR_CODE) SftyInvActr_ReinitMonrData(void)   /* PRQA S 1503
    /* ************* Source code **************** */
 
    /* Reinitialization request of IGBT HS fault to FPGA */
-   if (SftyInvActrSetHsGateDrvrReinitSt == TRUE)
-   {
-      SftyInvActrSetHsGateDrvrReinitSt = FALSE;
-   }
-   else
-   {
-      SftyInvActrSetHsGateDrvrReinitSt = TRUE;
-   }
+   SftyInvActrSetHsGateDrvrReinitSt = SftyInvActr_TogglFltSt(SftyInvActrSetHsGateDrvrReinitSt);
 
    /* Reinitialization request of IGBT LS fault to FPGA */
-   if (SftyInvActrSetLoGateDrvrReinitSt == TRUE)
-   {
-      SftyInvActrSetLoGateDrvrReinitSt = FALSE;
-   }
-   else
-   {
-      SftyInvActrSetLoGateDrvrReinitSt = TRUE;
-   }
+   SftyInvActrSetLoGateDrvrReinitSt = SftyInvActr_TogglFltSt(SftyInvActrSetLoGateDrvrReinitSt);
 
    /* Reinitialization request of IGBT U Mid-point fault to FPGA */
-   if (SftyInvActrSetMidPointPhaUReinitSt == TRUE)
-   {
-      SftyInvActrSetMidPointPhaUReinitSt = FALSE;
-   }
-   else
-   {
-      SftyInvActrSetMidPointPhaUReinitSt = TRUE;
-   }
+   SftyInvActrSetMidPointPhaUReinitSt = SftyInvActr_TogglFltSt(SftyInvActrSetMidPointPhaUReinitSt);
 
    /* Reinitialization request of IGBT V Mid-point fault to FPGA */
-   if (SftyInvActrSetMidPointPhaVReinitSt == TRUE)
-   {
-      SftyInvActrSetMidPointPhaVReinitSt = FALSE;
-   }
-   else
-   {
-      SftyInvActrSetMidPointPhaVReinitSt = TRUE;
-   }
+   SftyInvActrSetMidPointPhaVReinitSt = SftyInvActr_TogglFltSt(SftyInvActrSetMidPointPhaVReinitSt);
 
    /* Reinitialization request of IGBT W Mid-point fault to FPGA */
-   if (SftyInvActrSetMidPointPhaWReinitSt == TRUE)
-   {
-      SftyInvActrSetMidPointPhaWReinitSt = FALSE;
-   }
-   else
-   {
-      SftyInvActrSetMidPointPhaWReinitSt = TRUE;
-   }
-   
+   SftyInvActrSetMidPointPhaWReinitSt = SftyInvActr_TogglFltSt(SftyInvActrSetMidPointPhaWReinitSt);
 
    return;
 }
@@ -737,7 +917,7 @@ FUNC(void, SFTY_INV_ACTR_CODE) SftyInvActr_ReinitMonrData(void)   /* PRQA S 1503
 /*================== [closure] ==============================================*/
 /*! @} doxygen end of group definition */
 /* ********************************************************************** */
-/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2021              */
+/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2022              */
 /* All Rights Reserved. Confidential                                      */
 /* ********************************************************************** */
 /*==================[end of file]============================================*/
diff --git a/src/fw_cu/Components/Safety/Sfty_Inv/SftyInvActr/src/SftyInvActr_data.c b/src/fw_cu/Components/Safety/Sfty_Inv/SftyInvActr/src/SftyInvActr_data.c
index 032deeaed..952a3ec56 100644
--- a/src/fw_cu/Components/Safety/Sfty_Inv/SftyInvActr/src/SftyInvActr_data.c
+++ b/src/fw_cu/Components/Safety/Sfty_Inv/SftyInvActr/src/SftyInvActr_data.c
@@ -3,7 +3,7 @@
 /* ADD Container: SftyInvActr                                        */
 /* ADD Container Version:01.01                                       */
 /* ***************************************************************** */
-/* Copyright (C) Valeo Siemens eAutomotive GmbH 2021                 */
+/* Copyright (C) Valeo Siemens eAutomotive GmbH 2022                 */
 /* All Rights Reserved. Confidential                                 */
 /* ***************************************************************** */
 /*!
@@ -742,6 +742,6 @@ CONST(float32, SFTYINVACTR_CALIB) SftyReplcmtInvActrMotorSpdFild = 0.0f;
 
 /** @} doxygen end group definition */
 /* ***************************************************************** */
-/* Copyright (C) Valeo Siemens eAutomotive GmbH 2021                 */
+/* Copyright (C) Valeo Siemens eAutomotive GmbH 2022                 */
 /* All Rights Reserved. Confidential                                 */
 /* ***************************************************************** */
diff --git a/src/fw_cu/Components/Safety/Sfty_Inv/SftyRslvrOffsHndlr/include/SftyRslvrOffsHndlr.h b/src/fw_cu/Components/Safety/Sfty_Inv/SftyRslvrOffsHndlr/include/SftyRslvrOffsHndlr.h
index 44d61f321..272c346d6 100644
--- a/src/fw_cu/Components/Safety/Sfty_Inv/SftyRslvrOffsHndlr/include/SftyRslvrOffsHndlr.h
+++ b/src/fw_cu/Components/Safety/Sfty_Inv/SftyRslvrOffsHndlr/include/SftyRslvrOffsHndlr.h
@@ -7,7 +7,7 @@
 /* Department: Valeo Siemens eAutomotive                                  */
 /* I DT EC R&D                                                            */
 /* ********************************************************************** */
-/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2021              */
+/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2022              */
 /* All Rights Reserved. Confidential                                      */
 /* ********************************************************************** */
 
@@ -37,7 +37,7 @@ extern FUNC(void, SFTYRSLVROFFSHNDLR_CODE) SftyRslvrOffsHndlr_ReInitMonrSt(void)
 extern FUNC(void, SFTYRSLVROFFSHNDLR_CODE) SftyRslvrOffsHndlr_InitAsilC(void);
 extern FUNC(void, SFTYRSLVROFFSHNDLR_CODE) SftyRslvrOffsHndlr_MainFunctionAsilC(void);
 extern FUNC(void, SFTYRSLVROFFSHNDLR_CODE) SftyRslvrOffsHndlr_InitFast(void);
-extern FUNC(void, SFTYRSLVROFFSHNDLR_CODE) SftyRslvrOffsHndlr_MainFunctionFast(void);
+extern FUNC(void, SFTYRSLVROFFSHNDLR_CODE) SftyRslvrOffsHndlr_MainFunctionFast(void); /* PRQA S 0777 # This identifier is unique and differs from other identifier */
 
 #define SFTYRSLVROFFSHNDLR_AREA_CMN_STOP_SEC_CODE_SLOW
 #include "MemMap.h"
@@ -46,7 +46,7 @@ extern FUNC(void, SFTYRSLVROFFSHNDLR_CODE) SftyRslvrOffsHndlr_MainFunctionFast(v
 /*! @} doxygen end of group definition */
 #endif /* SFTYRSLVROFFSHNDLR_H */
 /* ********************************************************************** */
-/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2021              */
+/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2022              */
 /* All Rights Reserved. Confidential                                      */
 /* ********************************************************************** */
 /*==================[end of file]============================================*/
diff --git a/src/fw_cu/Components/Safety/Sfty_Inv/SftyRslvrOffsHndlr/include/SftyRslvrOffsHndlr_data.h b/src/fw_cu/Components/Safety/Sfty_Inv/SftyRslvrOffsHndlr/include/SftyRslvrOffsHndlr_data.h
index 465ad2d22..79af3459f 100644
--- a/src/fw_cu/Components/Safety/Sfty_Inv/SftyRslvrOffsHndlr/include/SftyRslvrOffsHndlr_data.h
+++ b/src/fw_cu/Components/Safety/Sfty_Inv/SftyRslvrOffsHndlr/include/SftyRslvrOffsHndlr_data.h
@@ -3,7 +3,7 @@
 /* ADD Container: SftyRslvrOffsHndlr                                 */
 /* ADD Container Version: 1.1.0                                      */
 /* ***************************************************************** */
-/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2021         */
+/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2022         */
 /* All Rights Reserved. Confidential                                 */
 /* ***************************************************************** */
 
@@ -20,7 +20,7 @@
 #define SFTYRSLVROFFSHNDLR_START_SEC_VAR_AREA_CMN_SLOW_INIT_32
 #include "MemMap.h"
 
-extern VAR(float32, SFTYRSLVROFFSHNDLR_VAR) SftyRslvrOffsHndlrRslvrOffsRad;
+extern VAR(float32, SFTYRSLVROFFSHNDLR_VAR) SftyRslvrOffsHndlrRslvrOffsRad; /* PRQA S 3451 # Interface is needed to be declared in other component because it is take over from Modelkit  */
 
 #define SFTYRSLVROFFSHNDLR_STOP_SEC_VAR_AREA_CMN_SLOW_INIT_32
 #include "MemMap.h"
@@ -39,16 +39,6 @@ extern VAR(uint8, SFTYRSLVROFFSHNDLR_VAR) SftyRslvrOffsHndlrAscIqPlausErrMonrSt;
 #include "MemMap.h"
 /* End: SFTYRSLVROFFSHNDLR_STOP_SEC_VAR_AREA_CMN_SLOW_INIT_8 (online) */
 
-/* Begin: SFTYREPLCMT_START_SEC_CALIB_8 (calib) */
-#define SFTYREPLCMT_START_SEC_CALIB_8
-#include "MemMap.h"
-
-extern CONST(uint8, SFTYREPLCMT_CALIB) SftyReplcmtRslvrOffsStiEna;
-
-#define SFTYREPLCMT_STOP_SEC_CALIB_8
-#include "MemMap.h"
-/* End: SFTYREPLCMT_STOP_SEC_CALIB_8 (calib) */
-
 /* Begin: SFTYRSLVROFFSHNDLR_START_SEC_CALIB_8 (calib) */
 #define SFTYRSLVROFFSHNDLR_START_SEC_CALIB_8
 #include "MemMap.h"
@@ -93,6 +83,6 @@ extern CONST(float32, SFTYRSLVROFFSHNDLR_CALIB) SftyRslrOffsHndlrCalSpdHi;
 #endif
 
 /* ***************************************************************** */
-/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2021         */
+/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2022         */
 /* All Rights Reserved. Confidential                                 */
 /* ***************************************************************** */
diff --git a/src/fw_cu/Components/Safety/Sfty_Inv/SftyRslvrOffsHndlr/src/SftyRslvrOffsHndlr.c b/src/fw_cu/Components/Safety/Sfty_Inv/SftyRslvrOffsHndlr/src/SftyRslvrOffsHndlr.c
index fd405c363..b73be5e14 100644
--- a/src/fw_cu/Components/Safety/Sfty_Inv/SftyRslvrOffsHndlr/src/SftyRslvrOffsHndlr.c
+++ b/src/fw_cu/Components/Safety/Sfty_Inv/SftyRslvrOffsHndlr/src/SftyRslvrOffsHndlr.c
@@ -7,7 +7,7 @@
 /* Department: Valeo Siemens eAutomotive                                  */
 /* I DT EC R&D                                                            */
 /* ********************************************************************** */
-/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2021              */
+/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2022              */
 /* All Rights Reserved. Confidential                                      */
 /* ********************************************************************** */
 
@@ -48,7 +48,7 @@
 #include "Sfty_Types.h"
 #include "SftyUtils.h"
 #include "SysPrm_data.h"
-
+#include "SftyReplcmt_data.h"
 
 #if defined( SWIT_FC_Active) || defined( SWIT_Active) || defined( SWIT_IT_Active)
  #include "SWIT_Sfty.h" 
@@ -3631,7 +3631,7 @@ FUNC(void, SFTYRSLVROFFSHNDLR_CODE) SftyRslvrOffsHndlr_MainFunctionFast(void)
 /*================== [closure] ==============================================*/
 /*! @} doxygen end of group definition */
 /* ********************************************************************** */
-/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2021              */
+/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2022              */
 /* All Rights Reserved. Confidential                                      */
 /* ********************************************************************** */
 /*==================[end of file]============================================*/
diff --git a/src/fw_cu/Components/Safety/Sfty_Inv/SftyRslvrOffsHndlr/src/SftyRslvrOffsHndlr_data.c b/src/fw_cu/Components/Safety/Sfty_Inv/SftyRslvrOffsHndlr/src/SftyRslvrOffsHndlr_data.c
index 67da0f73f..14ac973fb 100644
--- a/src/fw_cu/Components/Safety/Sfty_Inv/SftyRslvrOffsHndlr/src/SftyRslvrOffsHndlr_data.c
+++ b/src/fw_cu/Components/Safety/Sfty_Inv/SftyRslvrOffsHndlr/src/SftyRslvrOffsHndlr_data.c
@@ -3,7 +3,7 @@
 /* ADD Container: SftyRslvrOffsHndlr                                 */
 /* ADD Container Version: 1.1.0                                      */
 /* ***************************************************************** */
-/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2021         */
+/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2022         */
 /* All Rights Reserved. Confidential                                 */
 /* ***************************************************************** */
 
@@ -313,6 +313,6 @@ CONST(float32, SFTYRSLVROFFSHNDLR_CALIB) SftyRslrOffsHndlrCalSpdHi = 250.f;
 /************************* CALIBRATION PARAMETERS - END *****************************/
 
 /* ***************************************************************** */
-/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2021         */
+/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2022         */
 /* All Rights Reserved. Confidential                                 */
 /* ***************************************************************** */
diff --git a/src/fw_cu/Components/Safety/Sfty_Inv/SftyTempEvln/include/SftyTempEvln_data.h b/src/fw_cu/Components/Safety/Sfty_Inv/SftyTempEvln/include/SftyTempEvln_data.h
index 743f8e7dd..c7e29fd69 100644
--- a/src/fw_cu/Components/Safety/Sfty_Inv/SftyTempEvln/include/SftyTempEvln_data.h
+++ b/src/fw_cu/Components/Safety/Sfty_Inv/SftyTempEvln/include/SftyTempEvln_data.h
@@ -111,7 +111,10 @@ extern VAR(uint8, SFTYTEMPEVLN_VAR) SftyTempEvlnDcLinkTempHwpMonrSt;
 extern _map CONST(float32, SFTYTEMPEVLN_CALIB) SftyTempEvlnMotStatorTSnsrLoChartcTPrmL[21];
 
 /*! IGBT temperature values; unit \'degree C\' */
-extern _map CONST(float32, SFTYTEMPEVLN_CALIB) SftyTempEvlnIgbtPhyValPhU_W[21];
+extern _map CONST(float32, SFTYTEMPEVLN_CALIB) SftyTempEvlnIgbtPhyValPhU[21];
+
+/*! IGBT temperature values; unit \'degree C\' */
+extern _map CONST(float32, SFTYTEMPEVLN_CALIB) SftyTempEvlnIgbtPhyValPhW[21];
 
 /*! IGBT temperature values; unit \'degree C\' */
 extern _map CONST(float32, SFTYTEMPEVLN_CALIB) SftyTempEvlnIgbtPhyValPhV[21];
@@ -137,10 +140,10 @@ extern CONST(uint16, SFTYTEMPEVLN_CALIB) SftyTempEvlnMotStatorTSnsrRngLoThd;
 extern CONST(uint16, SFTYTEMPEVLN_CALIB) SftyTempEvlnMotStatorTSnsrRngHiThd;
 
 /*! \\cpar Hysteresis raw value for EM Stator Temperature range high check; unit \'-\' */
-extern CONST(uint16, SFTYTEMPEVLN_CALIB) SftyTempEvlnMotStatorTSnsrRngHiHysThd;
+extern CONST(uint16, SFTYTEMPEVLN_CALIB) SftyTempEvlnMotStatorTSnsrRngHiHysThd; /* PRQA S 0777 # the identifier is unique and differs from other identifier */
 
 /*! \\cpar EM Hysteresis raw value for EM Stator Temperature range low check; unit \'-\' */
-extern CONST(uint16, SFTYTEMPEVLN_CALIB) SftyTempEvlnMotStatorTSnsrRngLoHysThd;
+extern CONST(uint16, SFTYTEMPEVLN_CALIB) SftyTempEvlnMotStatorTSnsrRngLoHysThd; /* PRQA S 0777 # the identifier is unique and differs from other identifier */
 
 /*! \\cpar NTC IGBT Temperature low threshold for Phase U; unit \'-\' */
 extern CONST(uint16, SFTYTEMPEVLN_CALIB) SftyTempEvlnIgbtTempURngLoThd;
@@ -166,14 +169,17 @@ extern CONST(uint16, SFTYTEMPEVLN_CALIB) SftyTempEvlnIgbtTempHWPRngHiThd;
 /*! \\cpar NTC Temperature threshold for Junction temperature error monitor; unit \'-\' */
 extern CONST(uint16, SFTYTEMPEVLN_CALIB) SftyTempEvlnIgbtTempHWPRngLoThd;  /* change this value */
 
-/*! IGBT temperature raw values; unit \'V\' */
-extern CONST(uint16, SFTYTEMPEVLN_CALIB) SftyTempEvlnIgbtRawValU_W[22];
+/*! IGBT temperature raw values; unit \'U\' */
+extern CONST(uint16, SFTYTEMPEVLN_CALIB) SftyTempEvlnIgbtRawValU[22];
 
 /*! IGBT temperature raw values; unit \'V\' */
 extern CONST(uint16, SFTYTEMPEVLN_CALIB) SftyTempEvlnIgbtRawValV[22];
 
+/*! IGBT temperature raw values; unit \'W\' */
+extern CONST(uint16, SFTYTEMPEVLN_CALIB) SftyTempEvlnIgbtRawValW[22];
+
 /*! Safety Motor stator temperature sensor characteristic input voltage value; unit \'V\' */
-extern CONST(uint16, SFTYTEMPEVLN_CALIB) SftyTempEvlnMotStatorTSnsrLoChartcVPrmA[22];
+extern CONST(uint16, SFTYTEMPEVLN_CALIB) SftyTempEvlnMotStatorTSnsrLoChartcVPrmA[22]; /* PRQA S 0777 # the identifier is unique and differs from other identifier */
 
 /*! \\cpar EM Stator Temperature Lower limit for raw range check; unit \'-\' */
 extern CONST(uint16, SFTYTEMPEVLN_CALIB) SftyTempEvlnHWPRngThd;
@@ -240,7 +246,7 @@ extern CONST(uint16, SFTYREPLCMT_CALIB) SftyReplcmtTempEvlnTempIGBTPhaWRawVal;
 #define SFTYREPLCMT_START_SEC_CALIB_32
 #include "MemMap.h"
 
-extern CONST(float32, SFTYREPLCMT_CALIB) SftyReplcmtTempEvlnTempMeclSpdFildAbs;
+extern CONST(float32, SFTYREPLCMT_CALIB) SftyReplcmtTempEvlnTempMeclSpdFildAbs; /* PRQA S 0777 # the identifier is unique and differs from other identifier */
 
 /*! \\cpar DC bus High threshold for temperature; unit \'-\' */
 extern CONST(float32, SFTYTEMPEVLN_CALIB) SftyTempEvlnDcLinkTempHWPRngPassThd;
@@ -312,7 +318,7 @@ extern CONST(uint8, SFTYREPLCMT_CALIB) SftyReplcmtTEvlnMotStatorTRawValStiEna;
 #define SFTYREPLCMT_START_SEC_CALIB_16
 #include "MemMap.h"
 
-extern CONST(uint16, SFTYREPLCMT_CALIB) SftyReplcmtTEvlnMotStatorTRawVal;
+extern CONST(uint16, SFTYREPLCMT_CALIB) SftyReplcmtTEvlnMotStatorTRawVal; /* PRQA S 0777 # the identifier is unique and differs from other identifier */
 #define SFTYREPLCMT_STOP_SEC_CALIB_16
 #include "MemMap.h"
 /* End: SFTYREPLCMT_STOP_SEC_CALIB_16 (calib) */
diff --git a/src/fw_cu/Components/Safety/Sfty_Inv/SftyTempEvln/src/SftyTempEvln.c b/src/fw_cu/Components/Safety/Sfty_Inv/SftyTempEvln/src/SftyTempEvln.c
index d7f05eaae..a938d6d85 100644
--- a/src/fw_cu/Components/Safety/Sfty_Inv/SftyTempEvln/src/SftyTempEvln.c
+++ b/src/fw_cu/Components/Safety/Sfty_Inv/SftyTempEvln/src/SftyTempEvln.c
@@ -1,5 +1,5 @@
 /* ********************************************************************** */
-/* Sourcefile:    SftyTempEvln.c                                             */
+/* Sourcefile:    SftyTempEvln.c                                          */
 /*                                                                        */
 /* Project:       100kw                                                   */
 /* TriCore                                                                */
@@ -8,7 +8,7 @@
 /*                I DT EC R&D                                             */
 /*                                                                        */
 /* ********************************************************************** */
-/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2021              */
+/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2022              */
 /* All Rights Reserved. Confidential                                      */
 /* ********************************************************************** */
 
@@ -252,6 +252,54 @@ LOCAL_INLINE void SftyTempEvln_MotorChkTElecRng(void)
    return;
 }
 
+/******************************************************************/
+/*!
+ * \\fn        boolean SftyTempEvln_LnSrchAndIpolReqChk(const uint16 pAx[], uint16 xAx, uint16* idx)
+ * \\brief     CLIB-LookUpTable-Function. This function searches (linear search, starting from the end)
+ * \
         xAx in provided xAxis pAx and returns request to interpolation according to determined
+ * \
         position of xAx in x-Axis.
+ * \
         Data dimension of pCurve and pAx must be equal
+ * \\Parent_DD SftyTempEvln_MainFunction
+ * \\param[in] pAx     pointer to const unsigned pAx. First element (index 0) must contain number of sampling points (COM_AXIS)
+ * \\param[in] xAx     axis value, which will is used to identify position and interpolation for curve-value determination
+ * \\param[inout] idx  pointer to position of xAx in x-Axis.
+ * \\return    boolean interpolation request
+ */
+/******************************************************************/
+LOCAL_INLINE boolean SftyTempEvln_LnSrchAndIpolReqChk(const uint16 pAx[], uint16 xAx, uint16* idx)
+{
+   boolean retVal = FALSE;
+
+   /* - linear search of xAxTemp in pAx, starting from the end */
+   if (pAx[(*idx)] > xAx)
+   {
+      if (pAx[1] < xAx)
+      {
+         do
+         {
+            (*idx) -= 1u;
+         }
+         while (pAx[(*idx)] > xAx);
+
+         if (pAx[(*idx)] != xAx)
+         {
+            retVal = TRUE;
+            (*idx) += 1u;
+         }
+      }
+      else
+      {
+         /* xAxTemp is smaller/equal smallest pAx element */
+         (*idx) = 1u;
+      }
+   }
+   else
+   {
+      /* xAx is bigger/equal biggest pAx element */
+   }
+
+   return retVal;
+}
 /******************************************************************/
 /*!
  * \\fn        float32 SftyTempEvln_ConvRawToPhy(const float32 pCurve[], const uint16 pAx[], uint16 xAx)
@@ -269,14 +317,14 @@ LOCAL_INLINE void SftyTempEvln_MotorChkTElecRng(void)
 LOCAL_INLINE float32 SftyTempEvln_ConvRawToPhy(const float32 pCurve[], const uint16 pAx[], uint16 xAx)
 {
    /* ******** Variables declaration *********** */
-      uint8  IpolReq = FALSE;
-      uint16 Ix = pAx[0U]; /* number of sampling points as start for index*/
+      boolean  ipolReq;
+      uint16 idx = pAx[0U]; /* number of sampling points as start for index*/
       float32 retVal;
 
-      float32 CurAct;
-      float32 CurPrv;
-      uint16  XAxAct;
-      uint16  XAxPrv;
+      float32 curAct;
+      float32 curPrv;
+      uint16  xAxAct;
+      uint16  xAxPrv;
 
       sint16  rawDelta;
       sint16  rawDeltaFound;
@@ -287,70 +335,45 @@ LOCAL_INLINE float32 SftyTempEvln_ConvRawToPhy(const float32 pCurve[], const uin
       /* ************* Source code **************** */
 
       /* - linear search of xAxTemp in pAx, starting from the end */
-      if (pAx[Ix] > xAx)
-      {
-         if (pAx[1] < xAx)
-         {
-            do
-            {
-               Ix -= 1u;
-            }
-            while (pAx[Ix] > xAx);
-
-            if (pAx[Ix] != xAx)
-            {
-               IpolReq = TRUE;
-               Ix += 1u;
-            }
-         }
-         else
-         {
-            /* xAxTemp is smaller/equal smallest pAx element */
-            Ix = 1u;
-         }
-      }
-      else
-      {
-         /* xAx is bigger/equal biggest pAx element */
-      }
+      ipolReq = SftyTempEvln_LnSrchAndIpolReqChk(pAx, xAx, &idx);
 
       /* estimate pointer to element of current index */
-      CurAct = pCurve[Ix-1u];
-      XAxAct = pAx[Ix];
-      XAxPrv = pAx[Ix-1u];
+      curAct = pCurve[idx-1u];
+      xAxAct = pAx[idx];
+      xAxPrv = pAx[idx-1u];
 
-      if ((XAxPrv != XAxAct) &&
-          (IpolReq != FALSE))
+      if ((xAxPrv != xAxAct) &&
+          (ipolReq != FALSE))
       {
          /* - do interpolation if requested */
          /* Estimate pointer to element of preceded index */
-         /* In case of interpolation request (IpolReq == TRUE), index Ix is always equal/bigger than 2" */
+         /* In case of interpolation request (ipolReq == TRUE), index idx is always equal/bigger than 2" */
          /* Apparent: Implicit conversion to a signed integer type of insufficient size. */
          /* Apparent: Wraparound in unsigned arithmetic operation. */
-         CurPrv = pCurve[Ix-2u];
+         curPrv = pCurve[idx-2u];
 
          /* 1. Step: calculate delta between previous and actual found raw value */
-         rawDelta = (sint16)XAxAct - (sint16)XAxPrv;
+         rawDelta = (sint16)xAxAct - (sint16)xAxPrv;
 
          /* 2. Step: calculate delta between input value and actual found raw value */
-         rawDeltaFound = (sint16)XAxAct - (sint16)xAx;
+         rawDeltaFound = (sint16)xAxAct - (sint16)xAx;
 
          /* 3. Step: calculate factor */
          fac = MLIB_F32S32((sint32)rawDeltaFound) / MLIB_F32S32((sint32)rawDelta);
 
          /* 4. Step: calculate delta between two temperature points */
-         deltaTemp = CurAct - CurPrv;
+         deltaTemp = curAct - curPrv;
 
          /* 5. Step: use factor to calculate delta between found temperature and actual table */
          deltaFoundTemp = deltaTemp * fac;
 
          /* 6. Step: calculate temperature */
-         retVal = CurAct - deltaFoundTemp;
+         retVal = curAct - deltaFoundTemp;
       }
       else
       {
          /* - else return Curve value without interpolation */
-         retVal = CurAct;
+         retVal = curAct;
       }
 
       return retVal;
@@ -659,16 +682,16 @@ LOCAL_INLINE void SftyTempEvln_IgbtTempRawToPhyValConv(void)
   /* ************* Source code **************** */
 
    /* Convert the Igbt raw temperature value to their physical value */
-   SftyTempEvlnIGBTPhyVal[SYSDEF_PHA_U] = SftyTempEvln_ConvRawToPhy(SftyTempEvlnIgbtPhyValPhU_W
-                                                               ,SftyTempEvlnIgbtRawValU_W
+   SftyTempEvlnIGBTPhyVal[SYSDEF_PHA_U] = SftyTempEvln_ConvRawToPhy(SftyTempEvlnIgbtPhyValPhU
+                                                               ,SftyTempEvlnIgbtRawValU
                                                                ,SftyTempEvlnIgbtTRawVal[SYSDEF_PHA_U]);
 
    SftyTempEvlnIGBTPhyVal[SYSDEF_PHA_V] = SftyTempEvln_ConvRawToPhy(SftyTempEvlnIgbtPhyValPhV
                                                                ,SftyTempEvlnIgbtRawValV
                                                                ,SftyTempEvlnIgbtTRawVal[SYSDEF_PHA_V]);
 
-   SftyTempEvlnIGBTPhyVal[SYSDEF_PHA_W] = SftyTempEvln_ConvRawToPhy(SftyTempEvlnIgbtPhyValPhU_W
-                                                               ,SftyTempEvlnIgbtRawValU_W
+   SftyTempEvlnIGBTPhyVal[SYSDEF_PHA_W] = SftyTempEvln_ConvRawToPhy(SftyTempEvlnIgbtPhyValPhW
+                                                               ,SftyTempEvlnIgbtRawValW
                                                                ,SftyTempEvlnIgbtTRawVal[SYSDEF_PHA_W]);
 
    /* Determine the maximum phase temperature*/
@@ -982,7 +1005,7 @@ FUNC(void, SFTY_TEMP_EVLN_CODE) SftyTempEvln_Init(void)
 /*================== [closure] ==============================================*/
 /*! @} doxygen end of group definition */
 /* ************************************************************************* */
-/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2021                 */
+/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2022                 */
 /* All Rights Reserved. Confidential                                         */
 /* ************************************************************************* */
 /*==================[end of file]============================================*/
diff --git a/src/fw_cu/Components/Safety/Sfty_Inv/SftyTempEvln/src/SftyTempEvln_data.c b/src/fw_cu/Components/Safety/Sfty_Inv/SftyTempEvln/src/SftyTempEvln_data.c
index 5621a9669..bb9d1c75d 100644
--- a/src/fw_cu/Components/Safety/Sfty_Inv/SftyTempEvln/src/SftyTempEvln_data.c
+++ b/src/fw_cu/Components/Safety/Sfty_Inv/SftyTempEvln/src/SftyTempEvln_data.c
@@ -258,21 +258,63 @@ VAR(uint8, SFTYTEMPEVLN_VAR) SftyTempEvlnIgbtTempWPlausErrMonrSt = 0U;
 #define SFTYTEMPEVLN_START_SEC_CALIB_32
 #include "MemMap.h"
 
+/*
+@@ SYMBOL = SftyTempEvlnMotStatorTSnsrLoChartcTPrmL
+@@ A2L_TYPE = PARAMETER
+@@ DATA_TYPE = FLOAT
+@@ DIMENSION = 21
+@@ DESCRIPTION = "Motor temperature sensor characteristic input temperature values"
+@@ GROUP = SftyTempEvln
+@@ END
+*/
 /*! Safety Motor temperature sensor characteristic input temperature values; unit \'degree\' */
 _map CONST(float32, SFTYTEMPEVLN_CALIB) SftyTempEvlnMotStatorTSnsrLoChartcTPrmL[21] =
    {210.f,197.f,184.f,171.f,158.f,145.f,132.f,119.f,106.f,93.f,80.f,67.f,54.f,41.f,
    28.f,15.f,2.f,-11.f,-24.f,-37.f,-50.f};
 
+/*
+@@ SYMBOL = SftyTempEvlnIgbtPhyValPhU
+@@ A2L_TYPE = PARAMETER
+@@ DATA_TYPE = FLOAT
+@@ DIMENSION = 21
+@@ DESCRIPTION = "IGBT temperature values U"
+@@ GROUP = SftyTempEvln
+@@ END
+*/
 /*! IGBT temperature values; unit \'degree C\' */
-_map CONST(float32, SFTYTEMPEVLN_CALIB) SftyTempEvlnIgbtPhyValPhU_W[21] =
+_map CONST(float32, SFTYTEMPEVLN_CALIB) SftyTempEvlnIgbtPhyValPhU[21] =
    {171.f,161.f,151.f,141.f,131.f,121.f,111.f,101.f,91.f,81.f,70.f,59.f,48.f,37.f,
    26.f,15.f,-4.f,-14.f,-25.f,-35.f,-45.f};
 
+/*
+@@ SYMBOL = SftyTempEvlnIgbtPhyValPhV
+@@ A2L_TYPE = PARAMETER
+@@ DATA_TYPE = FLOAT
+@@ DIMENSION = 21
+@@ DESCRIPTION = "IGBT temperature values V"
+@@ GROUP = SftyTempEvln
+@@ END
+*/
 /*! IGBT temperature values; unit \'degree C\' */
 _map CONST(float32, SFTYTEMPEVLN_CALIB) SftyTempEvlnIgbtPhyValPhV[21] =
    {171.f,161.f,151.f,141.f,131.f,121.f,111.f,101.f,91.f,81.f,70.f,59.f,48.f,37.f,
    26.f,15.f,-4.f,-14.f,-25.f,-35.f,-45.f};
 
+
+/*
+@@ SYMBOL = SftyTempEvlnIgbtPhyValPhW
+@@ A2L_TYPE = PARAMETER
+@@ DATA_TYPE = FLOAT
+@@ DIMENSION = 21
+@@ DESCRIPTION = "IGBT temperature values W"
+@@ GROUP = SftyTempEvln
+@@ END
+*/
+/*! IGBT temperature values; unit \'degree C\' */
+_map CONST(float32, SFTYTEMPEVLN_CALIB) SftyTempEvlnIgbtPhyValPhW[21] =
+   {171.f,161.f,151.f,141.f,131.f,121.f,111.f,101.f,91.f,81.f,70.f,59.f,48.f,37.f,
+   26.f,15.f,-4.f,-14.f,-25.f,-35.f,-45.f};
+
 /*
 @@ SYMBOL = SftyTempEvlnPlausChkTimOutinUs
 @@ A2L_TYPE = PARAMETER
@@ -490,16 +532,57 @@ CONST(uint16, SFTYTEMPEVLN_CALIB) SftyTempEvlnIgbtTempHWPRngHiThd =  170U;
 /*! \\cpar NTC Temperature threshold for Junction temperature error monitor; unit \'-\' */
 CONST(uint16, SFTYTEMPEVLN_CALIB) SftyTempEvlnIgbtTempHWPRngLoThd =  875U;  /* change this value */
 
-/*! IGBT temperature raw values; unit \'V\' */
-CONST(uint16, SFTYTEMPEVLN_CALIB) SftyTempEvlnIgbtRawValU_W[22] =
+/*
+@@ SYMBOL = SftyTempEvlnIgbtRawValU
+@@ A2L_TYPE = PARAMETER
+@@ DATA_TYPE = UWORD
+@@ DIMENSION = 22
+@@ DESCRIPTION = "IGBT temperature raw values U"
+@@ GROUP = SftyTempEvln
+@@ END
+*/
+/*! IGBT temperature raw values; unit \'U\' */
+CONST(uint16, SFTYTEMPEVLN_CALIB) SftyTempEvlnIgbtRawValU[22] =
    {21U,428U,501U,588U,693U,818U,967U,1143U,1348U,1583U,1846U,2176U,2502U,2840U,
    3133U,3391U,3604U,3861U,3946U,4009U,4045U,4068U};
 
+/*
+@@ SYMBOL = SftyTempEvlnIgbtRawValV
+@@ A2L_TYPE = PARAMETER
+@@ DATA_TYPE = UWORD
+@@ DIMENSION = 22
+@@ DESCRIPTION = "IGBT temperature raw values V"
+@@ GROUP = SftyTempEvln
+@@ END
+*/
 /*! IGBT temperature raw values; unit \'V\' */
 CONST(uint16, SFTYTEMPEVLN_CALIB) SftyTempEvlnIgbtRawValV[22] =
    {21U,428U,501U,588U,693U,818U,967U,1143U,1348U,1583U,1846U,2176U,2502U,2840U,
    3133U,3391U,3604U,3861U,3946U,4009U,4045U,4068U};
 
+/*
+@@ SYMBOL = SftyTempEvlnIgbtRawValW
+@@ A2L_TYPE = PARAMETER
+@@ DATA_TYPE = UWORD
+@@ DIMENSION = 22
+@@ DESCRIPTION = "IGBT temperature raw values W"
+@@ GROUP = SftyTempEvln
+@@ END
+*/
+/*! IGBT temperature raw values; unit \'W\' */
+CONST(uint16, SFTYTEMPEVLN_CALIB) SftyTempEvlnIgbtRawValW[22] =
+   {21U,428U,501U,588U,693U,818U,967U,1143U,1348U,1583U,1846U,2176U,2502U,2840U,
+   3133U,3391U,3604U,3861U,3946U,4009U,4045U,4068U};
+
+/*
+@@ SYMBOL = SftyTempEvlnMotStatorTSnsrLoChartcVPrmA
+@@ A2L_TYPE = PARAMETER
+@@ DATA_TYPE = UWORD
+@@ DIMENSION = 22
+@@ DESCRIPTION = "Motor stator temperature sensor characteristic input voltage value"
+@@ GROUP = SftyTempEvln
+@@ END
+*/
 /*! Safety Motor stator temperature sensor characteristic input voltage value; unit \'V\' */
 CONST(uint16, SFTYTEMPEVLN_CALIB) SftyTempEvlnMotStatorTSnsrLoChartcVPrmA[22] =
    {21U,80U,99U,123U,155U,196U,252U,327U,428U,565U,748U,992U,1306U,1693U,
diff --git a/src/fw_cu/build/a2l/Measurements-to-Timeslices-Mapping.csv b/src/fw_cu/build/a2l/Measurements-to-Timeslices-Mapping.csv
index c6f1885b2..e60fbbfa1 100644
--- a/src/fw_cu/build/a2l/Measurements-to-Timeslices-Mapping.csv
+++ b/src/fw_cu/build/a2l/Measurements-to-Timeslices-Mapping.csv
@@ -5829,7 +5829,6 @@ SftyActvDchaCtrlrIfMeasData.topValSpiPrmTmr,Core_1,Core_1_200us,0.2,,,SSW
 SftyActvDchaCtrlrIfMeasData.topValSysProtTmr,Core_1,Core_1_200us,0.2,,,SSW
 SftyActvDchaCtrlStrtupTestSts,Core_1,Core_1_200us,1,,,SSW
 SftyActvDhaCtrlAdisOperSts,Core_1,Core_1_200us,1,,,SSW
-SftyActvDhaCtrlDvDtChkDelayTimAdisByRCnt,Core_1,Core_1_200us,1,,,SSW
 SftyActvDchaCtrlrIfMeasData.actvDchaHvILpFilFac,Core_1,Core_1_200us,0.2,,,SSW
 SftyActvDchaCtrlrIfMeasData.actvDchaHvILpFilDiTiThd,Core_1,Core_1_200us,0.2,,,SSW
 SftyActvDchaCtrlrIfMeasData.actvDchaHwCircFlt1DiTiThd,Core_1,Core_1_200us,0.2,,,SSW
@@ -6094,6 +6093,7 @@ SftyFlshVldtProdDataAdminBlkCrc.CalcCrc,Core_1,Core_1_200us,0.2,,,SSW
 SftyFlshVldtProdDataAdminBlkCrc.ExpectedCrc,Core_1,Core_1_200us,0.2,,,SSW
 SftyFlshVldtSecuCrcErrMonrSt,Core_1,Core_1_200us,0.2,,,SSW
 SftyAcEvlnMeasCoherFltSts,Core_1,Core_1_200us,0.2,,,SSW
+SftyAcEvlnOverUnderCurFltSts,Core_1,Core_1_200us,0.2,,,SSW
 SftyHvDcUEvlnOvHWErrMonrSt,Core_1,Core_1_200us,0.2,,,SSW
 SftyPwrSplyEvlnHvP16Prsnt,Core_1,Core_1_200us,0.2,,,SSW
 SftyRslvrCalcnAcICsTime,Core_1,Core_1_200us,0.2,,,SSW
@@ -7117,6 +7117,7 @@ filter_phi_TL_OutputData.phi_mech_byp,Core_2,C2_100u_PWM,0.1,,,DRCO
 XCP_Calibration_Response,Core_0,C0_10ms_Slow,10,XCP event based,,BSW
 XCP_IMMO_prohibit,Core_0,C0_10ms_Slow,10,XCP event based,,BSW
 SftyActvDchaCtrlDeltaTimeResistorCnt,Core_1,Core_1_200us,1,,,SSW
+SftyActvDchaCtrlDvDtChkDlyTimAdisByRCnt,Core_1,Core_1_200us,1,,,SSW
 SftyActvDchaCtrlE2eReq,Core_1,Core_1_200us,1,,,SSW
 SftyActvDchaCtrlEfcErrMonrSt,Core_1,Core_1_200us,1,,,SSW
 SftyActvDchaCtrlEfcErrMonrStIntel,Core_1,Core_1_200us,1,,,SSW
@@ -7449,12 +7450,8 @@ CanTrcvTJA1145_TransceiverStatus,Core_0,C0_10ms_Slow,10,,,BSW
 CanTrcvTJA1145_WakePinEventStatus,Core_0,C0_10ms_Slow,10,,,BSW
 CanTrcvTJA1145_WakeUpSourceFlag,Core_0,C0_10ms_Slow,10,,,BSW
 CanTrcvTJA1145_WakeupSource,Core_0,C0_10ms_Slow,10,,,BSW
-SftyHvDcUEvlnDrvBdRngErrMonrSt.RngHi,Core_1,Core_1_200us,0.2,,,SSW
-SftyHvDcUEvlnDrvBdRngErrMonrSt.RngLo,Core_1,Core_1_200us,0.2,,,SSW
 SftyHvDcUEvlnDrvBdRngHiErrMonrSt,Core_1,Core_1_200us,0.2,,,SSW
 SftyHvDcUEvlnDrvBdRngLoErrMonrSt,Core_1,Core_1_200us,0.2,,,SSW
-SftyHvDcUEvlnCtrlBdRngErrMonrSt.RngHi,Core_1,Core_1_200us,0.2,,,SSW
-SftyHvDcUEvlnCtrlBdRngErrMonrSt.RngLo,Core_1,Core_1_200us,0.2,,,SSW
 SftyHvDcUEvlnCtrlBdRngHiErrMonrSt,Core_1,Core_1_200us,0.2,,,SSW
 SftyHvDcUEvlnCtrlBdRngLoErrMonrSt,Core_1,Core_1_200us,0.2,,,SSW
 Tmm_ComTaskFastDurationViolation,Core_0,C0_1ms_TimeTask,1,,,BSW
@@ -7911,6 +7908,7 @@ SftyE2eFpgaHsGateDrvrFltSts,Core_1,Core_1_200us,0.2,,,SSW
 SftyE2eFpgaHsGateDrvrFltStsAcc,Core_1,Core_1_200us,0.2,,,SSW
 SftyE2eFpgaMidPointPhaFltSts,Core_1,Core_1_200us,0.2,,,SSW
 SftyE2eFpgaMidPointPhaFltStsAcc,Core_1,Core_1_200us,0.2,,,SSW
+SftyE2eFpgaMod,Core_1,Core_1_200us,0.2,,,SSW
 SftyE2eFpgaModPlausErrMonrSt,Core_1,Core_1_200us,0.2,,,SSW
 SftyE2eFpgaModPlausErrMonrStAcc,Core_1,Core_1_200us,0.2,,,SSW
 SftyE2eFpgaNoEmgySwReq,Core_1,Core_1_200us,0.2,,,SSW
'
