b'commit e7a21d7c8f72310bd98ee52211fbf0190c5f5f20
Author: Yunpeng DONG (JV) <yunpeng.dong.jv@valeo.com>
Date:   Tue Dec 21 14:27:37 2021 +0800

    $100kW-48671$ - FCT_CtrlParkPos - Implement SftyParkLockPosnAcqn component
    
    Change-Id: I12bf11c5795dd88f07ad4dd4111ff4e83d6dcf5d

diff --git a/src/fw_cu/Components/Cmn/Shared/MemMap/include/SftyNextGen_MemMap.h b/src/fw_cu/Components/Cmn/Shared/MemMap/include/SftyNextGen_MemMap.h
index acdf6f112..2d835db9b 100644
--- a/src/fw_cu/Components/Cmn/Shared/MemMap/include/SftyNextGen_MemMap.h
+++ b/src/fw_cu/Components/Cmn/Shared/MemMap/include/SftyNextGen_MemMap.h
@@ -4976,6 +4976,86 @@
    #define SFTY_ASIL_B_STOP_SEC_CODE_SLOW  
    #include "BasicNextGen_MemMap.h"
 
+/* SftyParkLockPosnAcqn************************************************************** */
+#elif (defined SFTYPARKLOCKPOSNACQN_START_SEC_CALIB_32)
+   #undef SFTYPARKLOCKPOSNACQN_START_SEC_CALIB_32
+   #define SAFETY_START_SEC_CALIB
+   #include "BasicNextGen_MemMap.h"
+   
+#elif (defined SFTYPARKLOCKPOSNACQN_STOP_SEC_CALIB_32)
+   #undef SFTYPARKLOCKPOSNACQN_STOP_SEC_CALIB_32
+   #define SAFETY_STOP_SEC_CALIB
+   #include "BasicNextGen_MemMap.h"
+
+#elif (defined SFTYPARKLOCKPOSNACQN_START_SEC_CALIB_16)
+   #undef SFTYPARKLOCKPOSNACQN_START_SEC_CALIB_16
+   #define SAFETY_START_SEC_CALIB
+   #include "BasicNextGen_MemMap.h"
+
+#elif (defined SFTYPARKLOCKPOSNACQN_STOP_SEC_CALIB_16)
+   #undef SFTYPARKLOCKPOSNACQN_STOP_SEC_CALIB_16
+   #define SAFETY_STOP_SEC_CALIB
+   #include "BasicNextGen_MemMap.h"
+
+#elif (defined SFTYPARKLOCKPOSNACQN_START_SEC_CALIB_8)
+   #undef SFTYPARKLOCKPOSNACQN_START_SEC_CALIB_8
+   #define SAFETY_START_SEC_CALIB
+   #include "BasicNextGen_MemMap.h"
+
+#elif (defined SFTYPARKLOCKPOSNACQN_STOP_SEC_CALIB_8)
+   #undef SFTYPARKLOCKPOSNACQN_STOP_SEC_CALIB_8
+   #define SAFETY_STOP_SEC_CALIB
+   #include "BasicNextGen_MemMap.h"
+
+#elif (defined SFTYPARKLOCKPOSNACQN_START_SEC_CODE_AREA_2_SLOW)
+   #undef SFTYPARKLOCKPOSNACQN_START_SEC_CODE_AREA_2_SLOW
+   #define SFTY_ASIL_B_START_SEC_CODE_SLOW
+   #include "BasicNextGen_MemMap.h"
+
+#elif (defined SFTYPARKLOCKPOSNACQN_STOP_SEC_CODE_AREA_2_SLOW)
+   #undef SFTYPARKLOCKPOSNACQN_STOP_SEC_CODE_AREA_2_SLOW
+   #define SFTY_ASIL_B_STOP_SEC_CODE_SLOW
+   #include "BasicNextGen_MemMap.h"
+
+#elif (defined SFTYPARKLOCKPOSNACQN_START_SEC_CODE_AREA_2_FAST)
+   #undef SFTYPARKLOCKPOSNACQN_START_SEC_CODE_AREA_2_FAST
+   #define SFTY_ASIL_B_START_SEC_CODE_FAST
+   #include "BasicNextGen_MemMap.h"
+
+#elif (defined SFTYPARKLOCKPOSNACQN_STOP_SEC_CODE_AREA_2_FAST)
+   #undef SFTYPARKLOCKPOSNACQN_STOP_SEC_CODE_AREA_2_FAST
+   #define SFTY_ASIL_B_STOP_SEC_CODE_FAST
+   #include "BasicNextGen_MemMap.h"
+
+#elif (defined SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_2_FAST_INIT_32)
+   #undef SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_2_FAST_INIT_32
+   #define SFTY_ASIL_B_START_SEC_VAR_FAST_INIT
+   #include "BasicNextGen_MemMap.h"
+
+#elif (defined SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_2_FAST_INIT_32)
+   #undef SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_2_FAST_INIT_32
+   #define SFTY_ASIL_B_STOP_SEC_VAR_FAST_INIT
+   #include "BasicNextGen_MemMap.h"
+
+#elif (defined SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_2_SLOW_INIT_32)
+   #undef SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_2_SLOW_INIT_32
+   #define SFTY_ASIL_B_START_SEC_VAR_FAST_INIT
+   #include "BasicNextGen_MemMap.h"
+
+#elif (defined SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_2_SLOW_INIT_32)
+   #undef SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_2_SLOW_INIT_32
+   #define SFTY_ASIL_B_STOP_SEC_VAR_FAST_INIT
+   #include "BasicNextGen_MemMap.h"
+
+#elif (defined SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_2_SLOW_INIT_8)
+   #undef SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_2_SLOW_INIT_8
+   #define SFTY_ASIL_B_START_SEC_VAR_FAST_INIT
+   #include "BasicNextGen_MemMap.h"
+
+#elif (defined SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_2_SLOW_INIT_8)
+   #undef SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_2_SLOW_INIT_8
+   #define SFTY_ASIL_B_STOP_SEC_VAR_FAST_INIT
+   #include "BasicNextGen_MemMap.h"
 /********************************************** SftyE2e  ********************** */
 #elif (defined SFTYE2E_START_SEC_VAR_AREA_CMN_FAST_INIT_8)
    #undef SFTYE2E_START_SEC_VAR_AREA_CMN_FAST_INIT_8
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyCrc/include/SftyCrc.h b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyCrc/include/SftyCrc.h
index e10b02671..0dca450b9 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyCrc/include/SftyCrc.h
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyCrc/include/SftyCrc.h
@@ -164,7 +164,7 @@ typedef struct SftyCrc_FceCrcRegType_ /* PRQA S 0635  */
 
 #define SFTYCRC_START_SEC_CODE_AREA_CMN_SLOW
 #include "MemMap.h"
-
+EXTERNAL_ FUNC (uint8, SFTYCRC) SftyCrc_CalcCRC4(const uint8 Crc_Data[], uint32  Crc_Length, uint8  Crc_StartValue8,  boolean Crc_IsFirstCall);
 EXTERNAL_ FUNC(uint8, SFTYCRC)  SftyCrc_CalcCRC8(const  uint8 Crc_Data[], uint32 Crc_Length, uint8  Crc_StartValue8,  boolean Crc_IsFirstCall);
 EXTERNAL_ FUNC(uint16, SFTYCRC) SftyCrc_CalcCRC16(const uint8 Crc_Data[], uint32 Crc_Length, uint16 Crc_StartValue16, boolean Crc_IsFirstCall);
 EXTERNAL_ FUNC(uint32, SFTYCRC) SftyCrc_CalcCRC32(const uint8 Crc_Data[], uint32 Crc_Length, uint32 Crc_StartValue32, boolean Crc_IsFirstCall);
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyCrc/include/SftyCrc_data.h b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyCrc/include/SftyCrc_data.h
index ff0fd8ae6..9815fd0cc 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyCrc/include/SftyCrc_data.h
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyCrc/include/SftyCrc_data.h
@@ -28,6 +28,12 @@
 /*================== [includes] =============================================*/
 
 /*================== [macros] ===============================================*/
+/*! Maximum size of SftyCrc_Table4 table*/
+#define CRC_4_TBL_SIZE                  (16U)
+/* CRC-4 Initial value*/
+#define CRC_INITIAL_VALUE4              (0x5U)
+/* CRC4 XOR value*/
+#define CRC_XOR_VALUE4                  (0xFU)
 /*! Maximum size of SftyCrc_Table8 table*/
 #define CRC_8_TBL_SIZE                  (256U)
 /*! Initial value of crc8 */
@@ -54,6 +60,11 @@
  
 
 /*================== [local data] ===========================================*/
+#define SFTYCRC_START_SEC_CONST_8
+#include "MemMap.h"
+EXTERNAL_ CONST(uint8, SFTYCRC_CONST) SftyCrc_Tbl4[CRC_4_TBL_SIZE];
+#define SFTYCRC_STOP_SEC_CONST_8
+#include "MemMap.h"
 
 #define SFTYCRC_START_SEC_CONST_8
 #include "MemMap.h"
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyCrc/src/SftyCrc.c b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyCrc/src/SftyCrc.c
index 0733c4e7d..6a3e3395e 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyCrc/src/SftyCrc.c
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyCrc/src/SftyCrc.c
@@ -209,6 +209,50 @@ LOCAL_INLINE uint32 SftyCrc_GetCrc32Result(void)
 #define SFTYCRC_START_SEC_CODE_AREA_CMN_SLOW
 #include "MemMap.h"
 
+/**************************************************************************************************************/
+/*!
+ *\\fn         uint8 SftyCrc_CalcCRC4 (const uint8 Crc_Data[], uint32 Crc_Length\xa3\xacuint8   Crc_StartValue4,  boolean Crc_IsFirstCall)
+ *\\brief      This function performs the calculation of a 4-bit CRC Polynom 0x1D
+ *\\param   [in]   Crc_Data - start address of data block
+ *\\param   [in]   Crc_Length  - Length of data block in bytes
+ *\\param   [in]   Crc_StartValue4 - Start value to continue CRC block calculation
+ *\\param   [in]   Crc_IsFirstCall - TRUE, start a new CRC block calculation
+ *\\param                            FALSE, continue the previous CRC block calculation
+ *\\return      uint8 - 4 bit result of CRC calculation.
+ */
+/**************************************************************************************************************/
+FUNC (uint8, SFTYCRC) SftyCrc_CalcCRC4
+(
+  const uint8 Crc_Data[],
+  uint32  Crc_Length,
+  uint8   Crc_StartValue4,
+  boolean Crc_IsFirstCall
+)
+{
+   uint8\ttempData = 0U;
+   uint8\tidx;
+   uint8\tCrc_RetValue4;
+
+    if(TRUE == Crc_IsFirstCall)
+   {
+      Crc_RetValue4 = CRC_INITIAL_VALUE4;
+   }
+   else
+   {
+      /* Undo final XOR cd ..operation */
+      Crc_RetValue4 = Crc_StartValue4 ^ CRC_XOR_VALUE4;
+   }
+
+    for(idx = 0U; idx < Crc_Length; idx++)
+\t{
+        tempData = (uint8)(Crc_RetValue4 ^ Crc_Data[idx]); 
+        Crc_RetValue4 = (uint8)SftyCrc_Tbl4[tempData];
+    }
+
+   Crc_RetValue4 ^= CRC_XOR_VALUE4;   /* Do Final XOR crc value */
+
+   return Crc_RetValue4;
+}
 /**************************************************************************************************************/
 /*!
  *\\fn         uint8 SftyCrc_CalcCRC8 (const uint8 Crc_Data[], uint32 Crc_Length, uint8 Crc_StartValue8, boolean Crc_IsFirstCall)
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyCrc/src/SftyCrc_data.c b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyCrc/src/SftyCrc_data.c
index 904f6ada4..1fcdb7603 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyCrc/src/SftyCrc_data.c
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyCrc/src/SftyCrc_data.c
@@ -39,6 +39,8 @@
 #define SFTYCRC_START_SEC_CONST_8
 #include "MemMap.h"
 
+/*! Table of pre-computed values for CRC4. Used Polynomial is 0x1D according VW Lastenheft */
+CONST(uint8, SFTYCRC_CONST) SftyCrc_Tbl4[CRC_4_TBL_SIZE] = {0, 13, 7, 10, 14, 3, 9, 4, 1, 12, 6, 11, 15, 2, 8, 5};
 /*! Table of pre-computed values for CRC8. Used Polynomial is 0x2F according VW Lastenheft */
 CONST(uint8, SFTYCRC_CONST) SftyCrc_Tbl8[CRC_8_TBL_SIZE] =
 {
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyParkLockPosnAcqn/a2l/.gitkeep b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyParkLockPosnAcqn/a2l/.gitkeep
new file mode 100644
index 000000000..e69de29bb
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyParkLockPosnAcqn/doc/.gitkeep b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyParkLockPosnAcqn/doc/.gitkeep
new file mode 100644
index 000000000..e69de29bb
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyParkLockPosnAcqn/include/SftyParkLockPosnAcqn.h b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyParkLockPosnAcqn/include/SftyParkLockPosnAcqn.h
new file mode 100644
index 000000000..e0152287d
--- /dev/null
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyParkLockPosnAcqn/include/SftyParkLockPosnAcqn.h
@@ -0,0 +1,441 @@
+/* ********************************************************************** */
+/* Sourcefile: SftyParkLockPosnAcqn.h                                            */
+/*                                                                        */
+/* Project: 100KW                                                         */
+/* Aurix                                                                  */
+/*                                                                        */
+/* Department: Valeo Siemens eAutomotive                                  */
+/* I DT EC R&D                                                            */
+/* ********************************************************************** */
+/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2021              */
+/* All Rights Reserved. Confidential                                      */
+/* ********************************************************************** */
+
+#ifndef SFTYPARKLOCKPOSNACQN_H
+#define SFTYPARKLOCKPOSNACQN_H
+/*!
+* \\add SftyParkLockPosnAcqn
+* @{
+*/
+
+#ifdef MASTER_SFTY_PARK_LOCK_POSN_ACQN
+# define EXTERNAL_
+#else
+# define EXTERNAL_ extern
+#endif
+
+/*================== [includes] =============================================*/
+#include "AddEnumTypes.h"
+#include "IfxSent_reg.h"
+
+/*================== [macros] ===============================================*/
+/* Clear WDI Flag */
+#define SENT_WDI_FLG_CLR  MODULE_SENT.CH[0].INTCLR.B.WDI
+
+/* Parklock CRC buffer*/
+#define SFTYPARKLOCKPOSNACQN_CRC_CALCN_BUF_SIZE  6U
+
+/* Parklock crc4 seed value */
+#define SFTYPARKLOCKPOSNACQN_4BIT_CRC_INIT_SEED_VALUE 5U
+
+
+/*================== [type definitions] =====================================*/
+typedef struct NibbleDataType_
+{
+\t/*
+\t  @@ ELEMENT = data0
+\t  @@ STRUCTURE = NibbleDataType
+\t  @@ A2L_TYPE = MEASURE
+\t  @@ DATA_TYPE = UBYTE
+\t  @@ DESCRIPTION = " nibble data0  "
+\t  @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+\t  @@ END
+\t   */
+\t\t uint8\t  data0 : 4;
+\t/*
+\t  @@ ELEMENT = data1
+\t  @@ STRUCTURE = NibbleDataType
+\t  @@ A2L_TYPE = MEASURE
+\t  @@ DATA_TYPE = UBYTE
+\t  @@ DESCRIPTION = " nibble data1  "
+\t  @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+\t  @@ END
+\t   */
+\t     uint8\t  data1 : 4;   
+\t/*
+\t  @@ ELEMENT = data2
+\t  @@ STRUCTURE = NibbleDataType
+\t  @@ A2L_TYPE = MEASURE
+\t  @@ DATA_TYPE = UBYTE
+\t  @@ DESCRIPTION = " nibble data2  "
+\t  @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+\t  @@ END
+\t   */
+\t     uint8\t  data2 : 4;\t
+\t/*
+\t  @@ ELEMENT = data3
+\t  @@ STRUCTURE = NibbleDataType
+\t  @@ A2L_TYPE = MEASURE
+\t  @@ DATA_TYPE = UBYTE
+\t  @@ DESCRIPTION = " nibble data3  "
+\t  @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+\t  @@ END
+\t   */
+\t     uint8\t  data3 : 4;\t
+\t/*
+\t  @@ ELEMENT = data4
+\t  @@ STRUCTURE = NibbleDataType
+\t  @@ A2L_TYPE = MEASURE
+\t  @@ DATA_TYPE = UBYTE
+\t  @@ DESCRIPTION = " nibble data4  "
+\t  @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+\t  @@ END
+\t   */
+\t     uint8\t  data4 : 4;\t
+\t/*
+\t  @@ ELEMENT = data5
+\t  @@ STRUCTURE = NibbleDataType
+\t  @@ A2L_TYPE = MEASURE
+\t  @@ DATA_TYPE = UBYTE
+\t  @@ DESCRIPTION = " nibble data5  "
+\t  @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+\t  @@ END
+\t   */
+\t     uint8\t  data5: 4;\t
+\t/*
+\t  @@ ELEMENT = data6
+\t  @@ STRUCTURE = NibbleDataType
+\t  @@ A2L_TYPE = MEASURE
+\t  @@ DATA_TYPE = UBYTE
+\t  @@ DESCRIPTION = " nibble data6  "
+\t  @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+\t  @@ END
+\t   */
+\t\t uint8\t  data6 : 4;\t
+\t/*
+\t  @@ ELEMENT = data7
+\t  @@ STRUCTURE = NibbleDataType
+\t  @@ A2L_TYPE = MEASURE
+\t  @@ DATA_TYPE = UBYTE
+\t  @@ DESCRIPTION = " nibble data7  "
+\t  @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+\t  @@ END
+\t   */
+\t\t uint8\t  data7 : 4;\t
+
+}NibbleDataType;
+typedef struct BitDataType_
+{
+   /*
+   @@ ELEMENT = bit0
+   @@ STRUCTURE = BitDataType
+   @@ A2L_TYPE = MEASURE
+   @@ DATA_TYPE = UBYTE
+   @@ DESCRIPTION = "bit0"
+   @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+   @@ END
+   */
+\t\tuint8  bit0   : 1;
+   /*
+   @@ ELEMENT = bit1
+   @@ STRUCTURE = BitDataType
+   @@ A2L_TYPE = MEASURE
+   @@ DATA_TYPE = UBYTE
+   @@ DESCRIPTION = "bit1"
+   @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+   @@ END
+   */
+\t\tuint8  bit1   : 1 ;
+   /*
+   @@ ELEMENT = bit2
+   @@ STRUCTURE = BitDataType
+   @@ A2L_TYPE = MEASURE
+   @@ DATA_TYPE = UBYTE
+   @@ DESCRIPTION = "bit2"
+   @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+   @@ END
+   */
+\t\tuint8  bit2   : 1;
+   /*
+   @@ ELEMENT = bit3
+   @@ STRUCTURE = BitDataType
+   @@ A2L_TYPE = MEASURE
+   @@ DATA_TYPE = UBYTE
+   @@ DESCRIPTION = "bit3"
+   @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+   @@ END
+   */
+\t\tuint8  bit3   : 1;
+   /*
+   @@ ELEMENT = bit4
+   @@ STRUCTURE = BitDataType
+   @@ A2L_TYPE = MEASURE
+   @@ DATA_TYPE = UBYTE
+   @@ DESCRIPTION = "bit4"
+   @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+   @@ END
+   */
+\t\tuint8  bit4   : 1;
+   /*
+   @@ ELEMENT = bit5
+   @@ STRUCTURE = BitDataType
+   @@ A2L_TYPE = MEASURE
+   @@ DATA_TYPE = UBYTE
+   @@ DESCRIPTION = "bit5"
+   @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+   @@ END
+   */
+\t\tuint8  bit5   : 1;
+   /*
+   @@ ELEMENT = bit6
+   @@ STRUCTURE = BitDataType
+   @@ A2L_TYPE = MEASURE
+   @@ DATA_TYPE = UBYTE
+   @@ DESCRIPTION = "bit6"
+   @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+   @@ END
+   */
+\t\tuint8  bit6   : 1;
+   /*
+   @@ ELEMENT = bit7
+   @@ STRUCTURE = BitDataType
+   @@ A2L_TYPE = MEASURE
+   @@ DATA_TYPE = UBYTE
+   @@ DESCRIPTION = "bit7"
+   @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+   @@ END
+   */
+\t\tuint8  bit7   : 1;
+   /*
+   @@ ELEMENT = bit8
+   @@ STRUCTURE = BitDataType
+   @@ A2L_TYPE = MEASURE
+   @@ DATA_TYPE = UBYTE
+   @@ DESCRIPTION = "bit8"
+   @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+   @@ END
+   */
+\t\tuint8  bit8   : 1;
+   /*
+   @@ ELEMENT = bit9
+   @@ STRUCTURE = BitDataType
+   @@ A2L_TYPE = MEASURE
+   @@ DATA_TYPE = UBYTE
+   @@ DESCRIPTION = "bit9"
+   @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+   @@ END
+   */
+\t\tuint8  bit9   : 1;
+   /*
+   @@ ELEMENT = bit10
+   @@ STRUCTURE = BitDataType
+   @@ A2L_TYPE = MEASURE
+   @@ DATA_TYPE = UBYTE
+   @@ DESCRIPTION = "bit10"
+   @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+   @@ END
+   */
+\t\tuint8  bit10  : 1;
+   /*
+   @@ ELEMENT = bit11
+   @@ STRUCTURE = BitDataType
+   @@ A2L_TYPE = MEASURE
+   @@ DATA_TYPE = UBYTE
+   @@ DESCRIPTION = "bit11"
+   @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+   @@ END
+   */
+\t\tuint8  bit11  : 1;
+   /*
+   @@ ELEMENT = bit12
+   @@ STRUCTURE = BitDataType
+   @@ A2L_TYPE = MEASURE
+   @@ DATA_TYPE = UBYTE
+   @@ DESCRIPTION = "bit12"
+   @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+   @@ END
+   */
+\t\tuint8  bit12  : 1;
+   /*
+   @@ ELEMENT = bit13
+   @@ STRUCTURE = BitDataType
+   @@ A2L_TYPE = MEASURE
+   @@ DATA_TYPE = UBYTE
+   @@ DESCRIPTION = "bit13"
+   @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+   @@ END
+   */
+\t\tuint8  bit13  : 1;
+   /*
+   @@ ELEMENT = bit14
+   @@ STRUCTURE = BitDataType
+   @@ A2L_TYPE = MEASURE
+   @@ DATA_TYPE = UBYTE
+   @@ DESCRIPTION = "bit14"
+   @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+   @@ END
+   */
+\t    uint8  bit14  : 1;
+\t/*
+   @@ ELEMENT = bit15
+   @@ STRUCTURE = BitDataType
+   @@ A2L_TYPE = MEASURE
+   @@ DATA_TYPE = UBYTE
+   @@ DESCRIPTION = "bit15"
+   @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+   @@ END
+   */
+\t\tuint8  bit15  : 1;
+
+\t\tuint16 reserve : 16;
+\t
+\t
+}BitDataType;
+\t
+
+\t
+
+\ttypedef struct SentMsgType_
+   {
+   /*
+   @@ ELEMENT = msg0
+   @@ STRUCTURE = SentMsgType
+   @@ A2L_TYPE = MEASURE
+   @@ DATA_TYPE = ULONG
+   @@ DESCRIPTION = " D0 to D2  "
+   @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+   @@ END
+    */
+\t\t uint16\t  msg0 : 12;
+   /*
+   @@ ELEMENT = msg1
+   @@ STRUCTURE = SentMsgType
+   @@ A2L_TYPE = MEASURE
+   @@ DATA_TYPE = ULONG
+   @@ DESCRIPTION = " D3 to D5  "
+   @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+   @@ END
+    */
+\t     uint16\t  msg1 : 12;   
+
+\t     uint8\t  reserved : 8;\t
+
+\t}SentMsgType;
+\t
+typedef union SftyParkLockType_
+{   
+      /*
+      @@ ELEMENT = all
+      @@ STRUCTURE = SftyParkLockType
+      @@ A2L_TYPE = MEASURE
+      @@ DATA_TYPE = ULONG
+      @@ DESCRIPTION = " data  "
+      @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+      @@ END
+      */
+      uint32   all;    /*!< Data transfered from DMA */
+
+\t  /*
+\t  @@ SUB_STRUCTURE = Nibble
+\t  @@ STRUCTURE = SftyParkLockType
+      @@ DATA_TYPE = STRUCTURE NibbleDataType
+\t  @@ END
+\t  */
+      NibbleDataType   Nibble; 
+
+\t   /*
+\t  @@ SUB_STRUCTURE = Msg
+\t  @@ STRUCTURE = SftyParkLockType
+      @@ DATA_TYPE = STRUCTURE SentMsgType
+\t  @@ END
+\t  */
+\t  SentMsgType        Msg;
+\t  /*
+\t  @@ SUB_STRUCTURE = B
+\t  @@ STRUCTURE = SftyParkLockType
+      @@ DATA_TYPE = STRUCTURE BitDataType
+\t  @@ END
+\t  */
+\t  BitDataType        B;
+
+    }SftyParkLockType;
+
+
+
+/*! This struct will contain transfered data, used only for DMA-buffer definitions */
+typedef struct SftyParkLockSENTDataType_
+{
+    /*
+    @@ SUB_STRUCTURE = SnsrData
+    @@ STRUCTURE = SftyParkLockSENTDataType
+    @@ DATA_TYPE = STRUCTURE SftyParkLockType
+    @@ END
+    */
+   SftyParkLockType SnsrData;    /*!< Sensor data transfered from DMA */
+
+    /*
+    @@ SUB_STRUCTURE = CrcData
+    @@ STRUCTURE = SftyParkLockSENTDataType
+    @@ DATA_TYPE = STRUCTURE SftyParkLockType
+    @@ END
+    */
+   SftyParkLockType CrcData; /*!< CRC data saved from DMA */
+
+   /*
+      @@ ELEMENT = TiStampRts
+      @@ STRUCTURE = SftyParkLockSENTDataType
+      @@ A2L_TYPE = MEASURE
+      @@ DATA_TYPE = ULONG
+      @@ DESCRIPTION = " Time stamp RTS  "
+      @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+      @@ END
+      */
+   uint32  TiStampRts; /*!< SENT timestamp saved from DMA */
+
+    /*
+    @@ SUB_STRUCTURE = RxIntStat
+    @@ STRUCTURE = SftyParkLockSENTDataType
+    @@ DATA_TYPE = STRUCTURE SftyParkLockType
+    @@ END
+    */
+   SftyParkLockType RxIntStat; /*!< SENT INT status saved from DMA */
+
+
+      /*
+      @@ ELEMENT = TiStampDma
+      @@ STRUCTURE = SftyParkLockSENTDataType
+      @@ A2L_TYPE = MEASURE
+      @@ DATA_TYPE = ULONG
+      @@ DESCRIPTION = " Time stamp DMA  "
+      @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+      @@ END
+      */
+   uint32  TiStampDma; /*!< Timestamp saved from DMA */
+
+}SftyParkLockSENTDataType;
+
+
+
+/*================== [declaration of public data] ===========================*/
+
+/*================== [declaration of global functions] ======================*/
+#define SFTYPARKLOCKPOSNACQN_START_SEC_CODE_AREA_2_SLOW
+#include "MemMap.h"
+
+extern FUNC(void, SFTYPARKLOCKPOSNACQN_CODE) SftyParkLockPosnAcqn_InitArea2(void);
+extern FUNC(void, SFTYPARKLOCKPOSNACQN_CODE) SftyParkLockPosnAcqn_MainFunctionArea2(void);
+
+#define SFTYPARKLOCKPOSNACQN_STOP_SEC_CODE_AREA_2_SLOW
+#include "MemMap.h"
+
+
+ /*================== [closure] ==============================================*/
+ 
+ /*! @} doxygen end of group definition */
+#endif
+ /* ********************************************************************** */
+ /* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2021\t\t\t   */
+ /* All Rights Reserved. Confidential\t\t\t\t\t\t\t\t\t   */
+ /* ********************************************************************** */
+ /*==================[end of file]============================================*/
+
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyParkLockPosnAcqn/include/SftyParkLockPosnAcqn_data.h b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyParkLockPosnAcqn/include/SftyParkLockPosnAcqn_data.h
new file mode 100644
index 000000000..e1f68838b
--- /dev/null
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyParkLockPosnAcqn/include/SftyParkLockPosnAcqn_data.h
@@ -0,0 +1,92 @@
+/* ***************************************************************** */
+/* Sourcefile: SftyParkLockPosnAcqn_data.h                                  */
+/* ADD Container: SftyParkLockPosnAcqn                                      */
+/* ADD Container Version: 01.00                                      */
+/* ***************************************************************** */
+/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2021                 */
+/* All Rights Reserved. Confidential                                 */
+/* ***************************************************************** */
+/*!
+ * \\addtogroup SftyParkLockPosnAcqn_data
+ * @{
+*/
+
+#ifndef\tSFTYPARKLOCKPOSNACQN_DATA_H
+#define\tSFTYPARKLOCKPOSNACQN_DATA_H
+
+
+#include "AddGlobalDefines.h"
+#include "Platform_Types.h"
+#include "Compiler.h"
+
+#ifndef\t_online
+#define\t_online
+#endif
+#ifndef\t_param
+#define\t_param
+#endif
+#ifndef\t_axis
+#define\t_axis
+#endif
+#ifndef\t_map
+#define\t_map
+#endif
+
+
+#include\t"AddStructTypes.h"
+#include\t"AddEnumTypes.h"
+
+
+
+
+/* Begin: SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_2_SLOW_INIT_8 (online) */
+#define SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_2_SLOW_INIT_8
+#include "MemMap.h"
+
+extern VAR(uint8, SFTYPARKLOCKPOSNACQN_VAR) SftyParkLockPosnAcqnSnrToutErrMonrSt;
+
+#define SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_2_SLOW_INIT_8
+#include "MemMap.h"
+/* Stop: SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_2_SLOW_INIT_8 (online) */
+
+
+/* Begin: SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_2_SLOW_INIT_8 (online) */
+#define SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_2_SLOW_INIT_8
+#include "MemMap.h"
+
+extern VAR(uint8, SFTYPARKLOCKPOSNACQN_VAR) SftyParkLockPosnAcqnSnrDataRxCrcErrMonrSt;
+
+#define SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_2_SLOW_INIT_8
+#include "MemMap.h"
+/* Stop: SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_2_SLOW_INIT_8 (online) */
+
+/* Begin: SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_2_SLOW_INIT_32 (online) */
+#define SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_2_SLOW_INIT_32
+#include "MemMap.h"
+
+extern VAR(uint32, SFTYPARKLOCKPOSNACQN_VAR) SftyParkLockPosnAcqnRawVal;
+
+#define SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_2_SLOW_INIT_32
+#include "MemMap.h"
+/* Stop: SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_2_SLOW_INIT_32 (online) */
+
+
+/* Begin: SFTYPARKLOCKPOSNACQN_START_SEC_CALIB_32 (online) */
+#define SFTYPARKLOCKPOSNACQN_START_SEC_CALIB_32
+#include "MemMap.h"
+
+extern CONST(uint32, SFTYPARKLOCKPOSNACQN_VAR)SftyParkLockPosnAcqnDeltaRtsTiStampThd;
+
+#define SFTYPARKLOCKPOSNACQN_STOP_SEC_CALIB_32
+#include "MemMap.h"
+/* Stop: SFTYPARKLOCKPOSNACQN_STOP_SEC_CALIB_32 (online) */
+
+/*================== [closure] ==============================================*/
+/*! @} doxygen end of group definition */
+#endif  /* SFTYPARKLOCKPOSNACQN_DATA_H */
+/* ***************************************************************** */
+/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2021                 */
+/* All Rights Reserved. Confidential                                 */
+/* ***************************************************************** */
+/*==================[end of file]====================================*/
+
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyParkLockPosnAcqn/lib/.gitkeep b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyParkLockPosnAcqn/lib/.gitkeep
new file mode 100644
index 000000000..e69de29bb
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyParkLockPosnAcqn/make/makefile.mak b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyParkLockPosnAcqn/make/makefile.mak
new file mode 100644
index 000000000..7efab3c06
--- /dev/null
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyParkLockPosnAcqn/make/makefile.mak
@@ -0,0 +1,28 @@
+# \\\\file\
#
+# \\brief AUTOSAR <ComponentName>
+#
+# This file contains the implementation of AUTOSAR
+# module <ComponentName>.
+#
+# \\author <AuthorInformation> Siemens AG, 91056 Erlangen, Germany
+#
+# Copyright 2015 - 2015 Siemens AG
+# All rights exclusively reserved for Siemens AG,
+# unless expressly agreed to otherwise.#
+################################################################## DEFINITIONS#
+#################################################################
+
+
+SftyParkLockPosnAcqn_BASE := $(dir $(abspath $(lastword $(dir $(abspath $(lastword $(MAKEFILE_LIST)))))))
+SftyParkLockPosnAcqn_PATH_OUT := $(SftyParkLockPosnAcqn_BASE)generated
+SftyParkLockPosnAcqn_PATH_USE := $(SftyParkLockPosnAcqn_BASE)
+CC_FILES_TO_BUILD += $(wildcard $(SftyParkLockPosnAcqn_BASE)src/*.c)
+CPP_FILES_TO_BUILD += $(wildcard $(SftyParkLockPosnAcqn_BASE)src/*.cpp)
+ASM_FILES_TO_BUILD += $(wildcard $(SftyParkLockPosnAcqn_BASE)src/*.s)
+
+SftyParkLockPosnAcqn_ARCHIVED_LIB := $(wildcard $(SftyParkLockPosnAcqn_BASE)lib/*.a)
+SftyParkLockPosnAcqn_GENERATED_LIB := $(SftyParkLockPosnAcqn_BASE)generated/lib/SftyParkLockPosnAcqn.a
+SftyParkLockPosnAcqn_ARCHIVED_A2L := $(wildcard $(SftyParkLockPosnAcqn_BASE)a2l/*.a2l)
+SftyParkLockPosnAcqn_GENERATED_A2L := $(SftyParkLockPosnAcqn_BASE)generated/a2l/SftyParkLockPosnAcqn.a2l
+A2L_SLAVE_SftyParkLockPosnAcqn = $(SftyParkLockPosnAcqn_GENERATED_A2L)
+CC_INCLUDE_PATH += $(SftyParkLockPosnAcqn_BASE)include
\\ No newline at end of file
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyParkLockPosnAcqn/src/SftyParkLockPosnAcqn.c b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyParkLockPosnAcqn/src/SftyParkLockPosnAcqn.c
new file mode 100644
index 000000000..64a526e68
--- /dev/null
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyParkLockPosnAcqn/src/SftyParkLockPosnAcqn.c
@@ -0,0 +1,517 @@
+/* ********************************************************************** */\r
+/* Sourcefile: SftyParkLockPosnAcqn.c                                            */\r
+/*                                                                        */\r
+/* Project: 100KW                                                         */\r
+/* Aurix                                                                  */\r
+/*                                                                        */\r
+/* Department: Valeo Siemens eAutomotive                                  */\r
+/* I DT EC R&D                                                            */\r
+/* ********************************************************************** */\r
+/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2021              */\r
+/* All Rights Reserved. Confidential                                      */\r
+/* ********************************************************************** */\r
+\r
+/*!\r
+* \\defgroup SftyParkLockPosnAcqn SftyParkLockPosnAcqn - Safety parklock position acquiration\r
+*           This module get and check the parklock position message. \r
+*           \r
+*/\r
+\r
+/*!\r
+ * \\page SftyParkLockPosnAcqn_reqs Parklock position acquiration Requirements\r
+ * \\ingroup SftyParkLockPosnAcqn\r
+ * \\brief Parklock position acquiration Requirements\r
+ */\r
+\r
+/*!\r
+* \\defgroup SftyParkLockPosnAcqn_module Parklock position acquiration Module\r
+* \\ingroup SftyParkLockPosnAcqn\r
+* @{\r
+*/\r
+\r
+\r
+\r
+/*================== [includes] =============================================*/\r
+#include "Std_Types.h"\r
+#include "Sfty_Types.h"\r
+#include "AddEnumTypes.h"\r
+#include "Mathlib.h"\r
+#include "ErrDeb_cmn.h"\r
+#include "SftyParkLockPosnAcqn_data.h"\r
+#include "SftyParkLockPosnAcqn.h"\r
+#include "SftyUtils.h"\r
+#include "SftyDma.h"\r
+#include "SftyCrc.h"\r
+#include "SftyReplcmt_data.h"\r
+\r
+/* Core 1 core communication */\r
+#include "C2cComSftyData.h"\r
+/*================== [defines] ==============================================*/\r
+\r
+/*================== [type definitions] =====================================*/\r
+\r
+/*================== [local data] ===========================================*/\r
+\r
+/* Begin: SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_CMN_SLOW_INIT_32 (online) */\r
+#define SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_2_SLOW_INIT_32\r
+#include "MemMap.h"\r
+/*\r
+@@ SYMBOL = SftyParkLockPosnAcqnLstRtsTiStamp\r
+@@ A2L_TYPE = MEASURE\r
+@@ DATA_TYPE = ULONG\r
+@@ DESCRIPTION = "Safety parklock position last time stamp"\r
+@@ GROUP = SftyParkLockPosnAcqn\r
+@@ END\r
+*/\r
+STATIC VAR(uint32, SFTYPARKLOCKPOSNACQN_VAR) SftyParkLockPosnAcqnLstRtsTiStamp = 0U;\r
+\r
+#define SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_2_SLOW_INIT_32\r
+#include "MemMap.h"\r
+/* Stop: SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_CMN_SLOW_INIT_32 (online) */\r
+\r
+/* Begin: SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_CMN_SLOW_INIT_32 (online) */\r
+#define SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_2_SLOW_INIT_32\r
+#include "MemMap.h"\r
+/*\r
+@@ SYMBOL = SftyParkLockPosnAcqnCurrRtsTiStamp\r
+@@ A2L_TYPE = MEASURE\r
+@@ DATA_TYPE = ULONG\r
+@@ DESCRIPTION = "Safety parklock position current time stamp"\r
+@@ GROUP = SftyParkLockPosnAcqn\r
+@@ END\r
+*/\r
+STATIC VAR(uint32, SFTYPARKLOCKPOSNACQN_VAR) SftyParkLockPosnAcqnCurrRtsTiStamp = 0U;\r
+\r
+#define SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_2_SLOW_INIT_32\r
+#include "MemMap.h"\r
+/* Stop: SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_CMN_SLOW_INIT_32 (online) */\r
+\r
+/* Begin: SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_CMN_SLOW_INIT_32 (online) */\r
+#define SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_2_SLOW_INIT_32\r
+#include "MemMap.h"\r
+/*\r
+@@ SYMBOL = SftyParkLockPosnAcqnCurrDmaTiStamp\r
+@@ A2L_TYPE = MEASURE\r
+@@ DATA_TYPE = ULONG\r
+@@ DESCRIPTION = "Safety parklock position Wdi current time stamp"\r
+@@ GROUP = SftyParkLockPosnAcqn\r
+@@ END\r
+*/\r
+STATIC VAR(uint32, SFTYPARKLOCKPOSNACQN_VAR) SftyParkLockPosnAcqnCurrDmaTiStamp = 0U;\r
+\r
+#define SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_2_SLOW_INIT_32\r
+#include "MemMap.h"\r
+/* Stop: SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_CMN_SLOW_INIT_32 (online) */\r
+\r
+\r
+/* Begin: SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_CMN_SLOW_INIT_32 (online) */\r
+#define SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_2_SLOW_INIT_32\r
+#include "MemMap.h"\r
+/*\r
+@@ SYMBOL = SftyParkLockPosnAcqnLstDmaTiStamp\r
+@@ A2L_TYPE = MEASURE\r
+@@ DATA_TYPE = ULONG\r
+@@ DESCRIPTION = "Safety parklock position Wdi last time stamp"\r
+@@ GROUP = SftyParkLockPosnAcqn\r
+@@ END\r
+*/\r
+STATIC VAR(uint32, SFTYPARKLOCKPOSNACQN_VAR) SftyParkLockPosnAcqnLstDmaTiStamp = 0U;\r
+\r
+#define SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_2_SLOW_INIT_32\r
+#include "MemMap.h"\r
+/* Stop: SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_CMN_SLOW_INIT_32 (online) */\r
+\r
+\r
+/* Begin: SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_CMN_SLOW_INIT_32 (online) */\r
+#define SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_2_SLOW_INIT_32\r
+#include "MemMap.h"\r
+/*\r
+@@ SYMBOL = SftyParkLockPosnAcqnDeltaRtsTiStamp\r
+@@ A2L_TYPE = MEASURE\r
+@@ DATA_TYPE = ULONG\r
+@@ DESCRIPTION = "Safety parklock position delta time stamp"\r
+@@ GROUP = SftyParkLockPosnAcqn\r
+@@ END\r
+*/\r
+STATIC VAR(uint32, SFTYPARKLOCKPOSNACQN_VAR) SftyParkLockPosnAcqnDeltaRtsTiStamp = 0U;\r
+\r
+#define SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_2_SLOW_INIT_32\r
+#include "MemMap.h"\r
+/* Stop: SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_CMN_SLOW_INIT_32 (online) */\r
+\r
+\r
+/* Begin: SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_CMN_SLOW_INIT_32 (online) */\r
+#define SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_2_SLOW_INIT_32\r
+#include "MemMap.h"\r
+/*\r
+@@ SYMBOL = SftyParkLockPosnAcqnCrcVal\r
+@@ A2L_TYPE = MEASURE\r
+@@ DATA_TYPE = ULONG\r
+@@ DESCRIPTION = "Safety parklock position delta crc value"\r
+@@ GROUP = SftyParkLockPosnAcqn\r
+@@ END\r
+*/\r
+STATIC VAR(uint32, SFTYPARKLOCKPOSNACQN_VAR) SftyParkLockPosnAcqnCrcVal = 0U;\r
+\r
+#define SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_2_SLOW_INIT_32\r
+#include "MemMap.h"\r
+/* Stop: SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_CMN_SLOW_INIT_32 (online) */\r
+\r
+\r
+/*================== [definition of local functions] ========================*/\r
+\r
+/* Begin: SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_2_SLOW_INIT_8 (online) */\r
+#define SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_2_SLOW_INIT_8\r
+#include "MemMap.h"\r
+/*\r
+@@ SYMBOL = SftyParkLockPosnAcqnSnsrSts\r
+@@ A2L_TYPE = MEASURE\r
+@@ DATA_TYPE = UBYTE\r
+@@ DESCRIPTION = "Safety parklock position acquire sensor status"\r
+@@ GROUP = SftyParkLockPosnAcqn\r
+@@ END\r
+*/\r
+STATIC VAR(uint8, SFTYPARKLOCKPOSNACQN_VAR) SftyParkLockPosnAcqnSnsrSts = 0U;\r
+\r
+#define SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_2_SLOW_INIT_8\r
+#include "MemMap.h"\r
+/* Stop: SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_2_SLOW_INIT_8 (online) */\r
+\r
+/* Begin: SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_2_SLOW_INIT_8 (online) */\r
+#define SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_2_SLOW_INIT_8\r
+#include "MemMap.h"\r
+/*\r
+@@ SYMBOL = SftyParkLockPosnAcqnSnsrWdiFlg\r
+@@ A2L_TYPE = MEASURE\r
+@@ DATA_TYPE = UBYTE\r
+@@ DESCRIPTION = "Safety parklock position acquire sensor watch dog interrupt flag"\r
+@@ GROUP = SftyParkLockPosnAcqn\r
+@@ END\r
+*/\r
+STATIC VAR(uint8, SFTYPARKLOCKPOSNACQN_VAR) SftyParkLockPosnAcqnSnsrWdiFlg = 0U;\r
+\r
+#define SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_2_SLOW_INIT_8\r
+#include "MemMap.h"\r
+/* Stop: SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_2_SLOW_INIT_8 (online) */\r
+\r
+\r
+/* Begin: SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_CMN_SLOW_INIT_32 (online) */\r
+#define SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_2_SLOW_INIT_32\r
+#include "MemMap.h"\r
+/*\r
+@@ INSTANCE = SftyParkLockPosnAcqnSENTSnrDataRx\r
+@@ STRUCTURE = SftyParkLockSENTDataType\r
+@@ END\r
+*/\r
+STATIC VAR(SftyParkLockSENTDataType, SFTYPARKLOCKPOSNACQN_VAR) SftyParkLockPosnAcqnSENTSnrDataRx = {{0U},{0U},{0U},{0U},{0U}};\r
+\r
+#define SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_2_SLOW_INIT_32\r
+#include "MemMap.h"\r
+/* Stop: SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_CMN_SLOW_INIT_32 (online) */\r
+\r
+\r
+/*================== [definition of global functions] =======================*/\r
+\r
+/* ****************************** AREA CMN ********************************* */\r
+/* ********************************** SLOW ********************************* */\r
+\r
+\r
+\r
+#define SFTYPARKLOCKPOSNACQN_START_SEC_CODE_AREA_2_SLOW\r
+#include "MemMap.h"\r
+\r
+/***********************************************************************************/\r
+/*\r
+ * \\fn      void SftyParkLockPosnAcqn_InitArea2ErrMonrStVal(void)\r
+ * \\brief   This Function clear SftyParkLockPosnAcqn monitor status.\r
+ * Parent DD SftyParkLockPosnAcqn_MainFunctionArea2\r
+ * \\return : None\r
+ */\r
+/***********************************************************************************/\r
+\r
+LOCAL_INLINE void SftyParkLockPosnAcqn_InitArea2ErrMonrStVal(void)\r
+{\r
+\t/* ************* Source code **************** */\r
+\tSftyParkLockPosnAcqnSnrToutErrMonrSt = ERR_DEB_MONR_STS_INACTIVE;\r
+\tSftyParkLockPosnAcqnSnrDataRxCrcErrMonrSt = ERR_DEB_MONR_STS_INACTIVE;\r
+}\r
+\r
+/***********************************************************************************/\r
+/*\r
+ * \\fn      void SftyParkLockPosnAcqn_GetParkLockVal(void)\r
+ * \\brief   This Function shall get the value from the DMA or Replacement.\r
+ * Parent DD SftyParkLockPosnAcqn_MainFunctionArea2\r
+ * \\return : None\r
+ */\r
+/***********************************************************************************/\r
+\r
+LOCAL_INLINE void SftyParkLockPosnAcqn_GetParkLockVal(void)\r
+{\r
+\t/* ************* Source code **************** */\r
+    /* replacement flag is true, use the replacement value,otherwise use the DMA value*/\r
+#ifndef SERIES_PRODUCTION\r
+\r
+\tif(SftyReplcmParkLockPosnAcqnEnaFlg == TRUE)\r
+\t{\r
+\t    /* Get the parklock input from the replacement value */\r
+        SftyParkLockPosnAcqnSnsrSts = SftyReplcmParkLockActrPosSnsrSts;\r
+\t\tSftyParkLockPosnAcqnSENTSnrDataRx.CrcData.all = SftyReplcmParkLockPosnAcqnSENTSnrDataRxCrcVal;\r
+\t\tSftyParkLockPosnAcqnSENTSnrDataRx.RxIntStat.all = SftyReplcmParkLockPosnAcqnSENTSnrDataRxIntStatVal;\r
+\t\tSftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.all = SftyReplcmParkLockPosnAcqnSENTSnrDataRxSnsrDataVal;\r
+\t\tSftyParkLockPosnAcqnSENTSnrDataRx.TiStampDma = SftyReplcmParkLockPosnAcqnSENTSnrDataRxTiStampDmaVal;\r
+\t\tSftyParkLockPosnAcqnSENTSnrDataRx.TiStampRts = SftyReplcmParkLockPosnAcqnSENTSnrDataRxTiStampRtsSVal;\t    \r
+ \r
+\t}\r
+\telse\r
+\t\t\r
+#endif  \r
+\t{\r
+\t\tSftyParkLockPosnAcqnSnsrSts = SftyReplcmParkLockActrPosSnsrSts; /*Need to be replaced by  SftyparklockActrSnsrSts*/\r
+\t    SftyParkLockPosnAcqnSENTSnrDataRx.CrcData.all = SftyDmaParkLockPosnAcqnSENTSnrDataRx.CrcData;\r
+\t\tSftyParkLockPosnAcqnSENTSnrDataRx.RxIntStat.all = SftyDmaParkLockPosnAcqnSENTSnrDataRx.RxIntStat;\r
+\t\tSftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.all = SftyDmaParkLockPosnAcqnSENTSnrDataRx.SnsrData;\r
+\t\tSftyParkLockPosnAcqnSENTSnrDataRx.TiStampDma = SftyDmaParkLockPosnAcqnSENTSnrDataRx.TiStampDma;\r
+\t\tSftyParkLockPosnAcqnSENTSnrDataRx.TiStampRts = SftyDmaParkLockPosnAcqnSENTSnrDataRx.TiStampRts;\r
+\t}\r
+\r
+}\r
+/******************************************************************/\r
+/*!\r
+ * \\fn      uint8 SftyParkLockPosnAcqn_ChkRtsTiStamp\r
+ * \\brief   This function checks timestamp of the frame\r
+ * \\Parent_DD  SftyParkLockPosnAcqn_MainFunctionArea2\r
+ * \\return  uint8 - RTS timestamp check status\r
+ * \\retVal\r: ERR_DEB_MONR_STS_PASSED - Return timestamp check as passed\r
+ * \\retVal  ERR_DEB_MONR_STS_FAILED - Return timestamp check as failed\r
+ */\r
+/******************************************************************/\r
+LOCAL_INLINE uint8 SftyParkLockPosnAcqn_ChkRtsTiStamp(void)\r
+{\r
+   uint8 retVal;\r
+\r
+   /* Get current timestamp */\r
+   SftyParkLockPosnAcqnCurrRtsTiStamp = SftyParkLockPosnAcqnSENTSnrDataRx.TiStampRts;\r
+\r
+      /* Compare with current time stamp and last time stamp to confirm if the time stamp is updated*/\r
+\t  retVal = (uint8)SftyUtils_ChkTiStamp(&SftyParkLockPosnAcqnLstRtsTiStamp, &SftyParkLockPosnAcqnCurrRtsTiStamp);\r
+\r
+\t  if(retVal == ERR_DEB_MONR_STS_PASSED)\r
+\t  {    \r
+\t       /*if time updated, check if delta time is less than 1ms */\r
+\t       SftyParkLockPosnAcqnDeltaRtsTiStamp = SftyParkLockPosnAcqnCurrRtsTiStamp - SftyParkLockPosnAcqnLstRtsTiStamp;\r
+\t  \r
+\t\t   if((SftyParkLockPosnAcqnDeltaRtsTiStamp < SftyParkLockPosnAcqnDeltaRtsTiStampThd))\r
+\t\t\t{\r
+\t\t        /* if the delta time stamp is less than 1ms, set the timeout monitor to PASSED*/\r
+\t\t\t\tretVal = ERR_DEB_MONR_STS_PASSED;    \r
+\t\t\t}\r
+\t\t\telse\r
+\t\t\t{\r
+\t            /* if the delta time stamp is over than 1ms, set the timeout monitor to FAILED*/\r
+\t\t\t\tretVal = ERR_DEB_MONR_STS_FAILED; \t \r
+\t\t\t}\r
+\r
+\t  }\r
+\t  else\r
+\t  {\r
+\t       /* if the time stamp is updated, set the timeout monitor to FAILED*/\r
+           retVal = ERR_DEB_MONR_STS_FAILED; \r
+\t  }\r
+   \r
+\r
+   return retVal;\r
+\r
+}\r
+\r
+/***********************************************************************************/\r
+/*\r
+ * \\fn      void SftyParkLockPosnAcqn_TimeoutCheck(void)\r
+ * \\brief   This Function check parklock position message timeout.\r
+ * Parent DD SftyParkLockPosnAcqn_MainFunctionArea2\r
+ * \\return : None\r
+ */\r
+/***********************************************************************************/\r
+\r
+LOCAL_INLINE void SftyParkLockPosnAcqn_TimeoutCheck(void)\r
+{\r
+    uint8 errMonSts;\r
+\t/************** Source code *****************/\r
+    /* Check if the parklock sensor power supply is normal */\r
+\tif(SftyParkLockPosnAcqnSnsrSts == TRUE)\r
+\t{\r
+\t     /* Get the SftyParkLockPosnAcqn WDI timestamp*/\r
+         SftyParkLockPosnAcqnCurrDmaTiStamp = SftyParkLockPosnAcqnSENTSnrDataRx.TiStampDma;\r
+\t\t \r
+\t\t /* Check if the WDI timestamp updated normally*/\r
+\t\t errMonSts = SftyUtils_ChkTiStamp(&SftyParkLockPosnAcqnLstDmaTiStamp, &SftyParkLockPosnAcqnCurrDmaTiStamp);\r
+\r
+\t\t /*If the WDI timestamp update normally*/\r
+\t\t if(errMonSts == ERR_DEB_MONR_STS_PASSED)\r
+\t\t {\r
+\t\t    /* Get the SftyParkLockSnsrWdi flag*/\r
+\t\t    SftyParkLockPosnAcqnSnsrWdiFlg = SftyParkLockPosnAcqnSENTSnrDataRx.RxIntStat.B.bit13;\r
+\r
+\t\t\t/* Check if the WDI flag is triggered */\r
+            if(SftyParkLockPosnAcqnSnsrWdiFlg == FALSE)\r
+\t        {\r
+                /* Check parklock time stamp and update to the tim out monitor status*/\r
+\t\t        SftyParkLockPosnAcqnSnrToutErrMonrSt = SftyParkLockPosnAcqn_ChkRtsTiStamp();\t \r
+\t\t\t\t\r
+\t        }\r
+\t\t    else\r
+\t        {\r
+\t            /* Set the time out monitor status to FAILED*/\r
+\t\t        SftyParkLockPosnAcqnSnrToutErrMonrSt = ERR_DEB_MONR_STS_FAILED;\r
+\t\t\t\t\r
+\t\t\t   /* If WDI flag is triggered, clear the WDI flag */\r
+\t\t\t   SENT_WDI_FLG_CLR = 1U;\r
+\t\t    }\r
+\r
+\t\t }\r
+\t     else\r
+\t     {\r
+\t\t      /* Set the time out monitor status to FAILED*/\r
+\t\t\t  SftyParkLockPosnAcqnSnrToutErrMonrSt = ERR_DEB_MONR_STS_FAILED;\r
+\t     }\r
+\t    \r
+\t}\r
+\telse\r
+\t{\r
+\t\t/*Do nothing*/\r
+\t}\r
+\t\t\t\r
+\t\r
+}\r
+\r
+\r
+/***********************************************************************************/\r
+/*\r
+ * \\fn      void SftyParkLockPosnAcqn_CrcValCheck(void)\r
+ * \\brief   This Function check parklock position CRC value.\r
+ * Parent DD SftyParkLockPosnAcqn_MainFunctionArea2\r
+ * \\return : None\r
+ */\r
+/***********************************************************************************/\r
+\r
+LOCAL_INLINE void SftyParkLockPosnAcqn_CrcValCheck(void)\r
+{\r
+     uint8 crcBuffer[6];\r
+\t/* ************* Source code **************** */\r
+\t/* If the timeout check passed, check the crc value*/ \r
+\tif(SftyParkLockPosnAcqnSnrToutErrMonrSt == ERR_DEB_MONR_STS_PASSED)\r
+\t{\r
+\t   /* Get the nibble data value */\r
+\t   crcBuffer[0] = (uint8)SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.Nibble.data0;\r
+\t   crcBuffer[1] = (uint8)SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.Nibble.data1;\r
+\t   crcBuffer[2] = (uint8)SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.Nibble.data2;\r
+\t   crcBuffer[3] = (uint8)SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.Nibble.data3;\r
+\t   crcBuffer[4] = (uint8)SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.Nibble.data4;\r
+\t   crcBuffer[5] = (uint8)SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.Nibble.data5;\r
+\r
+\t   /* Calculate the CRC value from the nibble data input */\r
+       SftyParkLockPosnAcqnCrcVal = SftyCrc_CalcCRC4((const uint8*)crcBuffer,SFTYPARKLOCKPOSNACQN_CRC_CALCN_BUF_SIZE,\r
+\t   \t                                             SFTYPARKLOCKPOSNACQN_4BIT_CRC_INIT_SEED_VALUE,TRUE);\r
+       /* check the crc value  */\r
+\t   if(SftyParkLockPosnAcqnCrcVal == SftyParkLockPosnAcqnSENTSnrDataRx.CrcData.Nibble.data0)\r
+\t   {\r
+\t       /* If calculated CRC is equal to niblle data crc value, set the crc monitor status to passed*/\r
+\t       SftyParkLockPosnAcqnSnrDataRxCrcErrMonrSt = ERR_DEB_MONR_STS_PASSED;\r
+\t   }\r
+\t   else\r
+\t   {\r
+\t       /* If calculated CRC is not equal to niblle data crc value, set the crc monitor status to failed*/\r
+\t       SftyParkLockPosnAcqnSnrDataRxCrcErrMonrSt = ERR_DEB_MONR_STS_FAILED;\r
+\t\t   \r
+\t   }\r
+\t}\r
+}\r
+\r
+\r
+/***********************************************************************************/\r
+/*\r
+ * \\fn      void SftyParkLockPosnAcqn_ExtractPosRawVal(void)\r
+ * \\brief   This Function extract parklock position raw value.\r
+ * Parent DD SftyParkLockPosnAcqn_MainFunctionArea2\r
+ * \\return : None\r
+ */\r
+/***********************************************************************************/\r
+\r
+LOCAL_INLINE void SftyParkLockPosnAcqn_ExtractPosRawVal(void)\r
+{\r
+\t/* ************* Source code **************** */\r
+\tif(SftyParkLockPosnAcqnSnrDataRxCrcErrMonrSt == ERR_DEB_MONR_STS_PASSED)\r
+\t{\r
+\t   /* If both timeout check and crc check are passed, update D0 to D2 the raw value */\r
+       SftyParkLockPosnAcqnRawVal = SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.Msg.msg0;\r
+\t}\r
+\telse\r
+\t{\r
+      /* Do nothing */\r
+\t}\r
+}\r
+\r
+\r
+/***********************************************************************************/\r
+/*\r
+ * \\fn      void SftyParkLockPosnAcqn_MainFunctionArea2(void)\r
+ * \\brief   This is the mian function of SftyParkLockPosnAcqn component.\r
+ * \\return : None\r
+ */\r
+/***********************************************************************************/\r
+FUNC(void, SFTYPARKLOCKPOSNACQN_CODE) SftyParkLockPosnAcqn_MainFunctionArea2(void)\r
+{\r
+   /* ******** Variables declaration *********** */\r
+   \r
+   /* ************* Source code **************** */\r
+   /* Clear the all error monitor status */\r
+   SftyParkLockPosnAcqn_InitArea2ErrMonrStVal();\r
+\r
+   /* Get the park lock input value */\r
+   SftyParkLockPosnAcqn_GetParkLockVal();\r
+\r
+   /* Check the timeout */\r
+   SftyParkLockPosnAcqn_TimeoutCheck();\r
+\r
+   /* Check the CRC value */\r
+   SftyParkLockPosnAcqn_CrcValCheck();\r
+\r
+   /*Extract the position to raw value */\r
+   SftyParkLockPosnAcqn_ExtractPosRawVal();\r
+\r
+   return;\r
+}\r
+\r
+\r
+/***********************************************************************************/\r
+/*\r
+ * \\fn      void SftyParkLockPosnAcqn_InitArea2(void)\r
+ * \\brief   This Function initializes SftyParkLockPosnAcqn component.\r
+ * \\return : None\r
+ */\r
+/***********************************************************************************/\r
+FUNC(void, SFTYPARKLOCKPOSNACQN_CODE) SftyParkLockPosnAcqn_InitArea2(void)\r
+{\r
+   /* ******** Variables declaration *********** */\r
+   \r
+   /* Initialize the raw value and monitor status */\r
+   SftyParkLockPosnAcqnRawVal = 0U;\r
+   SftyParkLockPosnAcqnSnrToutErrMonrSt = ERR_DEB_MONR_STS_INACTIVE;\r
+   SftyParkLockPosnAcqnSnrDataRxCrcErrMonrSt = ERR_DEB_MONR_STS_INACTIVE;\r
+   \r
+   return;\r
+}\r
+\r
+\r
+#define SFTYPARKLOCKPOSNACQN_STOP_SEC_CODE_AREA_2_SLOW\r
+#include "MemMap.h"\r
+\r
+/*================== [closure] ==============================================*/\r
+\r
+/*! @} doxygen end of group definition */\r
+/* ********************************************************************** */\r
+/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2021              */\r
+/* All Rights Reserved. Confidential                                      */\r
+/* ********************************************************************** */\r
+/*==================[end of file]============================================*/\r
+\r
+\r
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyParkLockPosnAcqn/src/SftyParkLockPosnAcqn_data.c b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyParkLockPosnAcqn/src/SftyParkLockPosnAcqn_data.c
new file mode 100644
index 000000000..4c2a37af3
--- /dev/null
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyParkLockPosnAcqn/src/SftyParkLockPosnAcqn_data.c
@@ -0,0 +1,105 @@
+/* ***************************************************************** */
+/* Sourcefile: SftyParkLockPosnAcqn_data.c                                  */
+/* ADD Container: SftyParkLockPosnAcqn                                      */
+/* ADD Container Version:01.00                                       */
+/* ***************************************************************** */
+/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2021                 */
+/* All Rights Reserved. Confidential                                 */
+/* ***************************************************************** */
+/*!
+ * \\defgroup SftyParkLockPosnAcqn_data   SftyParkLockPosnAcqn_data -  SftyParkLockPosnAcqn\'s all variables, including calibration data
+ * \\ingroup  SftyParkLockPosnAcqn
+ * @{
+*/
+
+
+#include "Std_Types.h"
+
+
+#include\t"AddStructTypes.h"
+#include\t"SftyParkLockPosnAcqn_data.h"
+#include\t"AddEnumTypes.h"
+
+#ifndef ADDS_DEF_FILE
+#define ADDS_DEF_FILE
+#endif
+
+/* Begin: SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_2_SLOW_INIT_8 (online) */
+#define SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_2_SLOW_INIT_8
+#include "MemMap.h"
+/*
+@@ SYMBOL = SftyParkLockPosnAcqnSnrToutErrMonrSt
+@@ A2L_TYPE = MEASURE
+@@ DATA_TYPE = UBYTE
+@@ DESCRIPTION = "Safety parklock position sensor signal time out error monitor status"
+@@ GROUP = SftyParkLockPosnAcqn
+@@ END
+*/
+VAR(uint8, SFTYPARKLOCKPOSNACQN_VAR) SftyParkLockPosnAcqnSnrToutErrMonrSt = 0U;
+
+#define SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_2_SLOW_INIT_8
+#include "MemMap.h"
+/* Stop: SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_2_SLOW_INIT_8 (online) */
+
+
+/* Begin: SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_2_SLOW_INIT_8 (online) */
+#define SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_2_SLOW_INIT_8
+#include "MemMap.h"
+/*
+@@ SYMBOL = SftyParkLockPosnAcqnSnrDataRxCrcErrMonrSt
+@@ A2L_TYPE = MEASURE
+@@ DATA_TYPE = UBYTE
+@@ DESCRIPTION = "Safety parklock position sensor signal Rx CRC error monitor status"
+@@ GROUP = SftyParkLockPosnAcqn
+@@ END
+*/
+VAR(uint8, SFTYPARKLOCKPOSNACQN_VAR) SftyParkLockPosnAcqnSnrDataRxCrcErrMonrSt = 0U;
+
+#define SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_2_SLOW_INIT_8
+#include "MemMap.h"
+/* Stop: SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_2_SLOW_INIT_8 (online) */
+
+/* Begin: SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_2_SLOW_INIT_32 (online) */
+#define SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_2_SLOW_INIT_32
+#include "MemMap.h"
+/*
+@@ SYMBOL = SftyParkLockPosnAcqnRawVal
+@@ A2L_TYPE = MEASURE
+@@ DATA_TYPE = ULONG
+@@ DESCRIPTION = "Safety parklock position raw value"
+@@ GROUP = SftyParkLockPosnAcqn
+@@ END
+*/
+VAR(uint32, SFTYPARKLOCKPOSNACQN_VAR) SftyParkLockPosnAcqnRawVal = 0U;
+
+#define SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_2_SLOW_INIT_32
+#include "MemMap.h"
+/* Stop: SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_2_SLOW_INIT_32 (online) */
+
+
+/* Begin: SFTYPARKLOCKPOSNACQN_START_SEC_CALIB_32 (online) */
+#define SFTYPARKLOCKPOSNACQN_START_SEC_CALIB_32
+#include "MemMap.h"
+/*
+@@ SYMBOL = SftyParkLockPosnAcqnDeltaTiStampThd
+@@ A2L_TYPE = PARAMETER
+@@ DATA_TYPE = ULONG
+@@ DESCRIPTION = "Safety parklock position detail time stamp threshold"
+@@ GROUP = SftyParkLockPosnAcqn
+@@ END
+*/
+
+CONST(uint32, SFTYPARKLOCKPOSNACQN_VAR)SftyParkLockPosnAcqnDeltaRtsTiStampThd = 334U;
+
+#define SFTYPARKLOCKPOSNACQN_STOP_SEC_CALIB_32
+#include "MemMap.h"
+/* Stop: SFTYPARKLOCKPOSNACQN_STOP_SEC_CALIB_32 (online) */
+
+
+
+/** @} doxygen end group definition */
+/* ***************************************************************** */
+/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2021                 */
+/* All Rights Reserved. Confidential                                 */
+/* ***************************************************************** */
+
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftySdl/src/SftySdl_cfg.c b/src/fw_cu/Components/Safety/Sfty_Cmn/SftySdl/src/SftySdl_cfg.c
index 500aaf24f..dc4436f50 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/SftySdl/src/SftySdl_cfg.c
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftySdl/src/SftySdl_cfg.c
@@ -40,6 +40,7 @@
 #include "SftyFlshVldt.h"
 #include "SftyCrc.h"
 #include "SftySysInit_data.h"
+#include "SftyParkLockPosnAcqn.h"
 
 /* Safety Inverter Modules */
 #include "SftyAcEvln.h"
@@ -533,6 +534,7 @@ CONST(SftySdl_TaskTblType, SFTYSDL) SftySdlNormRunTaskTbl[]=
    ,{ SFTYSDL_AREA_CMN, &SftyErrDeb_MainFunctionAreaCmnSlow,     100u,           6u}
    ,{ SFTYSDL_AREA_0,   &SftyTempEvln_MainFunction,                 20u,            8u}
 //   ,{ SFTYSDL_AREA_0,   &SftyLibApp_Run,                        5000u,           4u}
+   ,{ SFTYSDL_AREA_2,\t&SftyParkLockPosnAcqn_MainFunctionArea2,  10u,            0u}
    ,{ SFTYSDL_AREA_CMN, &SftyShutoffPahTst_Main,                  10u,           0u}
    ,{ SFTYSDL_AREA_1,   &SftyCrashSigMon_MainFunction,            10u,           0u}
    ,{ SFTYSDL_AREA_2,   &SftyHvInterlock_MainFunction,            10u,           0u}
@@ -603,6 +605,7 @@ CONST(SftySdl_InitTblType, SFTYSDL) SftySdlInitNormRunTbl[] =
     ,{ SFTYSDL_AREA_CMN, &SftyActvDchaCtrl_Init }
     ,{ SFTYSDL_AREA_CMN, &SftyE2eRx_Init }
     ,{ SFTYSDL_AREA_1,   &SftyTqEstimrPwrMdl_InitArea1}
+\t,{ SFTYSDL_AREA_2,   &SftyParkLockPosnAcqn_InitArea2}
     ,{ SFTYSDL_AREA_0,   &SftySysInit_InitArea0 }       /* Closes access to safety relevant components (SMU/Ports...) */
 //    ,{ SFTYSDL_AREA_2,   &SftySbcCtrl_InitChk}          /* Must run after SftySysInit */
 //\t,{ SFTYSDL_AREA_0,   &SftyLibApp_RunInit }          /* RunInit shall be called after SysInit, where SMU and MTU access protection */
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/include/SftyReplcmt_data.h b/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/include/SftyReplcmt_data.h
index 30098eaa8..738380f62 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/include/SftyReplcmt_data.h
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/include/SftyReplcmt_data.h
@@ -2779,4 +2779,78 @@ extern CONST(boolean, SFTYDCEVLN_CALIB) SftyReplcmtE2eFpgaOverVoltVBatFltSts;
 /* End: SFTYREPLCMT_STOP_SEC_CALIB_8 (calib) */
 
 
+/* Begin: SFTYREPLCMT_START_SEC_CALIB_8 (online) */
+#define SFTYREPLCMT_START_SEC_CALIB_8
+#include "MemMap.h"
+
+extern CONST(uint8, SFTYPARKLOCKPOSNACQN_VAR)SftyReplcmParkLockPosnAcqnEnaFlg;
+
+#define SFTYREPLCMT_STOP_SEC_CALIB_8
+#include "MemMap.h"
+/* Stop: SFTYREPLCMT_STOP_SEC_CALIB_8 (online) */
+
+/* Begin: SFTYREPLCMT_START_SEC_CALIB_8 (online) */
+#define SFTYREPLCMT_START_SEC_CALIB_8
+#include "MemMap.h"
+
+
+extern CONST(uint8, SFTYPARKLOCKPOSNACQN_VAR)SftyReplcmParkLockActrPosSnsrSts;
+
+#define SFTYREPLCMT_STOP_SEC_CALIB_8
+#include "MemMap.h"
+/* Stop: SFTYREPLCMT_STOP_SEC_CALIB_8 (online) */
+
+/* Begin: SFTYREPLCMT_START_SEC_CALIB_32 (online) */
+#define SFTYREPLCMT_START_SEC_CALIB_32
+#include "MemMap.h"
+
+
+extern CONST(uint32, SFTYPARKLOCKPOSNACQN_VAR)SftyReplcmParkLockPosnAcqnSENTSnrDataRxCrcVal;
+
+#define SFTYREPLCMT_STOP_SEC_CALIB_32
+#include "MemMap.h"
+/* Stop: SFTYREPLCMT_STOP_SEC_CALIB_32 (online) */
+
+/* Begin: SFTYREPLCMT_START_SEC_CALIB_32 (online) */
+#define SFTYREPLCMT_START_SEC_CALIB_32
+#include "MemMap.h"
+
+
+extern CONST(uint32, SFTYPARKLOCKPOSNACQN_VAR)SftyReplcmParkLockPosnAcqnSENTSnrDataRxSnsrDataVal;
+
+#define SFTYREPLCMT_STOP_SEC_CALIB_32
+#include "MemMap.h"
+/* Stop: SFTYREPLCMT_STOP_SEC_CALIB_32 (online) */
+
+/* Begin: SFTYREPLCMT_START_SEC_CALIB_32 (online) */
+#define SFTYREPLCMT_START_SEC_CALIB_32
+#include "MemMap.h"
+
+
+extern CONST(uint32, SFTYPARKLOCKPOSNACQN_VAR)SftyReplcmParkLockPosnAcqnSENTSnrDataRxTiStampDmaVal;
+
+#define SFTYREPLCMT_STOP_SEC_CALIB_32
+#include "MemMap.h"
+/* Stop: SFTYREPLCMT_STOP_SEC_CALIB_32 (online) */
+
+/* Begin: SFTYREPLCMT_START_SEC_CALIB_32 (online) */
+#define SFTYREPLCMT_START_SEC_CALIB_32
+#include "MemMap.h"
+
+extern CONST(uint32, SFTYPARKLOCKPOSNACQN_VAR)SftyReplcmParkLockPosnAcqnSENTSnrDataRxTiStampRtsSVal;
+
+#define SFTYREPLCMT_STOP_SEC_CALIB_32
+#include "MemMap.h"
+/* Stop: SFTYREPLCMT_STOP_SEC_CALIB_32 (online) */
+
+/* Begin: SFTYREPLCMT_START_SEC_CALIB_32 (online) */
+#define SFTYREPLCMT_START_SEC_CALIB_32
+#include "MemMap.h"
+
+
+extern CONST(uint32, SFTYPARKLOCKPOSNACQN_VAR)SftyReplcmParkLockPosnAcqnSENTSnrDataRxIntStatVal;
+
+#define SFTYREPLCMT_STOP_SEC_CALIB_32
+#include "MemMap.h"
+/* Stop: SFTYREPLCMT_STOP_SEC_CALIB_32 (online) */
 #endif
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/src/SftyReplcmt_data.c b/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/src/SftyReplcmt_data.c
index 77aabc688..2cae4241d 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/src/SftyReplcmt_data.c
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/src/SftyReplcmt_data.c
@@ -2983,3 +2983,127 @@ CONST(boolean, SFTYDCEVLN_CALIB) SftyReplcmtE2eFpgaOverVoltVBatFltSts = FALSE;
 #define SFTYREPLCMT_STOP_SEC_CALIB_8
 #include "MemMap.h"
 /* End: SFTYREPLCMT_STOP_SEC_CALIB_8 (calib) */
+/* Begin: SFTYREPLCMT_START_SEC_CALIB_8 (online) */
+#define SFTYREPLCMT_START_SEC_CALIB_8
+#include "MemMap.h"
+/*
+@@ SYMBOL = SftyReplcmParkLockPosnAcqnEnaFlg
+@@ A2L_TYPE = PARAMETER
+@@ DATA_TYPE = UBYTE
+@@ DESCRIPTION = "Safety parklock position detail time stamp threshold"
+@@ END
+*/
+
+CONST(uint8, SFTYPARKLOCKPOSNACQN_VAR)SftyReplcmParkLockPosnAcqnEnaFlg = 0U;
+
+#define SFTYREPLCMT_STOP_SEC_CALIB_8
+#include "MemMap.h"
+/* Stop: SFTYREPLCMT_STOP_SEC_CALIB_8 (online) */
+
+/* Begin: SFTYREPLCMT_START_SEC_CALIB_8 (online) */
+#define SFTYREPLCMT_START_SEC_CALIB_8
+#include "MemMap.h"
+/*
+@@ SYMBOL = SftyReplcmParkLockActrPosSnsrSts
+@@ A2L_TYPE = PARAMETER
+@@ DATA_TYPE = UBYTE
+@@ DESCRIPTION = "Safety parklock position sensor status"
+@@ END
+*/
+
+CONST(uint8, SFTYPARKLOCKPOSNACQN_VAR)SftyReplcmParkLockActrPosSnsrSts = 0U;
+
+#define SFTYREPLCMT_STOP_SEC_CALIB_8
+#include "MemMap.h"
+/* Stop: SFTYREPLCMT_STOP_SEC_CALIB_8 (online) */
+
+/* Begin: SFTYREPLCMT_START_SEC_CALIB_32 (online) */
+#define SFTYREPLCMT_START_SEC_CALIB_32
+#include "MemMap.h"
+
+/*
+@@ SYMBOL = SftyReplcmParkLockPosnAcqnSENTSnrDataRxCrcVal
+@@ A2L_TYPE = PARAMETER
+@@ DATA_TYPE = ULONG
+@@ DESCRIPTION = "Safety parklock position replacement crc value"
+@@ END
+*/
+
+CONST(uint32, SFTYPARKLOCKPOSNACQN_VAR)SftyReplcmParkLockPosnAcqnSENTSnrDataRxCrcVal = 0U;
+
+#define SFTYREPLCMT_STOP_SEC_CALIB_32
+#include "MemMap.h"
+/* Stop: SFTYREPLCMT_STOP_SEC_CALIB_32 (online) */
+
+/* Begin: SFTYREPLCMT_START_SEC_CALIB_32 (online) */
+#define SFTYREPLCMT_START_SEC_CALIB_32
+#include "MemMap.h"
+
+/*
+@@ SYMBOL = SftyReplcmParkLockPosnAcqnSENTSnrDataRxSnsrDataVal
+@@ A2L_TYPE = PARAMETER
+@@ DATA_TYPE = ULONG
+@@ DESCRIPTION = "Safety parklock position replacement sensor data value"
+@@ END
+*/
+
+CONST(uint32, SFTYPARKLOCKPOSNACQN_VAR)SftyReplcmParkLockPosnAcqnSENTSnrDataRxSnsrDataVal = 0U;
+
+#define SFTYREPLCMT_STOP_SEC_CALIB_32
+#include "MemMap.h"
+/* Stop: SFTYREPLCMT_STOP_SEC_CALIB_32 (online) */
+
+/* Begin: SFTYREPLCMT_START_SEC_CALIB_32 (online) */
+#define SFTYREPLCMT_START_SEC_CALIB_32
+#include "MemMap.h"
+
+/*
+@@ SYMBOL = SftyReplcmParkLockPosnAcqnSENTSnrDataRxTiStampVal
+@@ A2L_TYPE = PARAMETER
+@@ DATA_TYPE = ULONG
+@@ DESCRIPTION = "Safety parklock position replacement dma timestamp value"
+@@ END
+*/
+
+CONST(uint32, SFTYPARKLOCKPOSNACQN_VAR)SftyReplcmParkLockPosnAcqnSENTSnrDataRxTiStampDmaVal = 0U;
+
+#define SFTYREPLCMT_STOP_SEC_CALIB_32
+#include "MemMap.h"
+/* Stop: SFTYREPLCMT_STOP_SEC_CALIB_32 (online) */
+
+/* Begin: SFTYREPLCMT_START_SEC_CALIB_32 (online) */
+#define SFTYREPLCMT_START_SEC_CALIB_32
+#include "MemMap.h"
+
+/*
+@@ SYMBOL = SftyReplcmParkLockPosnAcqnSENTSnrDataRxTiStampRtsSVal
+@@ A2L_TYPE = PARAMETER
+@@ DATA_TYPE = ULONG
+@@ DESCRIPTION = "Safety parklock position replacement RTS timestamp value"
+@@ END
+*/
+
+CONST(uint32, SFTYPARKLOCKPOSNACQN_VAR)SftyReplcmParkLockPosnAcqnSENTSnrDataRxTiStampRtsSVal = 0U;
+
+#define SFTYREPLCMT_STOP_SEC_CALIB_32
+#include "MemMap.h"
+/* Stop: SFTYREPLCMT_STOP_SEC_CALIB_32 (online) */
+
+/* Begin: SFTYREPLCMT_START_SEC_CALIB_32 (online) */
+#define SFTYREPLCMT_START_SEC_CALIB_32
+#include "MemMap.h"
+
+/*
+@@ SYMBOL = SftyReplcmParkLockPosnAcqnSENTSnrDataRxIntStatVal
+@@ A2L_TYPE = PARAMETER
+@@ DATA_TYPE = ULONG
+@@ DESCRIPTION = "Safety parklock position replacement STAT value, bit13 is WDI flag"
+@@ END
+*/
+
+CONST(uint32, SFTYPARKLOCKPOSNACQN_VAR)SftyReplcmParkLockPosnAcqnSENTSnrDataRxIntStatVal = 0U;
+
+#define SFTYREPLCMT_STOP_SEC_CALIB_32
+#include "MemMap.h"
+/* Stop: SFTYREPLCMT_STOP_SEC_CALIB_32 (online) */
+
diff --git a/src/fw_cu/build/a2l/Measurements-to-Timeslices-Mapping.csv b/src/fw_cu/build/a2l/Measurements-to-Timeslices-Mapping.csv
index 68f8a14ba..fb30b2d93 100644
--- a/src/fw_cu/build/a2l/Measurements-to-Timeslices-Mapping.csv
+++ b/src/fw_cu/build/a2l/Measurements-to-Timeslices-Mapping.csv
@@ -8105,6 +8105,100 @@ SftyInvActrSafeStReqIntel,Core_1,Core_1_200us,0.2,,,SSW
 SftyInvActrStateReqEmgySw,Core_1,Core_1_200us,0.2,,,SSW
 SftyInvActrStateReqMod,Core_1,Core_1_200us,0.2,,,SSW
 SftyInvActrStateReqSCSpdReady,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnCrcVal,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnCurrDmaTiStamp,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnCurrRtsTiStamp,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnDeltaRtsTiStamp,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnLstDmaTiStamp,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnLstRtsTiStamp,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnRawVal,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.CrcData.all,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.CrcData.B.bit0,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.CrcData.B.bit1,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.CrcData.B.bit10,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.CrcData.B.bit11,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.CrcData.B.bit12,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.CrcData.B.bit13,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.CrcData.B.bit14,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.CrcData.B.bit15,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.CrcData.B.bit2,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.CrcData.B.bit3,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.CrcData.B.bit4,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.CrcData.B.bit5,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.CrcData.B.bit6,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.CrcData.B.bit7,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.CrcData.B.bit8,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.CrcData.B.bit9,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.CrcData.Msg.msg0,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.CrcData.Msg.msg1,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.CrcData.Nibble.data0,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.CrcData.Nibble.data1,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.CrcData.Nibble.data2,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.CrcData.Nibble.data3,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.CrcData.Nibble.data4,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.CrcData.Nibble.data5,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.CrcData.Nibble.data6,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.CrcData.Nibble.data7,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.RxIntStat.all,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.RxIntStat.B.bit0,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.RxIntStat.B.bit1,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.RxIntStat.B.bit10,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.RxIntStat.B.bit11,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.RxIntStat.B.bit12,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.RxIntStat.B.bit13,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.RxIntStat.B.bit14,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.RxIntStat.B.bit15,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.RxIntStat.B.bit2,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.RxIntStat.B.bit3,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.RxIntStat.B.bit4,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.RxIntStat.B.bit5,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.RxIntStat.B.bit6,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.RxIntStat.B.bit7,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.RxIntStat.B.bit8,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.RxIntStat.B.bit9,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.RxIntStat.Msg.msg0,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.RxIntStat.Msg.msg1,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.RxIntStat.Nibble.data0,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.RxIntStat.Nibble.data1,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.RxIntStat.Nibble.data2,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.RxIntStat.Nibble.data3,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.RxIntStat.Nibble.data4,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.RxIntStat.Nibble.data5,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.RxIntStat.Nibble.data6,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.RxIntStat.Nibble.data7,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.all,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.B.bit0,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.B.bit1,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.B.bit10,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.B.bit11,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.B.bit12,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.B.bit13,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.B.bit14,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.B.bit15,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.B.bit2,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.B.bit3,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.B.bit4,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.B.bit5,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.B.bit6,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.B.bit7,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.B.bit8,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.B.bit9,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.Msg.msg0,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.Msg.msg1,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.Nibble.data0,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.Nibble.data1,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.Nibble.data2,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.Nibble.data3,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.Nibble.data4,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.Nibble.data5,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.Nibble.data6,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.Nibble.data7,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.TiStampDma,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSENTSnrDataRx.TiStampRts,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSnrDataRxCrcErrMonrSt,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSnrToutErrMonrSt,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSnsrSts,Core_1,Core_1_200us,0.2,,,SSW
+SftyParkLockPosnAcqnSnsrWdiFlg,Core_1,Core_1_200us,0.2,,,SSW
 SftyInvActrMotorSpdFild,Core_1,Core_1_200us,0.2,,,SSW
 SftyInvActrSafeStCompErrMonrSt,Core_1,Core_1_200us,0.2,,,SSW
 SftyInvActrHSGateDrvrErrMonrSt,Core_1,Core_1_200us,0.2,,,SSW
'
