b'commit 5a0b3db3c0cd310a1505178a89bd71a21b1d4b19
Author: BOXU <xb-bo.xu.jv@valeo.com>
Date:   Fri Dec 10 14:01:11 2021 +0800

    $100kW-48755$ - [CR] FCT_DetmnStatorTempSw - Software Detailed Design and Unit Contruction
    
    Change-Id: I451dea9729036b7180d46499515c447eff26b68e

diff --git a/src/fw_cu/Components/Cmn/MngFlts/ErrDeb/src/ErrDeb_cfg.c b/src/fw_cu/Components/Cmn/MngFlts/ErrDeb/src/ErrDeb_cfg.c
index 386c6f787..1be575ba8 100644
--- a/src/fw_cu/Components/Cmn/MngFlts/ErrDeb/src/ErrDeb_cfg.c
+++ b/src/fw_cu/Components/Cmn/MngFlts/ErrDeb/src/ErrDeb_cfg.c
@@ -2729,7 +2729,7 @@ CONST(ErrDeb_FltCfgType, ERRDEB_CONST) ErrDebFltCfg[ERR_DEB_FLT_CNT] =
    /* INV_DC_LINK_TEMP_HWP */
    { 
       &ErrDebFltData_INV_DC_LINK_TEMP_HWP, /* Fault data */
-      NULL_PTR, /*&SftyTempEvlnDcLinkTempHwpMonrSt,*/ /* Direct pointer to monitor status */
+      &SftyTempEvlnDcLinkTempHwpMonrSt,/* Direct pointer to monitor status */
       NULL_PTR, /* Status update function used if MonrStsPtr == NULL_PTR */
       NULL_PTR, /* Monitor init function */
       FCT_ID_LOCK_INV_DC_LINK_TEMP_HWP, /* FID for fault locking */
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyErrDeb/include/SftyErrDeb_data.h b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyErrDeb/include/SftyErrDeb_data.h
index ff3f98836..65138b862 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyErrDeb/include/SftyErrDeb_data.h
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyErrDeb/include/SftyErrDeb_data.h
@@ -1804,6 +1804,16 @@ extern VAR(uint8, SFTYTEMPEVLN_VAR) SftyTempEvlnMotStatorTempRngHiErrMonrSt;
 #define SFTYTEMPEVLN_START_SEC_VAR_AREA_0_FAST_INIT_8
 #include "MemMap.h"
 
+/*! \\cvar Error monitoring state for over DC BUS or capacitor temperature; unit \'-\' */
+extern VAR(uint8, SFTYTEMPEVLN_VAR) SftyTempEvlnDcLinkTempHwpMonrSt;
+#define SFTYTEMPEVLN_STOP_SEC_VAR_AREA_0_FAST_INIT_8
+#include "MemMap.h"
+/* End: SFTYTEMPEVLN_STOP_SEC_VAR_AREA_0_FAST_INIT_8 (online) */
+
+/* Begin: SFTYTEMPEVLN_START_SEC_VAR_AREA_0_FAST_INIT_8 (online) */
+#define SFTYTEMPEVLN_START_SEC_VAR_AREA_0_FAST_INIT_8
+#include "MemMap.h"
+
 extern VAR(uint8, SFTYTEMPEVLN_VAR) SftyTempEvlnMotStatorTempRngLoErrMonrSt;
 #define SFTYTEMPEVLN_STOP_SEC_VAR_AREA_0_FAST_INIT_8
 #include "MemMap.h"
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/include/SftyReplcmt_data.h b/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/include/SftyReplcmt_data.h
index bb584f48d..30098eaa8 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/include/SftyReplcmt_data.h
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/include/SftyReplcmt_data.h
@@ -2656,6 +2656,15 @@ extern CONST(uint8, SFTYREPLCMT_CALIB) SftyReplcmtTempEvlnIgbtTRawValStiEna;
 #define SFTYREPLCMT_START_SEC_CALIB_8
 #include "MemMap.h"
 
+extern CONST(uint8, SFTYREPLCMT_CALIB) SftyReplcmtTempEvlnDcTempRawValStiEna;
+#define SFTYREPLCMT_STOP_SEC_CALIB_8
+#include "MemMap.h"
+/* End: SFTYREPLCMT_STOP_SEC_CALIB_8 (calib) */
+
+/* Begin: SFTYREPLCMT_START_SEC_CALIB_8 (calib) */
+#define SFTYREPLCMT_START_SEC_CALIB_8
+#include "MemMap.h"
+
 extern CONST(uint8, SFTYREPLCMT_CALIB) SftyReplcmtTempEvlnTempMeclSpdFildAbsStiEna;
 #define SFTYREPLCMT_STOP_SEC_CALIB_8
 #include "MemMap.h"
@@ -2710,6 +2719,24 @@ extern CONST(float32, SFTYREPLCMT_CALIB) SftyReplcmtTempEvlnTempMeclSpdFildAbs;
 #define SFTYREPLCMT_START_SEC_CALIB_32
 #include "MemMap.h"
 
+extern CONST(float32, SFTYREPLCMT_CALIB) SftyReplcmtTempEvlnDcBusBarTemp;
+#define SFTYREPLCMT_STOP_SEC_CALIB_32
+#include "MemMap.h"
+/* End: SFTYREPLCMT_STOP_SEC_CALIB_32 (calib) */
+
+/* Begin: SFTYREPLCMT_START_SEC_CALIB_32 (calib) */
+#define SFTYREPLCMT_START_SEC_CALIB_32
+#include "MemMap.h"
+
+extern CONST(float32, SFTYREPLCMT_CALIB) SftyReplcmtTempEvlnDcLinkCpTemp;
+#define SFTYREPLCMT_STOP_SEC_CALIB_32
+#include "MemMap.h"
+/* End: SFTYREPLCMT_STOP_SEC_CALIB_32 (calib) */
+
+/* Begin: SFTYREPLCMT_START_SEC_CALIB_32 (calib) */
+#define SFTYREPLCMT_START_SEC_CALIB_32
+#include "MemMap.h"
+
 extern CONST(float32, SFTYREPLCMT_CALIB) SftyReplcmtTempEvlnTempIPhaUVal;
 #define SFTYREPLCMT_STOP_SEC_CALIB_32
 #include "MemMap.h"
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/src/SftyReplcmt_data.c b/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/src/SftyReplcmt_data.c
index c178a709d..77aabc688 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/src/SftyReplcmt_data.c
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/src/SftyReplcmt_data.c
@@ -2762,6 +2762,22 @@ CONST(uint8, SFTYREPLCMT_CALIB) SftyReplcmtTempEvlnIgbtTRawValStiEna = 0U;
 #include "MemMap.h"
 /* End: SFTYREPLCMT_STOP_SEC_CALIB_8 (calib) */
 
+/* Begin: SFTYREPLCMT_START_SEC_CALIB_8 (calib) */
+#define SFTYREPLCMT_START_SEC_CALIB_8
+#include "MemMap.h"
+/*
+@@ SYMBOL = SftyReplcmtTempEvlnDcTempRawValStiEna
+@@ A2L_TYPE = PARAMETER
+@@ DATA_TYPE = UBYTE
+@@ DESCRIPTION = "Enable flag for the stimulation of DC link Temperature value"
+@@ GROUP = SftyTempEvln
+@@ END
+*/
+CONST(uint8, SFTYREPLCMT_CALIB) SftyReplcmtTempEvlnDcTempRawValStiEna = 0U;
+#define SFTYREPLCMT_STOP_SEC_CALIB_8
+#include "MemMap.h"
+/* End: SFTYREPLCMT_STOP_SEC_CALIB_8 (calib) */
+
 /* Begin: SFTYREPLCMT_START_SEC_CALIB_8 (calib) */
 #define SFTYREPLCMT_START_SEC_CALIB_8
 #include "MemMap.h"
@@ -2858,6 +2874,38 @@ CONST(float32, SFTYREPLCMT_CALIB) SftyReplcmtTempEvlnTempMeclSpdFildAbs = 0.F;
 #include "MemMap.h"
 /* End: SFTYREPLCMT_STOP_SEC_CALIB_32 (calib) */
 
+/* Begin: SFTYREPLCMT_START_SEC_CALIB_32 (calib) */
+#define SFTYREPLCMT_START_SEC_CALIB_32
+#include "MemMap.h"
+/*
+@@ SYMBOL = SftyReplcmtTempEvlnDcBusBarTemp
+@@ A2L_TYPE = PARAMETER
+@@ DATA_TYPE = FLOAT
+@@ DESCRIPTION = "Replacement value of dc bus bar temperature"
+@@ GROUP = SftyTempEvln
+@@ END
+*/
+CONST(float32, SFTYREPLCMT_CALIB) SftyReplcmtTempEvlnDcBusBarTemp = 0.F;
+#define SFTYREPLCMT_STOP_SEC_CALIB_32
+#include "MemMap.h"
+/* End: SFTYREPLCMT_STOP_SEC_CALIB_32 (calib) */
+
+/* Begin: SFTYREPLCMT_START_SEC_CALIB_32 (calib) */
+#define SFTYREPLCMT_START_SEC_CALIB_32
+#include "MemMap.h"
+/*
+@@ SYMBOL = SftyReplcmtTempEvlnDcLinkCpTemp
+@@ A2L_TYPE = PARAMETER
+@@ DATA_TYPE = FLOAT
+@@ DESCRIPTION = "Replacement value of dc bus capacitor temperature"
+@@ GROUP = SftyTempEvln
+@@ END
+*/
+CONST(float32, SFTYREPLCMT_CALIB) SftyReplcmtTempEvlnDcLinkCpTemp = 0.F;
+#define SFTYREPLCMT_STOP_SEC_CALIB_32
+#include "MemMap.h"
+/* End: SFTYREPLCMT_STOP_SEC_CALIB_32 (calib) */
+
 /* Begin: SFTYREPLCMT_START_SEC_CALIB_32 (calib) */
 #define SFTYREPLCMT_START_SEC_CALIB_32
 #include "MemMap.h"
@@ -2865,11 +2913,11 @@ CONST(float32, SFTYREPLCMT_CALIB) SftyReplcmtTempEvlnTempMeclSpdFildAbs = 0.F;
 @@ SYMBOL = SftyReplcmtTempEvlnTempIPhaUVal
 @@ A2L_TYPE = PARAMETER
 @@ DATA_TYPE = FLOAT
-@@ DESCRIPTION = "Replacement value of\xa0Safety Evaluation AC phase U current"
+@@ DESCRIPTION = "Replacement value of Safety Evaluation AC phase U current"
 @@ GROUP = SftyTempEvln
 @@ END
 */
-CONST(float32, SFTYREPLCMT_CALIB) SftyReplcmtTempEvlnTempIPhaUVal = 0U;
+CONST(float32, SFTYREPLCMT_CALIB) SftyReplcmtTempEvlnTempIPhaUVal = 0.f;
 #define SFTYREPLCMT_STOP_SEC_CALIB_32
 #include "MemMap.h"
 /* End: SFTYREPLCMT_STOP_SEC_CALIB_32 (calib) */
@@ -2881,11 +2929,11 @@ CONST(float32, SFTYREPLCMT_CALIB) SftyReplcmtTempEvlnTempIPhaUVal = 0U;
 @@ SYMBOL = SftyReplcmtTempEvlnTempIPhaVVal
 @@ A2L_TYPE = PARAMETER
 @@ DATA_TYPE = FLOAT
-@@ DESCRIPTION = "Replacement value of\xa0Safety Evaluation AC phase V current"
+@@ DESCRIPTION = "Replacement value of Safety Evaluation AC phase V current"
 @@ GROUP = SftyTempEvln
 @@ END
 */
-CONST(float32, SFTYREPLCMT_CALIB) SftyReplcmtTempEvlnTempIPhaVVal = 0U;
+CONST(float32, SFTYREPLCMT_CALIB) SftyReplcmtTempEvlnTempIPhaVVal = 0.f;
 #define SFTYREPLCMT_STOP_SEC_CALIB_32
 #include "MemMap.h"
 /* End: SFTYREPLCMT_STOP_SEC_CALIB_32 (calib) */
@@ -2897,11 +2945,11 @@ CONST(float32, SFTYREPLCMT_CALIB) SftyReplcmtTempEvlnTempIPhaVVal = 0U;
 @@ SYMBOL = SftyReplcmtTempEvlnTempIPhaWVal
 @@ A2L_TYPE = PARAMETER
 @@ DATA_TYPE = FLOAT
-@@ DESCRIPTION = "Replacement value of\xa0Safety Evaluation AC phase W current"
+@@ DESCRIPTION = "Replacement value of Safety Evaluation AC phase W current"
 @@ GROUP = SftyTempEvln
 @@ END
 */
-CONST(float32, SFTYREPLCMT_CALIB) SftyReplcmtTempEvlnTempIPhaWVal = 0U;
+CONST(float32, SFTYREPLCMT_CALIB) SftyReplcmtTempEvlnTempIPhaWVal = 0.f;
 #define SFTYREPLCMT_STOP_SEC_CALIB_32
 #include "MemMap.h"
 /* End: SFTYREPLCMT_STOP_SEC_CALIB_32 (calib) */
diff --git a/src/fw_cu/Components/Safety/Sfty_Inv/SftyTempEvln/include/SftyTempEvln_data.h b/src/fw_cu/Components/Safety/Sfty_Inv/SftyTempEvln/include/SftyTempEvln_data.h
index b9f09e0e9..be323041e 100644
--- a/src/fw_cu/Components/Safety/Sfty_Inv/SftyTempEvln/include/SftyTempEvln_data.h
+++ b/src/fw_cu/Components/Safety/Sfty_Inv/SftyTempEvln/include/SftyTempEvln_data.h
@@ -78,6 +78,9 @@ extern VAR(uint8, SFTYTEMPEVLN_VAR) SftyTempEvlnIgbtTempWRngHiErrMonrSt;
 /*! \\cvar Error monitoring state for over junction estimated temperature on phase bridge IGBT temperature, or IGBT Module Over-Temperature; unit \'-\' */
 extern VAR(uint8, SFTYTEMPEVLN_VAR) SftyTempEvlnIgbtTempHWPErrMonrSt;
 
+/*! \\cvar Error monitoring state for over DC BUS or capacitor temperature; unit \'-\' */
+extern VAR(uint8, SFTYTEMPEVLN_VAR) SftyTempEvlnDcLinkTempHwpMonrSt;
+
 /*! \\cvar Error monitoring state of temperature value range Low on IGBT PhaseU; unit \'-\' */
 extern VAR(uint8, SFTYTEMPEVLN_VAR) SftyTempEvlnIgbtTempURngLoErrMonrSt;
 
@@ -95,6 +98,10 @@ extern VAR(uint8, SFTYTEMPEVLN_VAR) SftyTempEvlnIgbtTempVPlausErrMonrSt;
 
 /*! \\cvar Error monitoring state of temperature physical value plausibility on IGBT PhaseW; unit \'-\' */
 extern VAR(uint8, SFTYTEMPEVLN_VAR) SftyTempEvlnIgbtTempWPlausErrMonrSt;
+
+/*! \\cvar Error monitoring state of temperature physical value plausibility on DC bus bar temperature; unit \'-\' */
+extern VAR(uint8, SFTYTEMPEVLN_VAR) SftyTempEvlnDcLinkTempHwpMonrSt;
+
 #define SFTYTEMPEVLN_STOP_SEC_VAR_AREA_0_FAST_INIT_8
 #include "MemMap.h"
 /* End: SFTYTEMPEVLN_STOP_SEC_VAR_AREA_0_FAST_INIT_8 (online) */
@@ -242,6 +249,13 @@ extern CONST(uint16, SFTYREPLCMT_CALIB) SftyReplcmtTempEvlnTempIGBTPhaWRawVal;
 #include "MemMap.h"
 
 extern CONST(float32, SFTYREPLCMT_CALIB) SftyReplcmtTempEvlnTempMeclSpdFildAbs;
+
+/*! \\cpar DC bus High threshold for temperature; unit \'-\' */
+extern CONST(float32, SFTYTEMPEVLN_CALIB) SftyTempEvlnDcLinkTempHWPRngPassThd;
+
+/*! \\cpar DC bus High threshold for temperature; unit \'-\' */
+extern CONST(float32, SFTYTEMPEVLN_CALIB) SftyTempEvlnDcLinkTempHWPRngFailThd;
+
 #define SFTYREPLCMT_STOP_SEC_CALIB_32
 #include "MemMap.h"
 /* End: SFTYREPLCMT_STOP_SEC_CALIB_32 (calib) */
@@ -311,6 +325,32 @@ extern CONST(uint16, SFTYREPLCMT_CALIB) SftyReplcmtTEvlnMotStatorTRawVal;
 #include "MemMap.h"
 /* End: SFTYREPLCMT_STOP_SEC_CALIB_16 (calib) */
 
+/* Begin: SFTYREPLCMT_START_SEC_CALIB_8 (calib) */
+#define SFTYREPLCMT_START_SEC_CALIB_8
+#include "MemMap.h"
+
+extern CONST(uint8, SFTYREPLCMT_CALIB) SftyReplcmtTempEvlnDcTempRawValStiEna;
+#define SFTYREPLCMT_STOP_SEC_CALIB_8
+#include "MemMap.h"
+/* End: SFTYREPLCMT_STOP_SEC_CALIB_8 (calib) */
+
+/* Begin: SFTYREPLCMT_START_SEC_CALIB_32 (calib) */
+#define SFTYREPLCMT_START_SEC_CALIB_32
+#include "MemMap.h"
+
+extern CONST(float32, SFTYREPLCMT_CALIB) SftyReplcmtTempEvlnDcBusBarTemp;
+#define SFTYREPLCMT_STOP_SEC_CALIB_32
+#include "MemMap.h"
+/* End: SFTYREPLCMT_STOP_SEC_CALIB_32 (calib) */
+
+/* Begin: SFTYREPLCMT_START_SEC_CALIB_32 (calib) */
+#define SFTYREPLCMT_START_SEC_CALIB_32
+#include "MemMap.h"
+
+extern CONST(float32, SFTYREPLCMT_CALIB) SftyReplcmtTempEvlnDcLinkCpTemp;
+#define SFTYREPLCMT_STOP_SEC_CALIB_32
+#include "MemMap.h"
+/* End: SFTYREPLCMT_STOP_SEC_CALIB_32 (calib) */
 
 /************************************************************************************************/
 
diff --git a/src/fw_cu/Components/Safety/Sfty_Inv/SftyTempEvln/src/SftyTempEvln.c b/src/fw_cu/Components/Safety/Sfty_Inv/SftyTempEvln/src/SftyTempEvln.c
index 8e68ef67e..f6c75a9a1 100644
--- a/src/fw_cu/Components/Safety/Sfty_Inv/SftyTempEvln/src/SftyTempEvln.c
+++ b/src/fw_cu/Components/Safety/Sfty_Inv/SftyTempEvln/src/SftyTempEvln.c
@@ -98,6 +98,31 @@ STATIC VAR(float32, SFTYTEMPEVLN_VAR) SftyTempEvlnIgbtTMaxPhyVal;
 /*! \\cvar Counter for Plausibility Check; unit \'-\' */
 STATIC VAR(uint32, SFTYTEMPEVLN_VAR) SftyTempEvlnPlausCntr;
 
+/*
+@@ SYMBOL = SftyTempEvlnDcBusBarTemp
+@@ A2L_TYPE = MEASURE
+@@ DATA_TYPE = FLOAT
+@@ DESCRIPTION = "DC bus bar local temperature"
+@@ GROUP = SftyTempEvln
+@@ END
+*/
+/*! \\cvar DC bus bar local Temperature Value; unit \'-\' */
+
+STATIC VAR(float32, SFTYTEMPEVLN_VAR) SftyTempEvlnDcBusBarTemp;
+
+/*
+@@ SYMBOL = SftyTempEvlnDcDcLinkCpTemp
+@@ A2L_TYPE = MEASURE
+@@ DATA_TYPE = FLOAT
+@@ DESCRIPTION = "DC bus capcitor local temperature"
+@@ GROUP = SftyTempEvln
+@@ END
+*/
+/*! \\cvar DC bus capcitor local Temperature Value; unit \'-\' */
+
+STATIC VAR(float32, SFTYTEMPEVLN_VAR) SftyTempEvlnDcDcLinkCpTemp;
+
+
 #define SFTYTEMPEVLN_AREA_0_STOP_SEC_VAR_FAST_CLEARED
 #include "MemMap.h"
 /* END:  SFTYTEMPEVLN_AREA_0_STOP_SEC_VAR_FAST_CLEARED (online) */
@@ -817,6 +842,47 @@ LOCAL_INLINE void SftyTempEvln_EvlnIgbtTemp(void)
    return;
 }
 
+/*******************************************************************************************************************/
+/*!
+ * \\fn        void SftyTempEvln_EvlnDCLinkTemp(void)
+ * \\brief     This function gets the DC link temperature value, check range
+ * \\Parent_DD SftyTempEvln_MainFunction
+ */
+/*******************************************************************************************************************/
+LOCAL_INLINE void SftyTempEvln_EvlnDCLinkTemp(void)
+{
+#ifndef SERIES_PRODUCTION
+   /* Replacement stimulus enable */
+   if(SftyReplcmtTempEvlnDcTempRawValStiEna == TRUE)
+   {
+      /* Replacement values for phase temperature */
+\t  SftyTempEvlnDcBusBarTemp = SftyReplcmtTempEvlnDcBusBarTemp;
+\t  SftyTempEvlnDcDcLinkCpTemp = SftyReplcmtTempEvlnDcLinkCpTemp;
+   }
+   else
+#endif /* SERIES_PRODUCTION */
+   {
+      /* Phase value from c2c */
+      SftyTempEvlnDcBusBarTemp = DrvCtrlC2cData.InvTempAct.DcBusBarTemp;
+\t  SftyTempEvlnDcDcLinkCpTemp = DrvCtrlC2cData.InvTempAct.DcLinkCpTemp;
+   }
+   /* Over temperature check */
+   if(  (SftyTempEvlnDcBusBarTemp > SftyTempEvlnDcLinkTempHWPRngFailThd)
+   \t  ||(SftyTempEvlnDcDcLinkCpTemp > SftyTempEvlnDcLinkTempHWPRngFailThd) )
+   {
+       SftyTempEvlnDcLinkTempHwpMonrSt = ERR_DEB_MONR_STS_FAILED;
+   }
+   else if(  (SftyTempEvlnDcBusBarTemp <= SftyTempEvlnDcLinkTempHWPRngPassThd)
+   \t       &&(SftyTempEvlnDcDcLinkCpTemp <= SftyTempEvlnDcLinkTempHWPRngPassThd))
+   {
+       SftyTempEvlnDcLinkTempHwpMonrSt = ERR_DEB_MONR_STS_PASSED;
+   }
+   else
+   {
+       /* Do nothing */
+   }
+}
+
 
 /*================== [definition of global functions] =======================*/
 /* ****************************** AREA CMN ********************************* */
@@ -847,8 +913,9 @@ FUNC(void, SFTY_TEMP_EVLN_CODE) SftyTempEvln_MainFunction(void)
    SftyTempEvln_EvlnMotStatorT();
    /* Evaluate IGBT temperature */
    SftyTempEvln_EvlnIgbtTemp();
-
-
+   /* Evaluate DC bus bar temperature */
+   SftyTempEvln_EvlnDCLinkTemp();
+   
 #if defined(SWIT_IT_Active)
    SWIT_SftyTempEvln_MainFunction_EndHook();
 #endif
@@ -886,6 +953,7 @@ FUNC(void, SFTY_TEMP_EVLN_CODE) SftyTempEvln_Init(void)
    SftyTempEvlnIgbtTempVPlausErrMonrSt = ERR_DEB_MONR_STS_INACTIVE;
    SftyTempEvlnIgbtTempWPlausErrMonrSt = ERR_DEB_MONR_STS_INACTIVE;
    SftyTempEvlnIgbtTempHWPErrMonrSt = ERR_DEB_MONR_STS_INACTIVE;
+   SftyTempEvlnDcLinkTempHwpMonrSt  = ERR_DEB_MONR_STS_INACTIVE;
 
    SftyC2cData. MotStatorTVal = 0.f;
    SftyC2cData. MotStatorTAvl = 0.f;
@@ -903,6 +971,8 @@ FUNC(void, SFTY_TEMP_EVLN_CODE) SftyTempEvln_Init(void)
    SftyTempEvlnIGBTPhyVal[SYSDEF_PHA_W] = 0.f;
    SftyTempEvlnIgbtTMaxPhyVal = 0.f;
    SftyTempEvlnPlausCntr = 0U;
+   SftyTempEvlnDcBusBarTemp = 0.f;
+   SftyTempEvlnDcDcLinkCpTemp = 0.f;
 
    return;
 }
diff --git a/src/fw_cu/Components/Safety/Sfty_Inv/SftyTempEvln/src/SftyTempEvln_data.c b/src/fw_cu/Components/Safety/Sfty_Inv/SftyTempEvln/src/SftyTempEvln_data.c
index 30b46cd4b..5a7dcd9a3 100644
--- a/src/fw_cu/Components/Safety/Sfty_Inv/SftyTempEvln/src/SftyTempEvln_data.c
+++ b/src/fw_cu/Components/Safety/Sfty_Inv/SftyTempEvln/src/SftyTempEvln_data.c
@@ -161,6 +161,18 @@ VAR(uint8, SFTYTEMPEVLN_VAR) SftyTempEvlnIgbtTempWRngHiErrMonrSt = 0U;
 /*! \\cvar Error monitoring state for over junction estimated temperature on phase bridge IGBT temperature, or IGBT Module Over-Temperature; unit \'-\' */
 VAR(uint8, SFTYTEMPEVLN_VAR) SftyTempEvlnIgbtTempHWPErrMonrSt = 0U;
 
+/*
+@@ SYMBOL = SftyTempEvlnDcLinkTempHwpMonrSt
+@@ A2L_TYPE = MEASURE
+@@ DATA_TYPE = UBYTE [0 ... 2]
+@@ CONVERSION = TABLE 0 "INACTIVE" 1 "PASSED" 2 "FAILED"
+@@ DESCRIPTION = "Error monitoring state for over DC BUS or capacitor temperature"
+@@ GROUP = SftyTempEvln
+@@ END
+*/
+/*! \\cvar Error monitoring state for over DC BUS or capacitor temperature; unit \'-\' */
+VAR(uint8, SFTYTEMPEVLN_VAR) SftyTempEvlnDcLinkTempHwpMonrSt = 0U;
+
 /*
 @@ SYMBOL = SftyTempEvlnIgbtTempURngLoErrMonrSt
 @@ A2L_TYPE = MEASURE
@@ -232,6 +244,7 @@ VAR(uint8, SFTYTEMPEVLN_VAR) SftyTempEvlnIgbtTempVPlausErrMonrSt = 0U;
 */
 /*! \\cvar Error monitoring state of temperature physical value plausibility on IGBT PhaseW; unit \'-\' */
 VAR(uint8, SFTYTEMPEVLN_VAR) SftyTempEvlnIgbtTempWPlausErrMonrSt = 0U;
+
 #define SFTYTEMPEVLN_STOP_SEC_VAR_AREA_0_FAST_INIT_8
 #include "MemMap.h"
 /* End: SFTYTEMPEVLN_STOP_SEC_VAR_AREA_0_FAST_INIT_8 (online) */
@@ -303,6 +316,27 @@ CONST(float32, SFTYTEMPEVLN_CALIB) SftyTempEvlnEmSpdRngThd =  1500.f;
 /*! \\cpar NTC Temperature threshold for plausibility check; unit \'-\' */
 CONST(float32, SFTYTEMPEVLN_CALIB) SftyTempEvlnIgbtTempPlauRngThd =  15.f;
 
+/*
+@@ SYMBOL = SftyTempEvlnDcLinkTempHWPRngPassThd
+@@ A2L_TYPE = PARAMETER
+@@ DATA_TYPE = FLOAT
+@@ DESCRIPTION = "DC bus High pass threshold for temperature"
+@@ GROUP = SftyTempEvln
+@@ END
+*/
+/*! \\cpar DC bus High threshold for temperature; unit \'-\' */
+CONST(float32, SFTYTEMPEVLN_CALIB) SftyTempEvlnDcLinkTempHWPRngPassThd =  110.f;
+
+/*
+@@ SYMBOL = SftyTempEvlnDcLinkTempHWPRngFailThd
+@@ A2L_TYPE = PARAMETER
+@@ DATA_TYPE = FLOAT
+@@ DESCRIPTION = "DC bus High fail threshold for temperature"
+@@ GROUP = SftyTempEvln
+@@ END
+*/
+/*! \\cpar DC bus High threshold for temperature; unit \'-\' */
+CONST(float32, SFTYTEMPEVLN_CALIB) SftyTempEvlnDcLinkTempHWPRngFailThd =  115.f;
 
 #define SFTYTEMPEVLN_STOP_SEC_CALIB_32
 #include "MemMap.h"
diff --git a/src/fw_cu/build/a2l/Measurements-to-Timeslices-Mapping.csv b/src/fw_cu/build/a2l/Measurements-to-Timeslices-Mapping.csv
index fb96ba218..481e18415 100644
--- a/src/fw_cu/build/a2l/Measurements-to-Timeslices-Mapping.csv
+++ b/src/fw_cu/build/a2l/Measurements-to-Timeslices-Mapping.csv
@@ -6666,6 +6666,9 @@ SftySysInitPwrOnRstFlg,Core_1,Core_1_200us,0.2,,,SSW
 SftySysInitPwrOnRstHwFlg,Core_1,Core_1_200us,0.2,,,SSW
 SftySysInitResetStatusVal,Core_1,Core_1_200us,0.2,,,SSW
 SftySysInitRstAftPwrOnCntr,Core_1,Core_1_200us,0.2,,,SSW
+SftyTempEvlnDcBusBarTemp,Core_1,Core_1_200us,0.2,,,SSW
+SftyTempEvlnDcDcLinkCpTemp,Core_1,Core_1_200us,0.2,,,SSW
+SftyTempEvlnDcLinkTempHwpMonrSt,Core_1,Core_1_200us,2,,,SSW
 SftyTempEvlnIGBTPhyVal,Core_1,Core_1_200us,0.2,,,SSW
 SftyTempEvlnIgbtTempHWPErrMonrSt,Core_1,Core_1_200us,0.2,,,SSW
 SftyTempEvlnIgbtTempUPlausErrMonrSt,Core_1,Core_1_200us,0.2,,,SSW
'
