b'commit b69483ba27ac242663f7f53d7185b07abab07d88
Author: Neehara ODANKY <neehara.odanky.jv.ext@valeo.com>
Date:   Thu Sep 23 10:02:21 2021 +0530

    $100kW-40665$ - SWE.3.2 - FCT_ExtSelfProtn - SSW - SftyHvDcU SW Unit Implementation
    
    Change-Id: I48176792550d4459cc551018d59532256af2afc8

diff --git a/src/fw_cu/Components/Cmn/Shared/MemMap/include/SftyNextGen_MemMap.h b/src/fw_cu/Components/Cmn/Shared/MemMap/include/SftyNextGen_MemMap.h
index 731ed5bf1..06ad7ba34 100644
--- a/src/fw_cu/Components/Cmn/Shared/MemMap/include/SftyNextGen_MemMap.h
+++ b/src/fw_cu/Components/Cmn/Shared/MemMap/include/SftyNextGen_MemMap.h
@@ -3253,6 +3253,16 @@
    #include "BasicNextGen_MemMap.h"   
 
 /* SftyDcEvln ************************************************************** */
+#elif (defined SFTYDCEVLN_START_SEC_CALIB_8)
+   #undef SFTYDCEVLN_START_SEC_CALIB_8
+   #define SAFETY_START_SEC_CALIB
+   #include "BasicNextGen_MemMap.h"
+
+#elif (defined SFTYDCEVLN_STOP_SEC_CALIB_8)
+   #undef SFTYDCEVLN_STOP_SEC_CALIB_8
+   #define SAFETY_STOP_SEC_CALIB
+   #include "BasicNextGen_MemMap.h"
+
 #elif (defined SFTYDCEVLN_START_SEC_CALIB_16)
    #undef SFTYDCEVLN_START_SEC_CALIB_16
    #define SAFETY_START_SEC_CALIB
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eFpga/src/SftyE2eFpga.c b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eFpga/src/SftyE2eFpga.c
index 55f5e42d3..fe7afedf4 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eFpga/src/SftyE2eFpga.c
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eFpga/src/SftyE2eFpga.c
@@ -964,7 +964,7 @@ LOCAL_INLINE void SftyE2eFpga_UpdtC2cData(void)
    SftyC2cData.FpgaTxDataFltBReinitSt.B.OverUndCurW    = SftyAcEvlnSetOverCurrPhaReinitSt[SYSDEF_PHA_W];
 
    SftyC2cData.FpgaTxDataFltAReinitSt.B.MeasCohernc    = SftyAcEvlnSetPlausReinitSt | SftyHvDcUEvlnSetPlausReinitSt;
-   SftyC2cData.FpgaTxDataFltBReinitSt.B.OvVbat         = SftyHvDcUEvlnSetOverVltVBatReinitSt;
+   SftyC2cData.FpgaTxDataFltBReinitSt.B.OvVbat         = SftyHvDcUEvlnSetOverVoltReinitSt;
 
    SftyC2cData.FpgaTxDataFltBReinitSt.B.IgbtMidPointW  = SftyInvActrSetMidPointPhaWReinitSt;
    SftyC2cData.FpgaTxDataFltBReinitSt.B.IgbtMidPointV  = SftyInvActrSetMidPointPhaVReinitSt;
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/include/SftyReplcmt_data.h b/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/include/SftyReplcmt_data.h
index e92402096..b55aa1549 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/include/SftyReplcmt_data.h
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/include/SftyReplcmt_data.h
@@ -2724,4 +2724,23 @@ extern CONST(float32, SFTYREPLCMT_CALIB) SftyReplcmtTempEvlnTempIPhaWVal;
 #include "MemMap.h"
 /* End: SFTYREPLCMT_STOP_SEC_CALIB_32 (calib) */
 
+/* Begin: SFTYREPLCMT_START_SEC_CALIB_8 (calib) */
+#define SFTYREPLCMT_START_SEC_CALIB_8
+#include "MemMap.h"
+
+extern CONST(uint8, SFTYREPLCMT_CALIB) SftyReplcmtE2eFpgaOverVoltVBatFltStsStiEna;
+#define SFTYREPLCMT_STOP_SEC_CALIB_8
+#include "MemMap.h"
+/* End: SFTYREPLCMT_STOP_SEC_CALIB_8 (calib) */
+
+/* Begin: SFTYREPLCMT_START_SEC_CALIB_8 (calib) */
+#define SFTYREPLCMT_START_SEC_CALIB_8
+#include "MemMap.h"
+
+extern CONST(boolean, SFTYDCEVLN_CALIB) SftyReplcmtE2eFpgaOverVoltVBatFltSts;
+#define SFTYREPLCMT_STOP_SEC_CALIB_8
+#include "MemMap.h"
+/* End: SFTYREPLCMT_STOP_SEC_CALIB_8 (calib) */
+
+
 #endif
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/src/SftyReplcmt_data.c b/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/src/SftyReplcmt_data.c
index 69609ef79..849800de2 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/src/SftyReplcmt_data.c
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/src/SftyReplcmt_data.c
@@ -2889,3 +2889,33 @@ CONST(float32, SFTYREPLCMT_CALIB) SftyReplcmtTempEvlnTempIPhaWVal = 0U;
 #define SFTYREPLCMT_STOP_SEC_CALIB_32
 #include "MemMap.h"
 /* End: SFTYREPLCMT_STOP_SEC_CALIB_32 (calib) */
+
+/* Begin: SFTYREPLCMT_START_SEC_CALIB_8 (calib) */
+#define SFTYREPLCMT_START_SEC_CALIB_8
+#include "MemMap.h"
+/*
+@@ SYMBOL = SftyReplcmtE2eFpgaOverVoltVBatFltStsStiEna
+@@ A2L_TYPE = PARAMETER
+@@ DATA_TYPE = UBYTE
+@@ DESCRIPTION = "HvDcU(VBat) over voltage fault status stimulus enable"
+@@ END
+*/
+CONST(uint8, SFTYREPLCMT_CALIB) SftyReplcmtE2eFpgaOverVoltVBatFltStsStiEna = FALSE;
+#define SFTYREPLCMT_STOP_SEC_CALIB_8
+#include "MemMap.h"
+/* End: SFTYREPLCMT_STOP_SEC_CALIB_8 (calib) */
+
+/* Begin: SFTYREPLCMT_START_SEC_CALIB_8 (calib) */
+#define SFTYREPLCMT_START_SEC_CALIB_8
+#include "MemMap.h"
+/*
+@@ SYMBOL = SftyReplcmtE2eFpgaOverVoltVBatFltSts
+@@ A2L_TYPE = PARAMETER
+@@ DATA_TYPE = UBYTE
+@@ DESCRIPTION = "Replacement value of HvDcU(VBat) over voltage fault status"
+@@ END
+*/
+CONST(boolean, SFTYDCEVLN_CALIB) SftyReplcmtE2eFpgaOverVoltVBatFltSts = FALSE;
+#define SFTYREPLCMT_STOP_SEC_CALIB_8
+#include "MemMap.h"
+/* End: SFTYREPLCMT_STOP_SEC_CALIB_8 (calib) */
diff --git a/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvDcUEvln/include/SftyHvDcUEvln.h b/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvDcUEvln/include/SftyHvDcUEvln.h
index 5694d8c7b..0637196d8 100644
--- a/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvDcUEvln/include/SftyHvDcUEvln.h
+++ b/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvDcUEvln/include/SftyHvDcUEvln.h
@@ -86,6 +86,7 @@ extern FUNC(void, SFTY_DC_EVLN_CODE) SftyHvDcUEvln_InitArea2(void);
 #include "MemMap.h"
 
 extern FUNC(void, SFTY_DC_EVLN_CODE) SftyHvDcUEvln_MainFunctionAreaCmn(void);
+extern FUNC(void, SFTY_DC_EVLN_CODE) SftyHvDcUEvln_OverVoltReinitMonrData(void);
 
 
 #define SFTY_DC_EVLN_AREA_CMN_STOP_SEC_CODE_FAST
diff --git a/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvDcUEvln/include/SftyHvDcUEvln_data.h b/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvDcUEvln/include/SftyHvDcUEvln_data.h
index e5f676b14..abb37d02e 100644
--- a/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvDcUEvln/include/SftyHvDcUEvln_data.h
+++ b/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvDcUEvln/include/SftyHvDcUEvln_data.h
@@ -266,19 +266,6 @@ extern VAR(uint8, SFTYDCEVLN_VAR) SftyHvDcUEvlnCtrlBdE2eFpgaRxCrcErrMonrSt;
 /* End: SFTYDCEVLN_STOP_SEC_VAR_AREA_2_FAST_INIT_8 (online) */
 
 
-/* Begin: SFTYDCEVLN_START_SEC_VAR_AREA_2_FAST_INIT_8 (online) */
-#define SFTYDCEVLN_START_SEC_VAR_AREA_2_FAST_INIT_8
-#include "MemMap.h"
-
-extern VAR(uint8, SFTYDCEVLN_VAR) SftyHvDcUEvlnOvHWErrMonrSt;
-
-#define SFTYDCEVLN_STOP_SEC_VAR_AREA_2_FAST_INIT_8
-#include "MemMap.h"
-/* End: SFTYDCEVLN_STOP_SEC_VAR_AREA_2_FAST_INIT_8 (online) */
-
-
-
-
 /* Begin: SFTYDCEVLN_START_SEC_VAR_AREA_2_FAST_INIT_8 (online) */
 #define SFTYDCEVLN_START_SEC_VAR_AREA_2_FAST_INIT_8
 #include "MemMap.h"
@@ -330,7 +317,7 @@ extern VAR(boolean, SFTYDCEVLN_VAR) SftyHvDcUEvlnSetPlausReinitSt;
 #define SFTYDCEVLN_START_SEC_VAR_AREA_CMN_FAST_INIT_8
 #include "MemMap.h"
 
-extern VAR(boolean, SFTYDCEVLN_VAR) SftyHvDcUEvlnSetOverVltVBatReinitSt;
+extern VAR(boolean, SFTYDCEVLN_VAR) SftyHvDcUEvlnSetOverVoltReinitSt;
 
 #define SFTYDCEVLN_STOP_SEC_VAR_AREA_CMN_FAST_INIT_8
 #include "MemMap.h"
@@ -358,6 +345,27 @@ extern VAR(uint8, SFTYDCEVLN_VAR) SftyHvDcUEvlnPlausErrMonrSt;
 #include "MemMap.h"
 /* End: SFTYDCEVLN_STOP_SEC_VAR_AREA_CMN_FAST_INIT_8 (online) */
 
+/* Begin: SFTYDCEVLN_START_SEC_VAR_AREA_CMN_FAST_INIT_8 (online) */
+#define SFTYDCEVLN_START_SEC_VAR_AREA_CMN_FAST_INIT_8
+#include "MemMap.h"
+
+extern VAR(boolean, SFTYDCEVLN_VAR) SftyHvDcUEvlnFpgaOverVoltVBatFltSts;
+
+#define SFTYDCEVLN_STOP_SEC_VAR_AREA_CMN_FAST_INIT_8
+#include "MemMap.h"
+/* End: SFTYDCEVLN_STOP_SEC_VAR_AREA_CMN_FAST_INIT_8 (online) */
+
+
+/* Begin: SFTYDCEVLN_START_SEC_VAR_AREA_CMN_FAST_INIT_8 (online) */
+#define SFTYDCEVLN_START_SEC_VAR_AREA_CMN_FAST_INIT_8
+#include "MemMap.h"
+
+extern VAR(uint8, SFTYDCEVLN_VAR) SftyHvDcUEvlnOvHWErrMonrSt;
+
+#define SFTYDCEVLN_STOP_SEC_VAR_AREA_CMN_FAST_INIT_8
+#include "MemMap.h"
+/* End: SFTYDCEVLN_STOP_SEC_VAR_AREA_CMN_FAST_INIT_8 (online) */
+
 
 /* ********************* SEC_VAR_AREA_1_FAST_INIT_16 ********************* */
 
@@ -489,6 +497,15 @@ extern CONST(float32, SFTYDCEVLN_CALIB) SftyHvDcUEvlnUdcOvRstThd;
 /* End: SFTYDCEVLN_STOP_SEC_CALIB_32 (calib) */
 
 
+/* Begin: SFTYDCEVLN_START_SEC_CALIB_8 (online) */
+#define SFTYDCEVLN_START_SEC_CALIB_8
+#include "MemMap.h"
+
+extern CONST(uint8, SFTYDCEVLN_VAR) SftyHvDcUEvlnOVRstRetryMaxThd;
+
+#define SFTYDCEVLN_STOP_SEC_CALIB_8
+#include "MemMap.h"
+/* End: SFTYDCEVLN_STOP_SEC_CALIB_8 (online) */
 
 
 /* Begin: SFTYPRODDATAUDCMEASEXTADC_START_SEC_CALIB_32 (calib struct) */
@@ -658,7 +675,23 @@ extern CONST(boolean, SFTYDCEVLN_VAR) SftyReplcmtHvDcUEvlnPlausHWFltSts;
 #include "MemMap.h"
 /* End: SFTYREPLCMT_STOP_SEC_CALIB_8 (calib) */
 
+/* Begin: SFTYREPLCMT_START_SEC_CALIB_8 (calib) */
+#define SFTYREPLCMT_START_SEC_CALIB_8
+#include "MemMap.h"
+
+extern CONST(uint8, SFTYREPLCMT_CALIB) SftyReplcmtE2eFpgaOverVoltVBatFltStsStiEna;
+#define SFTYREPLCMT_STOP_SEC_CALIB_8
+#include "MemMap.h"
+/* End: SFTYREPLCMT_STOP_SEC_CALIB_8 (calib) */
+
+/* Begin: SFTYREPLCMT_START_SEC_CALIB_8 (calib) */
+#define SFTYREPLCMT_START_SEC_CALIB_8
+#include "MemMap.h"
 
+extern CONST(boolean, SFTYDCEVLN_CALIB) SftyReplcmtE2eFpgaOverVoltVBatFltSts;
+#define SFTYREPLCMT_STOP_SEC_CALIB_8
+#include "MemMap.h"
+/* End: SFTYREPLCMT_STOP_SEC_CALIB_8 (calib) */
 
 /* ********************* End Of SEC_CALIB_8 ********************* */
 
@@ -687,16 +720,6 @@ extern CONST(uint16, SFTYDCEVLN_CALIB) SftyReplcmtHvDcUEvlnCtrlBdRawVal;
 #include "MemMap.h"
 /* End: SFTYDCEVLN_STOP_SEC_CALIB_16 (calib) */
 
-/* Begin: SFTYDCEVLN_START_SEC_CALIB_16 (calib) */
-#define SFTYDCEVLN_START_SEC_CALIB_16
-#include "MemMap.h"
-
-extern CONST(uint16, SFTYDCEVLN_CALIB) SftyReplcmtE2eFpgaOverVoltVBatFltSts;
-
-#define SFTYDCEVLN_STOP_SEC_CALIB_16
-#include "MemMap.h"
-/* End: SFTYDCEVLN_STOP_SEC_CALIB_16 (calib) */
-
 
 /* Begin: SFTYDCEVLN_START_SEC_CALIB_16 (calib) */
 #define SFTYDCEVLN_START_SEC_CALIB_16
diff --git a/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvDcUEvln/src/SftyHvDcUEvln.c b/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvDcUEvln/src/SftyHvDcUEvln.c
index b3a9c37eb..05ba7339a 100644
--- a/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvDcUEvln/src/SftyHvDcUEvln.c
+++ b/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvDcUEvln/src/SftyHvDcUEvln.c
@@ -94,24 +94,37 @@ STATIC VAR(uint8, SFTYDCEVLN_VAR) SftyHvDcUEvlnCtrlBdRngErrCyclCntr = 0U;
 
 #endif
 
+/* Begin: SFTYDCEVLN_START_SEC_VAR_AREA_CMN_FAST_INIT_16 (online) */
+#define SFTYDCEVLN_START_SEC_VAR_AREA_CMN_FAST_INIT_16
+#include "MemMap.h"
 /*
-@@ SYMBOL = SftyHvDcUEvlnReinit_TimeCounter
+@@ SYMBOL = SftyHvDcUEvlnOVRstTimeCounter
 @@ A2L_TYPE = MEASURE
-@@ DATA_TYPE = UBYTE
-@@ DESCRIPTION = "Cyclic Countor used by Driver Board"
+@@ DATA_TYPE = UWORD
+@@ DESCRIPTION = "Time counter for HVDC over voltage fault reset"
 @@ GROUP = SFTYDCEVLN_VAR
 @@ END
 */
-STATIC VAR(uint8, SFTYDCEVLN_VAR) SftyHvDcUEvlnReinit_TimeCounter = 0U;
+STATIC VAR(uint16, SFTYDCEVLN_VAR) SftyHvDcUEvlnOVRstTimeCounter = 0U;
+/* Begin: SFTYDCEVLN_STOP_SEC_VAR_AREA_CMN_FAST_INIT_16 (online) */
+#define SFTYDCEVLN_STOP_SEC_VAR_AREA_CMN_FAST_INIT_16
+#include "MemMap.h"
+
+/* Begin: SFTYDCEVLN_START_SEC_VAR_AREA_CMN_FAST_INIT_8 (online) */
+#define SFTYDCEVLN_START_SEC_VAR_AREA_CMN_FAST_INIT_8
+#include "MemMap.h"
 /*
-@@ SYMBOL = SftyHvDcUEvlnReinit_Counter
+@@ SYMBOL = SftyHvDcUEvlnOVRstRetryCount
 @@ A2L_TYPE = MEASURE
 @@ DATA_TYPE = UBYTE
-@@ DESCRIPTION = "Cyclic Countor used by Driver Board"
+@@ DESCRIPTION = "HVDC over voltage fault reset retry count"
 @@ GROUP = SFTYDCEVLN_VAR
 @@ END
 */
-STATIC VAR(uint8, SFTYDCEVLN_VAR) SftyHvDcUEvlnReinit_Counter = 0U;
+STATIC VAR(uint8, SFTYDCEVLN_VAR) SftyHvDcUEvlnOVRstRetryCount = 0U;
+#define SFTYDCEVLN_STOP_SEC_VAR_AREA_CMN_FAST_INIT_8
+#include "MemMap.h"
+/* End: SFTYDCEVLN_STOP_SEC_VAR_AREA_CMN_FAST_INIT_8 (online) */
 
 /*================== [definition of local functions] ========================*/
 
@@ -365,8 +378,8 @@ LOCAL_INLINE void SftyHvDcUEvln_ScaUdcDrvBdVal(void)
    udcVal = MLIB_F32S32((sint32)SftyHvDcUEvlnDrvBdRawVal);
 
    /* PhyValue = (RawValue + Offset) * GainValue */
-   udcVal += SftyHvDcUMeasProdData.Offset;
-   udcVal *= SftyHvDcUMeasProdData.Gain;
+   udcVal = (float32)(udcVal + SftyHvDcUMeasProdData.Offset);
+   udcVal = (float32)(udcVal * SftyHvDcUMeasProdData.Gain);
    
    SftyHvDcUEvlnDrvBdUdcVal = udcVal;
    
@@ -397,8 +410,8 @@ LOCAL_INLINE void SftyHvDcUEvln_ScaUdcCtrlBdVal(void)
    udcVal = MLIB_F32S32((sint32)SftyHvDcUEvlnCtrlBdRawVal);
 
    /* PhyValue = (RawValue + Offset) * GainValue */
-   udcVal += SftyExtAdcHvDcUMeasProdData.Offset;
-   udcVal *= SftyExtAdcHvDcUMeasProdData.Gain;
+   udcVal = (float32)(udcVal + SftyExtAdcHvDcUMeasProdData.Offset);
+   udcVal = (float32)(udcVal * SftyExtAdcHvDcUMeasProdData.Gain);
    
    SftyHvDcUEvlnCtrlBdUdcVal = udcVal;
    
@@ -408,26 +421,24 @@ LOCAL_INLINE void SftyHvDcUEvln_ScaUdcCtrlBdVal(void)
 
 /******************************************************************/
 /*!
- * \\fn        void SftyHvDcUEvln_GetDataForOvRst(void)
- * \\brief     This function copys the data provided by SftyE2eFpga()
- *            to local variable. ( Raw value )
- * \\Parent_DD SftyHvDcUEvln_MainFunctionArea2
+ * \\fn        void SftyHvDcUEvln_GetHvDcUDataForOvRst(void)
+ * \\brief     This function provides physical value of HvDc voltage received from driver board
+ * \\param[in]  None
+ * \\param[out] None
+ * \\return     None
+ * \\Parent_DD SftyHvDcUEvln_MainFunctionAreaCmn
  */
 /******************************************************************/
-LOCAL_INLINE void SftyHvDcUEvln_GetDataForOvRst(void)
+LOCAL_INLINE void SftyHvDcUEvln_GetHvDcUDataForOvRst(void)
 {
-   /* ******** Variables declaration *********** */
-\t  
    /* ************* Source code **************** */
-   /* Read raw value */
 
+   /* Calculate physical value of HvDcU from driver board */
    SftyHvDcUEvln_ScaUdcDrvBdVal();
-   SftyHvDcUEvln_ScaUdcCtrlBdVal();
 
    return;
 }
 
-
 /******************************************************************/
 /*!
  * \\fn        SftyHvDcUEvlnRngErrMonStType SftyHvDcUEvln_ChkRngDrvBd(void)
@@ -697,84 +708,89 @@ LOCAL_INLINE void SftyHvDcUEvln_UpdCtrlBdErrMonrSt(void)
 
 /******************************************************************/
 /*!
- * \\fn      void SftyAcEvln_AcOCReinitMonrData(void)
- * \\brief   This API-Function Reinitialize AC over current fault that detect in FPGA.
- * \\        It provideds a function interface that used by ErrDeb_Cfg.c
+ * \\fn        void SftyHvDcUEvln_HvDcUOverVoltFltRst(void)
+ * \\brief     This function handles HvDc over voltage fault reset
+ * \\param[in]  None
+ * \\param[out] None
+ * \\return     None
+ * \\Parent_DD SftyHvDcUEvln_MainFunctionAreaCmn
  */
 /******************************************************************/
-LOCAL_INLINE void SftyHvDcUEvln_OvReinitMonrData(void)
+LOCAL_INLINE void SftyHvDcUEvln_HvDcUOverVoltFltRst(void)
 {
-   /* Output Variables */
-   if(SftyHvDcUEvlnSetOverVltVBatReinitSt == TRUE)
+  /* ******** Variables declaration *********** */
+
+  /* ************* Source code **************** */
+
+#ifndef SERIES_PRODUCTION
+
+   /* HvDcU(VBat) over voltage fault status stimulus is enabled */
+   if (SftyReplcmtE2eFpgaOverVoltVBatFltStsStiEna == TRUE)
    {
-        SftyHvDcUEvlnSetOverVltVBatReinitSt = FALSE;
-    }
+      /* Get the replacement value of HvDcU(VBat) over voltage fault status */
+      SftyHvDcUEvlnFpgaOverVoltVBatFltSts = SftyReplcmtE2eFpgaOverVoltVBatFltSts;
+   }
    else
+#endif
    {
-        SftyHvDcUEvlnSetOverVltVBatReinitSt = TRUE;
-    }
-   return;
-}
-
+      /* Get HvDcU(VBat) over voltage fault status from SftyE2eFpga*/
+      SftyHvDcUEvlnFpgaOverVoltVBatFltSts = SftyE2eFpgaOverVoltVBatFltSts;
+   }
 
-/******************************************************************/
-/*!
- * \\fn        void SftyHvDcUEvln_OVRst(uint8 idxPwrUnit)
- * \\brief     
- * \\param     [in] idxPwrUnit - Number of phase sets (1 or 2)
- * \\Parent_DD 
- */
-/******************************************************************/
-LOCAL_INLINE void SftyHvDcUEvln_OVRst(uint8 idxPwrUnit)
-{
-\t   /* ******** Variables declaration *********** */
+   /* HvDcU(VBat) over voltage fault status indicates FAULT */
+   if(SftyHvDcUEvlnFpgaOverVoltVBatFltSts == FALSE)
+   {
+      /* HvDc OV HW Error present*/
+      SftyHvDcUEvlnOvHWErrMonrSt = ERR_DEB_MONR_STS_FAILED;
+
+      /* HvDc voltage is less than threshold and OV fault reset try count is within allowed limit*/
+\t\tif((SftyHvDcUEvlnDrvBdUdcVal < SftyHvDcUEvlnUdcOvRstThd)
+\t\t\t&& (SftyHvDcUEvlnOVRstRetryCount < SftyHvDcUEvlnOVRstRetryMaxThd))
+\t\t{
+\t\t  /* Increment HVDC over voltage reset time counter */
+         SftyHvDcUEvlnOVRstTimeCounter++;
+
+         /* HVDC over voltage reset time counter reached the threshold (200ms) */
+\t\t   if(SftyHvDcUEvlnOVRstTimeCounter > SftyHvDcUEvlnOvRstTi)
+\t\t   {
+\t\t\t   /* Clear HVDC over voltage reset time counter for next round check */
+\t\t\t   SftyHvDcUEvlnOVRstTimeCounter = 0u;
+\t\t\t\t\t
+\t\t\t   /* Increment HVDC OV fault reset retry count */
+\t\t\t   SftyHvDcUEvlnOVRstRetryCount++;
 
-\t   /* ************* Source code **************** */
-       /* check if over voltage is in error status */
-#ifndef SERIES_PRODUCTION
-\t   if(SftyReplcmtE2eFpgaOverVoltVBatFltSts == FALSE)
-#else
-       if(SftyE2eFpgaOverVoltVBatFltSts == FALSE)
-#endif
-       {
-            /* check if voltage is in fault reinit  */
-\t\t\tif( (SftyHvDcUEvlnDrvBdUdcVal < SftyHvDcUEvlnUdcOvRstThd)
-\t\t\t\t&& (SftyHvDcUEvlnCtrlBdUdcVal < SftyHvDcUEvlnUdcOvRstThd)
-\t\t\t\t&& (SftyHvDcUEvlnReinit_Counter < MaxACOCInitTime)
-\t\t\t\t)
-\t\t\t{
-\t\t\t\t/* wait for calibrated time */
-               SftyHvDcUEvlnReinit_TimeCounter++;
-\t\t\t   if(SftyHvDcUEvlnReinit_TimeCounter >= SftyHvDcUEvlnOvRstTi)
+\t\t\t   /* Toggle reinit status */
+\t\t\t   if(SftyHvDcUEvlnSetOverVoltReinitSt == TRUE)
 \t\t\t   {
-\t\t\t        /* clear time counter for next round check */
-\t\t\t        SftyHvDcUEvlnReinit_TimeCounter = 0u;
-\t\t\t\t\t
-\t\t\t\t\t/* increase counter of fault rest times */
-\t\t\t\t\tSftyHvDcUEvlnReinit_Counter++;
-\t\t\t\t\t/* toggle reinit status */
-\t\t\t\t\tSftyHvDcUEvln_OvReinitMonrData();
-                    /* set HW error monitor status */
-\t\t\t\t\tSftyHvDcUEvlnOvHWErrMonrSt = ERR_DEB_MONR_STS_PASSED;
+\t\t\t      SftyHvDcUEvlnSetOverVoltReinitSt = FALSE;
 \t\t\t   }
 \t\t\t   else
 \t\t\t   {
-                   SftyHvDcUEvlnOvHWErrMonrSt = ERR_DEB_MONR_STS_FAILED;
-\t\t\t\t   /*SftyHvDcUEvlnSetOverVltVBatReinitSt = FALSE;*/
+\t\t\t      SftyHvDcUEvlnSetOverVoltReinitSt = TRUE;
 \t\t\t   }
 \t\t\t}
 \t\t\telse
 \t\t\t{
-                 SftyHvDcUEvlnOvHWErrMonrSt = ERR_DEB_MONR_STS_FAILED;
-\t\t\t\t /*SftyHvDcUEvlnSetOverVltVBatReinitSt = FALSE;*/
+\t\t\t   /* Do nothing */
 \t\t\t}
-\t   }
-\t   else
-\t   {
-           SftyHvDcUEvlnReinit_Counter = 0u;
-\t\t   SftyHvDcUEvlnSetOverVltVBatReinitSt = FALSE;
-\t\t   SftyHvDcUEvlnOvHWErrMonrSt = ERR_DEB_MONR_STS_PASSED;
-\t   }
+       }
+\t\t else
+\t\t {
+\t\t    /* Clear HVDC over voltage reset time counter */
+\t\t    SftyHvDcUEvlnOVRstTimeCounter = 0u;
+\t\t }
+\t}
+   /* HvDcU(VBat) over voltage fault status indicates NO_FAULT */
+\telse
+\t{
+\t   /* Clear HVDC over voltage reset time counter */
+\t   SftyHvDcUEvlnOVRstTimeCounter = 0u;
+
+\t\t/* HvDc OV HW Error not present*/
+\t\tSftyHvDcUEvlnOvHWErrMonrSt = ERR_DEB_MONR_STS_PASSED;
+\t }
+
+    return;
 }
 
 /******************************** AREA-1 *********************************** */
@@ -896,14 +912,21 @@ FUNC(void, SFTY_DC_EVLN_CODE) SftyHvDcUEvln_InitAreaCmn(void)
    /* ************* Source code **************** */
 
    /* Initialize internal variables */
-
    
-   /* Input Variables, get them from other module */
+   /* Initialize HVDC OV fault reset retry count*/
+   SftyHvDcUEvlnOVRstRetryCount = 0U;
 
+   /* Initialize HVDC over voltage reset time counter */
+   SftyHvDcUEvlnOVRstTimeCounter = 0U;
+
+   /* Input Variables, get them from other module */
 
    /* Output Variables */
    SftyHvDcUEvlnPlausErrMonrSt = ERR_DEB_MONR_STS_INACTIVE;
 
+   /* Initialize HvDc OV HW Error monitor */
+   SftyHvDcUEvlnOvHWErrMonrSt = ERR_DEB_MONR_STS_INACTIVE;
+
    return;
 }
 
@@ -931,7 +954,6 @@ FUNC(void, SFTY_DC_EVLN_CODE) SftyHvDcUEvln_PlausReinitMonrData(void)   /* PRQA
    {
       SftyHvDcUEvlnSetPlausReinitSt = TRUE;
    }
-   
 #ifdef SWIT_IT_Active
    SWIT_SftyHvDcUEvln_PlausReinitMonrData_EndHook();
 #endif
@@ -1061,16 +1083,46 @@ FUNC(void, SFTY_DC_EVLN_CODE) SftyHvDcUEvln_MainFunctionArea2(void)
 #define SFTY_DC_EVLN_AREA_CMN_START_SEC_CODE_FAST
 #include "MemMap.h"
 
+/******************************************************************/
+/*!
+ * \\fn      void SftyHvDcUEvln_OverVoltReinitMonrData(void)
+ * \\brief   This API-Function Reinitialize HVDC over voltage fault that detect in FPGA.
+ * \\        It provides a function interface that used by ErrDeb_Cfg.c
+ * \\param[in]  None
+ * \\param[out] None
+ * \\return     None
+  * \\Parent_DD : SftyHvDcUEvln_OverVoltReinitMonrData
+ */
+/******************************************************************/
+FUNC(void, SFTY_DC_EVLN_CODE) SftyHvDcUEvln_OverVoltReinitMonrData(void) /* PRQA S 1503 #This function shall be called by ErrDeb_cfg.c after configuration */
+{
+   /* Reinitialization request of HVDC over voltage fault to FPGA */
+   if(SftyHvDcUEvlnSetOverVoltReinitSt == TRUE)
+   {
+      SftyHvDcUEvlnSetOverVoltReinitSt = FALSE;
+   }
+   else
+   {
+      SftyHvDcUEvlnSetOverVoltReinitSt = TRUE;
+   }
+
+   return;
+}
+
 /******************************************************************/
 /*!
  * \\fn      void SftyHvDcUEvln_MainFunctionAreaCmn(void)
  * \\brief   This API-Function shall be called in a cyclic task.
  *          It handles all ASIL C tasks in memory AREA-CMN.
+ * \\param[in]  None
+ * \\param[out] None
+ * \\return     None
+ * \\Parent_DD : SftyHvDcUEvln_MainFunctionAreaCmn
  */
 /******************************************************************/
 FUNC(void, SFTY_DC_EVLN_CODE) SftyHvDcUEvln_MainFunctionAreaCmn(void)
 {
-   uint8 idxPu = 0u;
+\t
 #ifdef SWIT_FC_Active
    if((SWIT_SftyHvDcUEvln_EN_KEY==SWIT_First_HookEnableKey))
    SWIT_SftyHvDcUEvln_MainFunctionAreaCmn_BgnHook();
@@ -1090,20 +1142,12 @@ FUNC(void, SFTY_DC_EVLN_CODE) SftyHvDcUEvln_MainFunctionAreaCmn(void)
       SftyHvDcUEvlnPlausErrMonrSt = ERR_DEB_MONR_STS_FAILED;
    }
 
-/*#if 0*/
-   /* HvDc over voltage fault reinit */
-   SftyHvDcUEvln_GetDataForOvRst();
+   /* Get HvDc voltage to monitor over voltage failure */
+   SftyHvDcUEvln_GetHvDcUDataForOvRst();
    
-#if SYSDEF_EM_PHA_SET_CNT_MAX > 1U
-   for(idxPu = 0U; idxPu < (uint8)SYSDEF_EM_PHA_SET_CNT_MAX; idxPu++)
-#endif
-   {
-      SftyHvDcUEvln_OVRst(idxPu);
-   }
-/*#endif*/
-#ifdef SWIT_IT_Active
-   SWIT_SftyHvDcUEvln_MainFunctionAreaCmn_EndHook() ;
-#endif
+   /* Handle HvDc over voltage fault reset */
+   SftyHvDcUEvln_HvDcUOverVoltFltRst();
+
    return;
 }
 
diff --git a/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvDcUEvln/src/SftyHvDcUEvln_data.c b/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvDcUEvln/src/SftyHvDcUEvln_data.c
index f89cfc734..e6720e8e4 100644
--- a/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvDcUEvln/src/SftyHvDcUEvln_data.c
+++ b/src/fw_cu/Components/Safety/Sfty_Inv/SftyHvDcUEvln/src/SftyHvDcUEvln_data.c
@@ -115,7 +115,7 @@ VAR(boolean, SFTYDCEVLN_VAR) SftyHvDcUEvlnSetPlausReinitSt = TRUE;
 #include "MemMap.h"
 
 /*
-@@ SYMBOL = SftyHvDcUEvlnSetOverVltVBatReinitSt
+@@ SYMBOL = SftyHvDcUEvlnSetOverVoltReinitSt
 @@ A2L_TYPE = MEASURE
 @@ DATA_TYPE = UBYTE [0 ... 1]
 @@ CONVERSION = TABLE 0 "Not Reinit" 1 "Reinit"
@@ -123,7 +123,29 @@ VAR(boolean, SFTYDCEVLN_VAR) SftyHvDcUEvlnSetPlausReinitSt = TRUE;
 @@ GROUP = SftyHvDcUEvln
 @@ END
 */
-VAR(boolean, SFTYDCEVLN_VAR) SftyHvDcUEvlnSetOverVltVBatReinitSt = TRUE;
+VAR(boolean, SFTYDCEVLN_VAR) SftyHvDcUEvlnSetOverVoltReinitSt = TRUE;
+
+#define SFTYDCEVLN_STOP_SEC_VAR_AREA_CMN_FAST_INIT_8
+#include "MemMap.h"
+/* End: SFTYDCEVLN_STOP_SEC_VAR_AREA_CMN_FAST_INIT_8 (online) */
+
+
+
+
+/* Begin: SFTYDCEVLN_START_SEC_VAR_AREA_CMN_FAST_INIT_8 (online) */
+#define SFTYDCEVLN_START_SEC_VAR_AREA_CMN_FAST_INIT_8
+#include "MemMap.h"
+
+/*
+@@ SYMBOL = SftyHvDcUEvlnFpgaOverVoltVBatFltSts
+@@ A2L_TYPE = MEASURE
+@@ DATA_TYPE = UBYTE
+@@ CONVERSION = TABLE 0 "FAULT" 1 "NOFAULT"
+@@ DESCRIPTION = "HvDcU(VBat) over voltage fault status"
+@@ GROUP = SftyHvDcUEvln
+@@ END
+*/
+VAR(boolean, SFTYDCEVLN_VAR) SftyHvDcUEvlnFpgaOverVoltVBatFltSts = TRUE;
 
 #define SFTYDCEVLN_STOP_SEC_VAR_AREA_CMN_FAST_INIT_8
 #include "MemMap.h"
@@ -166,7 +188,27 @@ VAR(boolean, SFTYDCEVLN_VAR) SftyHvDcUEvlnPlausHWFltSts = TRUE;
 @@ GROUP = SftyHvDcUEvln
 @@ END
 */
-VAR(uint8, SFTYDCEVLN_VAR) SftyHvDcUEvlnPlausErrMonrSt = TRUE;
+VAR(uint8, SFTYDCEVLN_VAR) SftyHvDcUEvlnPlausErrMonrSt = 0U;
+
+#define SFTYDCEVLN_STOP_SEC_VAR_AREA_CMN_FAST_INIT_8
+#include "MemMap.h"
+/* End: SFTYDCEVLN_STOP_SEC_VAR_AREA_CMN_FAST_INIT_8 (online) */
+
+
+
+/* Begin: SFTYDCEVLN_START_SEC_VAR_AREA_CMN_FAST_INIT_8 (online) */
+#define SFTYDCEVLN_START_SEC_VAR_AREA_CMN_FAST_INIT_8
+#include "MemMap.h"
+/*
+@@ SYMBOL = SftyHvDcUEvlnOvHWErrMonrSt
+@@ A2L_TYPE = MEASURE
+@@ DATA_TYPE = UBYTE [0 ... 2]
+@@ CONVERSION = TABLE 0 "INACTIVE" 1 "PASSED" 2 "FAILED"
+@@ DESCRIPTION = "HvDc over voltage HW error monitor"
+@@ GROUP = SftyHvDcUEvln
+@@ END
+*/
+VAR(uint8, SFTYDCEVLN_VAR) SftyHvDcUEvlnOvHWErrMonrSt = 0U;
 
 #define SFTYDCEVLN_STOP_SEC_VAR_AREA_CMN_FAST_INIT_8
 #include "MemMap.h"
@@ -420,25 +462,6 @@ VAR(uint8, SFTYDCEVLN_VAR) SftyHvDcUEvlnCtrlBdE2eFpgaRxCrcErrMonrSt = 0U;
 
 
 
-/* Begin: SFTYDCEVLN_START_SEC_VAR_AREA_2_FAST_INIT_8 (online) */
-#define SFTYDCEVLN_START_SEC_VAR_AREA_2_FAST_INIT_8
-#include "MemMap.h"
-/*
-@@ SYMBOL = SftyHvDcUEvlnOvHWErrMonrSt
-@@ A2L_TYPE = MEASURE
-@@ DATA_TYPE = UBYTE [0 ... 2]
-@@ CONVERSION = TABLE 0 "INACTIVE" 1 "PASSED" 2 "FAILED"
-@@ DESCRIPTION = "E2e FPGA Rx CRC Error Status Used For Control Board HvDcU"
-@@ GROUP = SftyHvDcUEvln
-@@ END
-*/
-VAR(uint8, SFTYDCEVLN_VAR) SftyHvDcUEvlnOvHWErrMonrSt = 0U;
-
-#define SFTYDCEVLN_STOP_SEC_VAR_AREA_2_FAST_INIT_8
-#include "MemMap.h"
-/* End: SFTYDCEVLN_STOP_SEC_VAR_AREA_2_FAST_INIT_8 (online) */
-
-
 /* Begin: SFTYDCEVLN_START_SEC_VAR_AREA_2_FAST_INIT_8 (online) */
 #define SFTYDCEVLN_START_SEC_VAR_AREA_2_FAST_INIT_8
 #include "MemMap.h"
@@ -649,6 +672,24 @@ CONST(float32, SFTYDCEVLN_CALIB) SftyHvDcUEvlnUdcOvRstThd = 470.0f;   /* => 470V
 /* End: SFTYDCEVLN_STOP_SEC_CALIB_32 (calib) */
 
 
+/* Begin: SFTYDCEVLN_START_SEC_CALIB_8 (online) */
+#define SFTYDCEVLN_START_SEC_CALIB_8
+#include "MemMap.h"
+
+/*
+@@ SYMBOL = SftyHvDcUEvlnOVRstRetryMaxThd
+@@ A2L_TYPE = PARAMETER
+@@ DATA_TYPE = UBYTE
+@@ DESCRIPTION = "Number of retry allowed for HvDc OV fault reset in one ignition cycle"
+@@ GROUP = SftyHvDcUEvln
+@@ END
+*/
+CONST(uint8, SFTYDCEVLN_VAR) SftyHvDcUEvlnOVRstRetryMaxThd = 3U;
+
+#define SFTYDCEVLN_STOP_SEC_CALIB_8
+#include "MemMap.h"
+/* End: SFTYDCEVLN_STOP_SEC_CALIB_8 (online) */
+
 
 /* ********************* End Of Calibration Variables ********************* */
 
@@ -951,35 +992,15 @@ CONST(uint16, SFTYDCEVLN_CALIB) SftyReplcmtHvDcUEvlnCtrlBdRawVal = 0U;
 /* Begin: SFTYDCEVLN_START_SEC_CALIB_16 (calib) */
 #define SFTYDCEVLN_START_SEC_CALIB_16
 #include "MemMap.h"
-
-/*
-@@ SYMBOL = SftyReplcmtE2eFpgaOverVoltVBatFltSts
-@@ A2L_TYPE = PARAMETER
-@@ DATA_TYPE = UWORD
-@@ DESCRIPTION = "Replacement value of HvDcU Raw from Control Board"
-@@ GROUP = SftyHvDcUEvln
-@@ END
-*/
-CONST(uint16, SFTYDCEVLN_CALIB) SftyReplcmtE2eFpgaOverVoltVBatFltSts = 0U;
-
-#define SFTYDCEVLN_STOP_SEC_CALIB_16
-#include "MemMap.h"
-/* End: SFTYDCEVLN_STOP_SEC_CALIB_16 (calib) */
-
-
-/* Begin: SFTYDCEVLN_START_SEC_CALIB_16 (calib) */
-#define SFTYDCEVLN_START_SEC_CALIB_16
-#include "MemMap.h"
-
 /*
 @@ SYMBOL = SftyHvDcUEvlnOvRstTi
 @@ A2L_TYPE = PARAMETER
 @@ DATA_TYPE = UWORD
-@@ DESCRIPTION = "Replacement value of HvDcU Raw from Control Board"
+@@ DESCRIPTION = "Time delay for HVDC over voltage fault reset i.e c_HvDcOvRstTi = 200ms"
 @@ GROUP = SftyHvDcUEvln
 @@ END
 */
-CONST(uint16, SFTYDCEVLN_CALIB) SftyHvDcUEvlnOvRstTi = 200U;/* 200ms */
+CONST(uint16, SFTYDCEVLN_CALIB) SftyHvDcUEvlnOvRstTi = 1000U;
 
 #define SFTYDCEVLN_STOP_SEC_CALIB_16
 #include "MemMap.h"
diff --git a/src/fw_cu/build/a2l/Measurements-to-Timeslices-Mapping.csv b/src/fw_cu/build/a2l/Measurements-to-Timeslices-Mapping.csv
index 4bd8bedfe..7e45468df 100644
--- a/src/fw_cu/build/a2l/Measurements-to-Timeslices-Mapping.csv
+++ b/src/fw_cu/build/a2l/Measurements-to-Timeslices-Mapping.csv
@@ -5277,13 +5277,16 @@ SftyHvDcUEvlnCtrlBdRngErrCyclCntr,Core_1,Core_1_200us,0.2,,,SSW
 SftyHvDcUEvlnDrvBdUdcVal,Core_1,Core_1_200us,0.2,,,SSW
 SftyHvDcUEvlnPlausErrMonrSt,Core_1,Core_1_200us,0.2,,,SSW
 SftyHvDcUEvlnPlausHWFltSts,Core_1,Core_1_200us,0.2,,,SSW
-SftyHvDcUEvlnSetOverVltVBatReinitSt,Core_1,Core_1_200us,0.2,,,SSW
+SftyHvDcUEvlnSetOverVoltReinitSt,Core_1,Core_1_200us,0.2,,,SSW
 SftyHvDcUEvlnSetPlausReinitSt,Core_1,Core_1_200us,0.2,,,SSW
 SftyHvDcUEvlnCtrlBdUdcVal,Core_1,Core_1_200us,0.2,,,SSW
 SftyHvDcUEvlnDrvBdE2eFpgaRxAlvCntErrMonrSt,Core_1,Core_1_200us,0.2,,,SSW
 SftyHvDcUEvlnDrvBdE2eFpgaRxCrcErrMonrSt,Core_1,Core_1_200us,0.2,,,SSW
 SftyHvDcUEvlnDrvBdPwrSplyP16Prsnt,Core_1,Core_1_200us,0.2,,,SSW
 SftyHvDcUEvlnUdcVal,Core_1,Core_1_200us,0.2,,,SSW
+SftyHvDcUEvlnOVRstRetryCount,Core_1,Core_1_200us,0.2,,,SSW
+SftyHvDcUEvlnOVRstTimeCounter,Core_1,Core_1_200us,0.2,,,SSW
+SftyHvDcUEvlnFpgaOverVoltVBatFltSts,Core_1,Core_1_200us,0.2,,,SSW
 SftyDmaVadcInterlock,Core_1,Core_1_200us,0.2,,,SSW
 SftyDmaVadcInterlockTi,Core_1,Core_1_200us,0.2,,,SSW
 SftyHvInterlockActvErrMonrSt,Core_1,Core_1_200us,0.2,,,SSW
@@ -5811,8 +5814,6 @@ SftyFlshVldtProdDataAdminBlkCrc.ExpectedCrc,Core_1,Core_1_200us,0.2,,,SSW
 SftyFlshVldtSecuCrcErrMonrSt,Core_1,Core_1_200us,0.2,,,SSW
 SftyAcEvlnMeasCoherFltSts,Core_1,Core_1_200us,0.2,,,SSW
 SftyHvDcUEvlnOvHWErrMonrSt,Core_1,Core_1_200us,0.2,,,SSW
-SftyHvDcUEvlnReinit_Counter,Core_1,Core_1_200us,0.2,,,SSW
-SftyHvDcUEvlnReinit_TimeCounter,Core_1,Core_1_200us,0.2,,,SSW
 SftyPwrSplyEvlnHvP16Prsnt,Core_1,Core_1_200us,0.2,,,SSW
 SftyRslvrCalcnAcICsTime,Core_1,Core_1_200us,0.2,,,SSW
 SftyRslvrCalcnDsadcRslvrTime,Core_1,Core_1_200us,0.2,,,SSW
'
