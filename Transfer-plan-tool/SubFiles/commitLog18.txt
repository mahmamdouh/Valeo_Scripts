b'commit f00c2635f0dcb7ac0984602db19e155c663e4351
Author: David VARGA <david.varga.jv.ext@valeo.com>
Date:   Fri Mar 25 10:23:25 2022 +0100

    $100kW-56736$ - QAX Fix Emspdlmin
    
    Change-Id: If458fcf834e26b812eaf10dcbbe75cc1d39d7048

diff --git a/src/fw_cu/Components/Inv/LimAndDrt/EmSpdLimn/src/EmSpdLimn_Wrpr.c b/src/fw_cu/Components/Inv/LimAndDrt/EmSpdLimn/src/EmSpdLimn_Wrpr.c
index 97a04deb1..a67ced868 100644
--- a/src/fw_cu/Components/Inv/LimAndDrt/EmSpdLimn/src/EmSpdLimn_Wrpr.c
+++ b/src/fw_cu/Components/Inv/LimAndDrt/EmSpdLimn/src/EmSpdLimn_Wrpr.c
@@ -33,14 +33,15 @@
 #include "EmSpdLimn_Wrpr.h"
 #include "EmSpdLimn_data.h"
 #include "EmSpdLimn_Inputs_data.h"
-
 #include "EmSpdLimn.h"
 
-/* !\\misraWarningNo2012: Rule 1.1(DIR) " [L] Number of macro definitions exceeds 4095 - program does not conform strictly to ISO:C99."*/
-/*"Justification: Because of the platfrom approach is nescesary to be have the macros to compile the different SWs"*/
+/* !\\misra PRQA 0380: "Number of included macro definitions cannot be easily reduced, build environment can handle
+                       more than 4095 macro definitons without issue" */
 #include "Rte_MotSpdLimn.h" /*PRQA S 0380*/
 #include "C2cComDrvCtrlData.h"
-#include "BswErrDeb.h"
+/* !\\misra PRQA 0380: "Number of included macro definitions cannot be easily reduced, build environment can handle
+                       more than 4095 macro definitons without issue" */
+#include "BswErrDeb.h" /*PRQA S 0380*/
 
 #ifdef SWIT_Active
 #include "SWIT_BSW.h"
@@ -68,11 +69,12 @@
 /******************************************************************/
 
 /* 100kW-45716 - DRCO EmSpdLimn                                   */
+/* !\\misra PRQA 1503: "This function is called by the scheduler."*/
 FUNC(void, EMSPDLIMN_CODE) MotSpdLimn_Main(void) /*PRQA S 1503*/
 {
-   /* !\\misraWarningNo2012: Rule 2.2 "This initialization is redundant. The value of this object is never used before being modified."*/
-   /*Justification: Variable initalization is needed for unit test*/
-   float32 SpoSpdAllwdMax = 0.0F; /*PRQA S 2981*/
+   /* !\\misra PRQA 2981: "Variable initalization is needed for unit test."*/
+   /* !\\misra PRQA 3203: "Used as an intermediate variable to pass the speed consistently."*/
+   float32 SpoSpdAllwdMax = 0.0F; /*PRQA S 2981, 3203*/
 
    /* calculated/simulated mechanical speed filtered for usage in 10ms timslice (LPF 5ms) - rad/s */
    EmSpdLimnInpSpdMeclFild10 = DrvCtrlC2cData.SpdMeclFild10; /* RotorAgSpdCalcnSpdMeclFild10 */
@@ -83,18 +85,24 @@ FUNC(void, EMSPDLIMN_CODE) MotSpdLimn_Main(void) /*PRQA S 1503*/
 
    /* Function inhibition for the EmSpdLimn operation mode. Effectively, when active, this
     * disables normal operation mode and activates limited operation mode. */
-   EmSpdLimnInpFctInhbnEmSpdLimnOperMod = BswErrDebFctInhbnSts.B.FctIdRslvrOffsFlt || BswErrDebFctInhbnSts.B.FctIdRslvrOffsInitFlt;
+   /* !\\misra PRQA 4404: "No explicit boolean type in C, boolean is defined as unsigned int here. Thus, this conversion is valid here."*/
+   EmSpdLimnInpFctInhbnEmSpdLimnOperMod = (boolean)((TRUE==BswErrDebFctInhbnSts.B.FctIdRslvrOffsFlt) || /*PRQA S 4304*/
+                                                    (TRUE==BswErrDebFctInhbnSts.B.FctIdRslvrOffsInitFlt));
 
    /* Overspeed Limitation function call */
    EmSpdLimn();
 
    /* Write into RTE port the resulting available torque after derating */
-   (void)Rte_Write_TqLim_AvTqCalc_MaxTqAvail(EmSpdLimnTqLimMot);
-   (void)Rte_Write_TqLim_AvTqCalc_MinTqAvail(EmSpdLimnTqLimGen);
+   /* !\\misra PRQA 3417: "No comma in the production code. The comma is in a directive, which is processed by the preprocessor."*/
+   (void)Rte_Write_TqLim_AvTqCalc_MaxTqAvail(EmSpdLimnTqLimMot); /*PRQA S 3417*/
+   /* !\\misra PRQA 3417: "No comma in the production code. The comma is in a directive, which is processed by the preprocessor."*/
+   (void)Rte_Write_TqLim_AvTqCalc_MinTqAvail(EmSpdLimnTqLimGen); /*PRQA S 3417*/
 
-   /* write Max_ZulDrehzahl (MaxAllwdSpd) on RTE */
-   SpoSpdAllwdMax = DrvCtrlC2cData.SpoMaxSpdAllwd;
+   /* !\\misra PRQA 2983: "The value is used, it is written to RTE.
+                          Using the value of the C2c variable directly is not recommended due to data consistency reasons."*/
+   SpoSpdAllwdMax = DrvCtrlC2cData.SpoMaxSpdAllwd; /*PRQA S 2983*/
 
+   /* write Max_ZulDrehzahl (MaxAllwdSpd) on RTE */
    (void)Rte_Write_MaxZul_Drehzahl_Phy_MaxZul_Drehzahl(SpoSpdAllwdMax);
 
 #ifdef SWIT_Active
'
