b'commit ecafa875d0f1bbfa4284f19eadf9b1eaccd065af
Author: Santosh Pallanti <santos.pallanti.jv.ext@valeo.com>
Date:   Wed Nov 10 13:02:28 2021 +0530

    $100kW-45272$ - [SWIT] B01: [FCT_Determine_Resolver_Offset] - SW Interfaces are always equal to "INACTIVE" and don\'t update their values
    
    Change-Id: If2c90238d314a921061deec2697252fb6beb7bd5

diff --git a/src/fw_cu/Components/Cmn/MngFlts/ErrDeb/src/ErrDeb_cfg.c b/src/fw_cu/Components/Cmn/MngFlts/ErrDeb/src/ErrDeb_cfg.c
index 70f43a28d..1cb466153 100644
--- a/src/fw_cu/Components/Cmn/MngFlts/ErrDeb/src/ErrDeb_cfg.c
+++ b/src/fw_cu/Components/Cmn/MngFlts/ErrDeb/src/ErrDeb_cfg.c
@@ -2666,7 +2666,7 @@ CONST(ErrDeb_FltCfgType, ERRDEB_CONST) ErrDebFltCfg[ERR_DEB_FLT_CNT] =
    /* INV_RSLVR_OFFS_RNG */
    { 
       &ErrDebFltData_INV_RSLVR_OFFS_RNG, /* Fault data */
-      NULL_PTR,/* &SftyRslvrOffsHndlrRslvrOffsRngErrMonrSt, / * Direct pointer to monitor status */
+      &SftyRslvrOffsHndlrRslvrOffsRngErrMonrSt,/* Direct pointer to monitor status */
       NULL_PTR, /* Status update function used if MonrStsPtr == NULL_PTR */
       NULL_PTR, /* Monitor init function */
       FCT_ID_LOCK_INV_RSLVR_OFFS_RNG, /* FID for fault locking */
@@ -2676,7 +2676,7 @@ CONST(ErrDeb_FltCfgType, ERRDEB_CONST) ErrDebFltCfg[ERR_DEB_FLT_CNT] =
    /* INV_RSLVR_OFFS_Plaus */
    { 
       &ErrDebFltData_INV_RSLVR_OFFS_Plaus, /* Fault data */
-      NULL_PTR,/*&SftyRslvrOffsHndlrAscIqPlausErrMonrSt, / * Direct pointer to monitor status */
+      &SftyRslvrOffsHndlrAscIqPlausErrMonrSt, /* Direct pointer to monitor status */
       NULL_PTR, /* Status update function used if MonrStsPtr == NULL_PTR */
       NULL_PTR, /* Monitor init function */
       FCT_ID_LOCK_INV_RSLVR_OFFS_Plaus, /* FID for fault locking */
@@ -2686,7 +2686,7 @@ CONST(ErrDeb_FltCfgType, ERRDEB_CONST) ErrDebFltCfg[ERR_DEB_FLT_CNT] =
    /* INV_RSLVR_OFFS_WR */
    { 
       &ErrDebFltData_INV_RSLVR_OFFS_WR, /* Fault data */
-      NULL_PTR,/*&SftyRslvrOffsHndlrRslvrOffsNvmWriteErrMonrSt, / * Direct pointer to monitor status */
+      &SftyRslvrOffsHndlrRslvrOffsNvmWriteErrMonrSt, /* Direct pointer to monitor status */
       NULL_PTR, /* Status update function used if MonrStsPtr == NULL_PTR */
       NULL_PTR, /* Monitor init function */
       FCT_ID_LOCK_INV_RSLVR_OFFS_WR, /* FID for fault locking */
@@ -2696,7 +2696,7 @@ CONST(ErrDeb_FltCfgType, ERRDEB_CONST) ErrDebFltCfg[ERR_DEB_FLT_CNT] =
    /* INV_RSLVR_OFFS_SFTY */
    { 
       &ErrDebFltData_INV_RSLVR_OFFS_SFTY, /* Fault data */
-      NULL_PTR,/*&SftyRslvrOffsHndlrRslvrOffsCrcErrMonrSt, / * Direct pointer to monitor status */
+      &SftyRslvrOffsHndlrRslvrOffsCrcErrMonrSt, /* Direct pointer to monitor status */
       NULL_PTR, /* Status update function used if MonrStsPtr == NULL_PTR */
       NULL_PTR, /* Monitor init function */
       FCT_ID_LOCK_INV_RSLVR_OFFS_SFTY, /* FID for fault locking */
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyErrDeb/include/SftyErrDeb_data.h b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyErrDeb/include/SftyErrDeb_data.h
index 4b14b51ac..8fbc1a4f7 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyErrDeb/include/SftyErrDeb_data.h
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyErrDeb/include/SftyErrDeb_data.h
@@ -1505,14 +1505,21 @@ extern VAR(uint8, SFTYRSLVREVLN_VAR) SftyRslvrEvlnValCompErrMonrSt;
 #define SFTYRSLVROFFSHNDLR_START_SEC_VAR_AREA_CMN_SLOW_INIT_8
 #include "MemMap.h"
 
-extern VAR(uint8, SFTYRSLVROFFSHNDLR_VAR) SftyRslvrOffsHndlrDftOffsErrMonrSt;
+extern VAR(uint8, SFTYRSLVROFFSHNDLR_VAR) SftyRslvrOffsHndlrAscIqPlausErrMonrSt;
    #define SFTYRSLVROFFSHNDLR_STOP_SEC_VAR_AREA_CMN_SLOW_INIT_8
 #include "MemMap.h"
 /* End: SFTYRSLVROFFSHNDLR_STOP_SEC_VAR_AREA_CMN_SLOW_INIT_8 (online) */
 
 
 
+/* Begin: SFTYRSLVROFFSHNDLR_START_SEC_VAR_AREA_CMN_SLOW_INIT_8 (online) */
+#define SFTYRSLVROFFSHNDLR_START_SEC_VAR_AREA_CMN_SLOW_INIT_8
+#include "MemMap.h"
 
+extern VAR(uint8, SFTYRSLVROFFSHNDLR_VAR) SftyRslvrOffsHndlrRslvrOffsNvmWriteErrMonrSt;
+#define SFTYRSLVROFFSHNDLR_STOP_SEC_VAR_AREA_CMN_SLOW_INIT_8
+#include "MemMap.h"
+/* End: SFTYRSLVROFFSHNDLR_STOP_SEC_VAR_AREA_CMN_SLOW_INIT_8 (online) */
 
 
 
@@ -1533,7 +1540,14 @@ extern VAR(uint8, SFTYRSLVROFFSHNDLR_VAR) SftyRslvrOffsHndlrRslvrOffsRngErrMonrS
 /* End: SFTYRSLVROFFSHNDLR_STOP_SEC_VAR_AREA_CMN_SLOW_INIT_8 (online) */
 
 
+/* Begin: SFTYRSLVROFFSHNDLR_START_SEC_VAR_AREA_CMN_SLOW_INIT_8 (online) */
+#define SFTYRSLVROFFSHNDLR_START_SEC_VAR_AREA_CMN_SLOW_INIT_8
+#include "MemMap.h"
 
+extern VAR(uint8, SFTYRSLVROFFSHNDLR_VAR) SftyRslvrOffsHndlrRslvrOffsCrcErrMonrSt;
+#define SFTYRSLVROFFSHNDLR_STOP_SEC_VAR_AREA_CMN_SLOW_INIT_8
+#include "MemMap.h"
+/* End: SFTYRSLVROFFSHNDLR_STOP_SEC_VAR_AREA_CMN_SLOW_INIT_8 (online) */
 
 
 
diff --git a/src/fw_cu/Components/Safety/Sfty_Inv/SftyRslvrOffsHndlr/src/SftyRslvrOffsHndlr.c b/src/fw_cu/Components/Safety/Sfty_Inv/SftyRslvrOffsHndlr/src/SftyRslvrOffsHndlr.c
index 9bc9e7057..150f769b9 100644
--- a/src/fw_cu/Components/Safety/Sfty_Inv/SftyRslvrOffsHndlr/src/SftyRslvrOffsHndlr.c
+++ b/src/fw_cu/Components/Safety/Sfty_Inv/SftyRslvrOffsHndlr/src/SftyRslvrOffsHndlr.c
@@ -37,7 +37,7 @@
 #include "Std_Types.h"
 #include "SftyAcEvln_data.h"
 #include "SftyCrc.h"
-#include "SftyCrc_data.h"
+#include "SftyCrc_data.h" /* PRQA S 0380 # header file necessary; inclusion of macros unavoidable */
 #include "SftyE2eRx_data.h"
 #include "SftyE2eFpga_data.h"
 #include "SftyHvDcUEvln_data.h"
@@ -495,8 +495,16 @@ LOCAL_INLINE void SftyRslvrOffsHndlr_PropagateOffsValues(float32 rslvrOffsInDeg,
    float32 rslvrOffsInDegree;
 
    /* ************* Source code **************** */
-
-   rslvrOffsInDegree = rslvrOffsInDeg;
+   /* During first time when resolver offset NVM is invalid set SftyRslvrOffsHndlrRslvrOffsRad to 0 */
+   if((BswC2cData.RslvrOffsNvm.RslvrOffs > 0.0f) &&
+     (BswC2cData.RslvrOffsNvm.RslvrOffsChks != 0U))
+   {
+      rslvrOffsInDegree = rslvrOffsInDeg;
+   }
+   else
+   {
+      rslvrOffsInDegree = 0.0f;
+   }
 
    /* Update internal resolver offset value */
    SftyRslvrOffsHndlrInternRslvrOffs = rslvrOffsInDegree;
@@ -3123,51 +3131,52 @@ FUNC(void, SFTYRSLVROFFSHNDLR_CODE) SftyRslvrOffsHndlr_MainFunctionAsilC(void)
    {
       /* Accept request from BSW */
       SftyRslvrOffsHndlrReqCalibSfty = BswC2cData.ReqCalibSfty;
+   }
+   else
+   {
+      /* Do not accept any request as previous request is in process */
+   }
 
-      /* Process the requests */
-      switch(SftyRslvrOffsHndlrReqCalibSfty)
+   /* Process the requests */
+   switch(SftyRslvrOffsHndlrReqCalibSfty)
+   {
+      case REQ_CALIB_SFTY_RSLVR_OFFS_VERIFICATION_NVM:
       {
-         case REQ_CALIB_SFTY_RSLVR_OFFS_VERIFICATION_NVM:
-         {
-            /*  Received NvM resolver offset validation request */
-            SftyRslvrOffsHndlr_ValidateRslvrDataNvm();
+         /*  Received NvM resolver offset validation request */
+         SftyRslvrOffsHndlr_ValidateRslvrDataNvm();
 
-            break;
-         }
+         break;
+      }
 
-         case REQ_CALIB_SFTY_RSLVR_OFFS_VERIFICATION_UDS:
-         {
-            /* Received UDS resolver offset validation request */
-            SftyRslvrOffsHndlr_ValidateRslvrDataUds();
+      case REQ_CALIB_SFTY_RSLVR_OFFS_VERIFICATION_UDS:
+      {
+         /* Received UDS resolver offset validation request */
+         SftyRslvrOffsHndlr_ValidateRslvrDataUds();
 
-            break;
-         }
+         break;
+      }
 
-         case REQ_CALIB_SFTY_RSLVR_OFFS_ONLINE_CAL:
-         {
-            /* Received RODA learning and validation request */
-            SftyRslvrOffsHndlr_ValidateOnlineRoda();
+      case REQ_CALIB_SFTY_RSLVR_OFFS_ONLINE_CAL:
+      {
+         /* Received RODA learning and validation request */
+         SftyRslvrOffsHndlr_ValidateOnlineRoda();
 
-            break;
-         }
+         break;
+      }
 
-         case REQ_CALIB_SFTY_NONE:
-         {
-            /* No validation request received. Keep waiting for a valid request. */
-            break;
-         }
+      case REQ_CALIB_SFTY_NONE:
+      {
+         /* No validation request received. Keep waiting for a valid request. */
+         break;
+      }
 
-         default:
-         {
-            /* Invalid request type */
-            break;
-         }
+      default:
+      {
+         /* Invalid request type */
+         break;
       }
    }
-   else
-   {
-      /* Do not accept any request as previous request is in process */
-   }
+
 #ifdef SWIT_IT_Active
    SWIT_SftyRslvrOffsHndlr_MainFunctionAsilC_End_Hook();
 #endif
'
