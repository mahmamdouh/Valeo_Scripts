b'commit fe26805e94d6e17216113162660b8c959aed1caf
Author: Yunpeng DONG (JV) <yunpeng.dong.jv@valeo.com>
Date:   Thu Dec 30 16:38:24 2021 +0800

    $100kW-48735$ - FCT_CtrlParkPos - Update SftyParkLockPosnAcqn code
    
    Change-Id: Ifa57e89570e57d3e95c44bf56541094addb56dce

diff --git a/src/fw_cu/Components/Cmn/Shared/MemMap/include/SftyNextGen_MemMap.h b/src/fw_cu/Components/Cmn/Shared/MemMap/include/SftyNextGen_MemMap.h
index 393c482b0..9df160c8e 100644
--- a/src/fw_cu/Components/Cmn/Shared/MemMap/include/SftyNextGen_MemMap.h
+++ b/src/fw_cu/Components/Cmn/Shared/MemMap/include/SftyNextGen_MemMap.h
@@ -5075,6 +5075,16 @@
    #undef SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_2_SLOW_INIT_8
    #define SFTY_ASIL_B_STOP_SEC_VAR_FAST_INIT
    #include "BasicNextGen_MemMap.h"
+   
+#elif (defined SFTYPARKLOCKPOSNACQN_AREA_2_START_SEC_VAR_FAST_CLEARED)
+   #undef SFTYPARKLOCKPOSNACQN_AREA_2_START_SEC_VAR_FAST_CLEARED
+   #define SFTY_ASIL_B_START_SEC_VAR_FAST_CLEARED
+   #include "BasicNextGen_MemMap.h"
+
+#elif (defined SFTYPARKLOCKPOSNACQN_AREA_2_STOP_SEC_VAR_FAST_CLEARED)
+   #undef SFTYPARKLOCKPOSNACQN_AREA_2_STOP_SEC_VAR_FAST_CLEARED
+   #define SFTY_ASIL_B_STOP_SEC_VAR_FAST_CLEARED
+   #include "BasicNextGen_MemMap.h"
 /********************************************** SftyE2e  ********************** */
 #elif (defined SFTYE2E_START_SEC_VAR_AREA_CMN_FAST_INIT_8)
    #undef SFTYE2E_START_SEC_VAR_AREA_CMN_FAST_INIT_8
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyCrc/src/SftyCrc.c b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyCrc/src/SftyCrc.c
index effb77ae7..e31382249 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyCrc/src/SftyCrc.c
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyCrc/src/SftyCrc.c
@@ -232,25 +232,28 @@ FUNC (uint8, SFTYCRC) SftyCrc_CalcCRC4
    uint8\ttempData = 0U;
    uint8\tidx;
    uint8\tCrc_RetValue4;
-
-    if(TRUE == Crc_IsFirstCall)
+   
+   /* First call, set the initial value */ 
+   if(TRUE == Crc_IsFirstCall)
    {
       Crc_RetValue4 = CRC_INITIAL_VALUE4;
    }
    else
    {
-      /* Undo final XOR cd ..operation */
+      /* Do the XOR operation */
       Crc_RetValue4 = Crc_StartValue4 ^ CRC_XOR_VALUE4;
    }
-
-    for(idx = 0U; idx < Crc_Length; idx++)
-\t{
-        tempData = (uint8)(Crc_RetValue4 ^ Crc_Data[idx]); 
-        Crc_RetValue4 = (uint8)SftyCrc_Tbl4[tempData];
-    }
-
-   Crc_RetValue4 ^= CRC_XOR_VALUE4;   /* Do Final XOR crc value */
-
+   /* Do the crc calculation for all data */
+   for(idx = 0U; idx < Crc_Length; idx++)
+   {
+       tempData = (uint8)(Crc_RetValue4 ^ Crc_Data[idx]); 
+\t   /* Calculate the crc value */
+       Crc_RetValue4 = (uint8)SftyCrc_Tbl4[tempData];
+   }
+   
+   /* Do Final XOR crc value */
+   Crc_RetValue4 ^= CRC_XOR_VALUE4;  
+   
    return Crc_RetValue4;
 }
 
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyCrc/src/SftyCrc_data.c b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyCrc/src/SftyCrc_data.c
index 6b35d8187..8ed1ab6d2 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyCrc/src/SftyCrc_data.c
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyCrc/src/SftyCrc_data.c
@@ -40,7 +40,7 @@
 #include "MemMap.h"
 
 /*! Table of pre-computed values for CRC4. Used Polynomial is 0x1D according VW Lastenheft */
-CONST(uint8, SFTYCRC_CONST) SftyCrc_Tbl4[CRC_4_TBL_SIZE] = {0, 13, 7, 10, 14, 3, 9, 4, 1, 12, 6, 11, 15, 2, 8, 5};
+CONST(uint8, SFTYCRC_CONST) SftyCrc_Tbl4[CRC_4_TBL_SIZE] = {0U, 13U, 7U, 10U, 14U, 3U, 9U, 4U, 1U, 12U, 6U, 11U, 15U, 2U, 8U, 5U};
 /*! Table of pre-computed values for CRC8. Used Polynomial is 0x2F according VW Lastenheft */
 CONST(uint8, SFTYCRC_CONST) SftyCrc_Tbl8[CRC_8_TBL_SIZE] =
 {
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyParkLockPosnAcqn/include/SftyParkLockPosnAcqn.h b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyParkLockPosnAcqn/include/SftyParkLockPosnAcqn.h
index e0152287d..8faf5a832 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyParkLockPosnAcqn/include/SftyParkLockPosnAcqn.h
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyParkLockPosnAcqn/include/SftyParkLockPosnAcqn.h
@@ -35,93 +35,93 @@
 /* Parklock CRC buffer*/
 #define SFTYPARKLOCKPOSNACQN_CRC_CALCN_BUF_SIZE  6U
 
-/* Parklock crc4 seed value */
+/* Parklock CRC4 seed value */
 #define SFTYPARKLOCKPOSNACQN_4BIT_CRC_INIT_SEED_VALUE 5U
 
 
 /*================== [type definitions] =====================================*/
 typedef struct NibbleDataType_
 {
-\t/*
+\t  /*
 \t  @@ ELEMENT = data0
 \t  @@ STRUCTURE = NibbleDataType
 \t  @@ A2L_TYPE = MEASURE
-\t  @@ DATA_TYPE = UBYTE
+\t  @@ DATA_TYPE = UBYTE 
 \t  @@ DESCRIPTION = " nibble data0  "
-\t  @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+\t  @@ GROUP = SftyParkLockPosnAcqn
 \t  @@ END
 \t   */
-\t\t uint8\t  data0 : 4;
-\t/*
+\t\t unsigned int\t  data0 : 4;
+\t  /*
 \t  @@ ELEMENT = data1
 \t  @@ STRUCTURE = NibbleDataType
 \t  @@ A2L_TYPE = MEASURE
-\t  @@ DATA_TYPE = UBYTE
+\t  @@ DATA_TYPE = UBYTE 
 \t  @@ DESCRIPTION = " nibble data1  "
-\t  @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+\t  @@ GROUP = SftyParkLockPosnAcqn
 \t  @@ END
 \t   */
-\t     uint8\t  data1 : 4;   
-\t/*
+\t     unsigned int\t  data1 : 4;   
+\t  /*
 \t  @@ ELEMENT = data2
 \t  @@ STRUCTURE = NibbleDataType
 \t  @@ A2L_TYPE = MEASURE
-\t  @@ DATA_TYPE = UBYTE
+\t  @@ DATA_TYPE = UBYTE 
 \t  @@ DESCRIPTION = " nibble data2  "
-\t  @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+\t  @@ GROUP = SftyParkLockPosnAcqn
 \t  @@ END
 \t   */
-\t     uint8\t  data2 : 4;\t
-\t/*
+\t     unsigned int\t  data2 : 4;\t
+\t  /*
 \t  @@ ELEMENT = data3
 \t  @@ STRUCTURE = NibbleDataType
 \t  @@ A2L_TYPE = MEASURE
-\t  @@ DATA_TYPE = UBYTE
+\t  @@ DATA_TYPE = UBYTE 
 \t  @@ DESCRIPTION = " nibble data3  "
-\t  @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+\t  @@ GROUP = SftyParkLockPosnAcqn
 \t  @@ END
 \t   */
-\t     uint8\t  data3 : 4;\t
-\t/*
+\t     unsigned int\t  data3 : 4;\t
+\t  /*
 \t  @@ ELEMENT = data4
 \t  @@ STRUCTURE = NibbleDataType
 \t  @@ A2L_TYPE = MEASURE
-\t  @@ DATA_TYPE = UBYTE
+\t  @@ DATA_TYPE = UBYTE 
 \t  @@ DESCRIPTION = " nibble data4  "
-\t  @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+\t  @@ GROUP = SftyParkLockPosnAcqn
 \t  @@ END
 \t   */
-\t     uint8\t  data4 : 4;\t
-\t/*
+\t     unsigned int\t  data4 : 4;\t
+\t  /*
 \t  @@ ELEMENT = data5
 \t  @@ STRUCTURE = NibbleDataType
 \t  @@ A2L_TYPE = MEASURE
-\t  @@ DATA_TYPE = UBYTE
+\t  @@ DATA_TYPE = UBYTE 
 \t  @@ DESCRIPTION = " nibble data5  "
-\t  @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+\t  @@ GROUP = SftyParkLockPosnAcqn
 \t  @@ END
 \t   */
-\t     uint8\t  data5: 4;\t
-\t/*
+\t     unsigned int\t  data5: 4;\t
+\t  /*
 \t  @@ ELEMENT = data6
 \t  @@ STRUCTURE = NibbleDataType
 \t  @@ A2L_TYPE = MEASURE
-\t  @@ DATA_TYPE = UBYTE
+\t  @@ DATA_TYPE = UBYTE 
 \t  @@ DESCRIPTION = " nibble data6  "
-\t  @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+\t  @@ GROUP = SftyParkLockPosnAcqn
 \t  @@ END
 \t   */
-\t\t uint8\t  data6 : 4;\t
-\t/*
+\t\t unsigned int\t  data6 : 4;\t
+\t  /*
 \t  @@ ELEMENT = data7
 \t  @@ STRUCTURE = NibbleDataType
 \t  @@ A2L_TYPE = MEASURE
-\t  @@ DATA_TYPE = UBYTE
+\t  @@ DATA_TYPE = UBYTE 
 \t  @@ DESCRIPTION = " nibble data7  "
-\t  @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+\t  @@ GROUP = SftyParkLockPosnAcqn
 \t  @@ END
 \t   */
-\t\t uint8\t  data7 : 4;\t
+\t\t unsigned int\t  data7 : 4;\t
 
 }NibbleDataType;
 typedef struct BitDataType_
@@ -130,164 +130,164 @@ typedef struct BitDataType_
    @@ ELEMENT = bit0
    @@ STRUCTURE = BitDataType
    @@ A2L_TYPE = MEASURE
-   @@ DATA_TYPE = UBYTE
+   @@ DATA_TYPE = UBYTE 0x01
    @@ DESCRIPTION = "bit0"
-   @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+   @@ GROUP = SftyParkLockPosnAcqn
    @@ END
    */
-\t\tuint8  bit0   : 1;
+\t\tunsigned int  bit0   : 1;
    /*
    @@ ELEMENT = bit1
    @@ STRUCTURE = BitDataType
    @@ A2L_TYPE = MEASURE
-   @@ DATA_TYPE = UBYTE
+   @@ DATA_TYPE = UBYTE 0x02
    @@ DESCRIPTION = "bit1"
-   @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+   @@ GROUP = SftyParkLockPosnAcqn
    @@ END
    */
-\t\tuint8  bit1   : 1 ;
+\t\tunsigned int  bit1   : 1 ;
    /*
    @@ ELEMENT = bit2
    @@ STRUCTURE = BitDataType
    @@ A2L_TYPE = MEASURE
-   @@ DATA_TYPE = UBYTE
+   @@ DATA_TYPE = UBYTE 0x04
    @@ DESCRIPTION = "bit2"
-   @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+   @@ GROUP = SftyParkLockPosnAcqn
    @@ END
    */
-\t\tuint8  bit2   : 1;
+\t\tunsigned int  bit2   : 1;
    /*
    @@ ELEMENT = bit3
    @@ STRUCTURE = BitDataType
    @@ A2L_TYPE = MEASURE
-   @@ DATA_TYPE = UBYTE
+   @@ DATA_TYPE = UBYTE 0x08
    @@ DESCRIPTION = "bit3"
-   @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+   @@ GROUP = SftyParkLockPosnAcqn
    @@ END
    */
-\t\tuint8  bit3   : 1;
+\t\tunsigned int  bit3   : 1;
    /*
    @@ ELEMENT = bit4
    @@ STRUCTURE = BitDataType
    @@ A2L_TYPE = MEASURE
-   @@ DATA_TYPE = UBYTE
+   @@ DATA_TYPE = UBYTE 0x10
    @@ DESCRIPTION = "bit4"
-   @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+   @@ GROUP = SftyParkLockPosnAcqn
    @@ END
    */
-\t\tuint8  bit4   : 1;
+\t\tunsigned int  bit4   : 1;
    /*
    @@ ELEMENT = bit5
    @@ STRUCTURE = BitDataType
    @@ A2L_TYPE = MEASURE
-   @@ DATA_TYPE = UBYTE
+   @@ DATA_TYPE = UBYTE 0x20
    @@ DESCRIPTION = "bit5"
-   @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+   @@ GROUP = SftyParkLockPosnAcqn
    @@ END
    */
-\t\tuint8  bit5   : 1;
+\t\tunsigned int  bit5   : 1;
    /*
    @@ ELEMENT = bit6
    @@ STRUCTURE = BitDataType
    @@ A2L_TYPE = MEASURE
-   @@ DATA_TYPE = UBYTE
+   @@ DATA_TYPE = UBYTE 0x40
    @@ DESCRIPTION = "bit6"
-   @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+   @@ GROUP = SftyParkLockPosnAcqn
    @@ END
    */
-\t\tuint8  bit6   : 1;
+\t\tunsigned int  bit6   : 1;
    /*
    @@ ELEMENT = bit7
    @@ STRUCTURE = BitDataType
    @@ A2L_TYPE = MEASURE
-   @@ DATA_TYPE = UBYTE
+   @@ DATA_TYPE = UBYTE 0x80
    @@ DESCRIPTION = "bit7"
-   @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+   @@ GROUP = SftyParkLockPosnAcqn
    @@ END
    */
-\t\tuint8  bit7   : 1;
+\t\tunsigned int  bit7   : 1;
    /*
    @@ ELEMENT = bit8
    @@ STRUCTURE = BitDataType
    @@ A2L_TYPE = MEASURE
-   @@ DATA_TYPE = UBYTE
+   @@ DATA_TYPE = UBYTE 0x01
    @@ DESCRIPTION = "bit8"
-   @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+   @@ GROUP = SftyParkLockPosnAcqn
    @@ END
    */
-\t\tuint8  bit8   : 1;
+\t\tunsigned int  bit8   : 1;
    /*
    @@ ELEMENT = bit9
    @@ STRUCTURE = BitDataType
    @@ A2L_TYPE = MEASURE
-   @@ DATA_TYPE = UBYTE
+   @@ DATA_TYPE = UBYTE 0x02
    @@ DESCRIPTION = "bit9"
-   @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+   @@ GROUP = SftyParkLockPosnAcqn
    @@ END
    */
-\t\tuint8  bit9   : 1;
+\t\tunsigned int  bit9   : 1;
    /*
    @@ ELEMENT = bit10
    @@ STRUCTURE = BitDataType
    @@ A2L_TYPE = MEASURE
-   @@ DATA_TYPE = UBYTE
+   @@ DATA_TYPE = UBYTE 0x04
    @@ DESCRIPTION = "bit10"
-   @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+   @@ GROUP = SftyParkLockPosnAcqn
    @@ END
    */
-\t\tuint8  bit10  : 1;
+\t\tunsigned int  bit10  : 1;
    /*
    @@ ELEMENT = bit11
    @@ STRUCTURE = BitDataType
    @@ A2L_TYPE = MEASURE
-   @@ DATA_TYPE = UBYTE
+   @@ DATA_TYPE = UBYTE 0x08
    @@ DESCRIPTION = "bit11"
-   @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+   @@ GROUP = SftyParkLockPosnAcqn
    @@ END
    */
-\t\tuint8  bit11  : 1;
+\t\tunsigned int  bit11  : 1;
    /*
    @@ ELEMENT = bit12
    @@ STRUCTURE = BitDataType
    @@ A2L_TYPE = MEASURE
-   @@ DATA_TYPE = UBYTE
+   @@ DATA_TYPE = UBYTE 0x10
    @@ DESCRIPTION = "bit12"
-   @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+   @@ GROUP = SftyParkLockPosnAcqn
    @@ END
    */
-\t\tuint8  bit12  : 1;
+\t\tunsigned int  bit12  : 1;
    /*
    @@ ELEMENT = bit13
    @@ STRUCTURE = BitDataType
    @@ A2L_TYPE = MEASURE
-   @@ DATA_TYPE = UBYTE
+   @@ DATA_TYPE = UBYTE 0x20
    @@ DESCRIPTION = "bit13"
-   @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+   @@ GROUP = SftyParkLockPosnAcqn
    @@ END
    */
-\t\tuint8  bit13  : 1;
+\t\tunsigned int  bit13  : 1;
    /*
    @@ ELEMENT = bit14
    @@ STRUCTURE = BitDataType
    @@ A2L_TYPE = MEASURE
-   @@ DATA_TYPE = UBYTE
+   @@ DATA_TYPE = UBYTE 0x40
    @@ DESCRIPTION = "bit14"
-   @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+   @@ GROUP = SftyParkLockPosnAcqn
    @@ END
    */
-\t    uint8  bit14  : 1;
+\t    unsigned int  bit14  : 1;
 \t/*
    @@ ELEMENT = bit15
    @@ STRUCTURE = BitDataType
    @@ A2L_TYPE = MEASURE
-   @@ DATA_TYPE = UBYTE
+   @@ DATA_TYPE = UBYTE 0x80
    @@ DESCRIPTION = "bit15"
-   @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+   @@ GROUP = SftyParkLockPosnAcqn
    @@ END
    */
-\t\tuint8  bit15  : 1;
+\t\tunsigned int  bit15  : 1;
 
-\t\tuint16 reserve : 16;
+\t\tunsigned int reserve : 16;
 \t
 \t
 }BitDataType;
@@ -301,36 +301,36 @@ typedef struct BitDataType_
    @@ ELEMENT = msg0
    @@ STRUCTURE = SentMsgType
    @@ A2L_TYPE = MEASURE
-   @@ DATA_TYPE = ULONG
+   @@ DATA_TYPE = UWORD 
    @@ DESCRIPTION = " D0 to D2  "
-   @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+   @@ GROUP = SftyParkLockPosnAcqn
    @@ END
     */
-\t\t uint16\t  msg0 : 12;
+\t\t unsigned int\t  msg0 : 12;
    /*
    @@ ELEMENT = msg1
    @@ STRUCTURE = SentMsgType
    @@ A2L_TYPE = MEASURE
-   @@ DATA_TYPE = ULONG
+   @@ DATA_TYPE = UWORD 
    @@ DESCRIPTION = " D3 to D5  "
-   @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+   @@ GROUP = SftyParkLockPosnAcqn
    @@ END
     */
-\t     uint16\t  msg1 : 12;   
+\t     unsigned int\t  msg1 : 12;   
 
-\t     uint8\t  reserved : 8;\t
+\t     unsigned int\t  reserved : 8;\t
 
 \t}SentMsgType;
 \t
 typedef union SftyParkLockType_
-{   
+{ /* PRQA S 0750 # union is needed to get access of parklock sent message */  
       /*
       @@ ELEMENT = all
       @@ STRUCTURE = SftyParkLockType
       @@ A2L_TYPE = MEASURE
       @@ DATA_TYPE = ULONG
       @@ DESCRIPTION = " data  "
-      @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+      @@ GROUP = SftyParkLockPosnAcqn
       @@ END
       */
       uint32   all;    /*!< Data transfered from DMA */
@@ -338,7 +338,7 @@ typedef union SftyParkLockType_
 \t  /*
 \t  @@ SUB_STRUCTURE = Nibble
 \t  @@ STRUCTURE = SftyParkLockType
-      @@ DATA_TYPE = STRUCTURE NibbleDataType
+     @@ DATA_TYPE = STRUCTURE NibbleDataType
 \t  @@ END
 \t  */
       NibbleDataType   Nibble; 
@@ -346,14 +346,14 @@ typedef union SftyParkLockType_
 \t   /*
 \t  @@ SUB_STRUCTURE = Msg
 \t  @@ STRUCTURE = SftyParkLockType
-      @@ DATA_TYPE = STRUCTURE SentMsgType
+     @@ DATA_TYPE = STRUCTURE SentMsgType
 \t  @@ END
 \t  */
 \t  SentMsgType        Msg;
 \t  /*
 \t  @@ SUB_STRUCTURE = B
 \t  @@ STRUCTURE = SftyParkLockType
-      @@ DATA_TYPE = STRUCTURE BitDataType
+     @@ DATA_TYPE = STRUCTURE BitDataType
 \t  @@ END
 \t  */
 \t  BitDataType        B;
@@ -381,15 +381,15 @@ typedef struct SftyParkLockSENTDataType_
     */
    SftyParkLockType CrcData; /*!< CRC data saved from DMA */
 
-   /*
-      @@ ELEMENT = TiStampRts
-      @@ STRUCTURE = SftyParkLockSENTDataType
-      @@ A2L_TYPE = MEASURE
-      @@ DATA_TYPE = ULONG
-      @@ DESCRIPTION = " Time stamp RTS  "
-      @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
-      @@ END
-      */
+    /*
+    @@ ELEMENT = TiStampRts
+    @@ STRUCTURE = SftyParkLockSENTDataType
+    @@ A2L_TYPE = MEASURE
+    @@ DATA_TYPE = ULONG
+    @@ DESCRIPTION = " Time stamp RTS  "
+    @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+    @@ END
+    */
    uint32  TiStampRts; /*!< SENT timestamp saved from DMA */
 
     /*
@@ -398,19 +398,19 @@ typedef struct SftyParkLockSENTDataType_
     @@ DATA_TYPE = STRUCTURE SftyParkLockType
     @@ END
     */
-   SftyParkLockType RxIntStat; /*!< SENT INT status saved from DMA */
+    SftyParkLockType RxIntStat; /*!< SENT INT status saved from DMA */
 
 
-      /*
-      @@ ELEMENT = TiStampDma
-      @@ STRUCTURE = SftyParkLockSENTDataType
-      @@ A2L_TYPE = MEASURE
-      @@ DATA_TYPE = ULONG
-      @@ DESCRIPTION = " Time stamp DMA  "
-      @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
-      @@ END
-      */
-   uint32  TiStampDma; /*!< Timestamp saved from DMA */
+    /*
+    @@ ELEMENT = TiStampDma
+    @@ STRUCTURE = SftyParkLockSENTDataType
+    @@ A2L_TYPE = MEASURE
+    @@ DATA_TYPE = ULONG
+    @@ DESCRIPTION = " Time stamp DMA  "
+    @@ GROUP = SftyParkLockPosnAcqn | SftyParkLockPosnAcqn_Local
+    @@ END
+    */
+   uint32  TiStampDma; /*!< DMA Timestamp saved from DMA */
 
 }SftyParkLockSENTDataType;
 
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyParkLockPosnAcqn/include/SftyParkLockPosnAcqn_data.h b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyParkLockPosnAcqn/include/SftyParkLockPosnAcqn_data.h
index e1f68838b..063465214 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyParkLockPosnAcqn/include/SftyParkLockPosnAcqn_data.h
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyParkLockPosnAcqn/include/SftyParkLockPosnAcqn_data.h
@@ -14,29 +14,10 @@
 #ifndef\tSFTYPARKLOCKPOSNACQN_DATA_H
 #define\tSFTYPARKLOCKPOSNACQN_DATA_H
 
-
-#include "AddGlobalDefines.h"
 #include "Platform_Types.h"
 #include "Compiler.h"
-
-#ifndef\t_online
-#define\t_online
-#endif
-#ifndef\t_param
-#define\t_param
-#endif
-#ifndef\t_axis
-#define\t_axis
-#endif
-#ifndef\t_map
-#define\t_map
-#endif
-
-
-#include\t"AddStructTypes.h"
-#include\t"AddEnumTypes.h"
-
-
+#include "AddStructTypes.h"
+#include "AddEnumTypes.h"
 
 
 /* Begin: SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_2_SLOW_INIT_8 (online) */
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyParkLockPosnAcqn/src/SftyParkLockPosnAcqn.c b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyParkLockPosnAcqn/src/SftyParkLockPosnAcqn.c
index 64a526e68..7819ee75a 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyParkLockPosnAcqn/src/SftyParkLockPosnAcqn.c
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyParkLockPosnAcqn/src/SftyParkLockPosnAcqn.c
@@ -1,517 +1,454 @@
-/* ********************************************************************** */\r
-/* Sourcefile: SftyParkLockPosnAcqn.c                                            */\r
-/*                                                                        */\r
-/* Project: 100KW                                                         */\r
-/* Aurix                                                                  */\r
-/*                                                                        */\r
-/* Department: Valeo Siemens eAutomotive                                  */\r
-/* I DT EC R&D                                                            */\r
-/* ********************************************************************** */\r
-/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2021              */\r
-/* All Rights Reserved. Confidential                                      */\r
-/* ********************************************************************** */\r
-\r
-/*!\r
-* \\defgroup SftyParkLockPosnAcqn SftyParkLockPosnAcqn - Safety parklock position acquiration\r
-*           This module get and check the parklock position message. \r
-*           \r
-*/\r
-\r
-/*!\r
- * \\page SftyParkLockPosnAcqn_reqs Parklock position acquiration Requirements\r
- * \\ingroup SftyParkLockPosnAcqn\r
- * \\brief Parklock position acquiration Requirements\r
- */\r
-\r
-/*!\r
-* \\defgroup SftyParkLockPosnAcqn_module Parklock position acquiration Module\r
-* \\ingroup SftyParkLockPosnAcqn\r
-* @{\r
-*/\r
-\r
-\r
-\r
-/*================== [includes] =============================================*/\r
-#include "Std_Types.h"\r
-#include "Sfty_Types.h"\r
-#include "AddEnumTypes.h"\r
-#include "Mathlib.h"\r
-#include "ErrDeb_cmn.h"\r
-#include "SftyParkLockPosnAcqn_data.h"\r
-#include "SftyParkLockPosnAcqn.h"\r
-#include "SftyUtils.h"\r
-#include "SftyDma.h"\r
-#include "SftyCrc.h"\r
-#include "SftyReplcmt_data.h"\r
-\r
-/* Core 1 core communication */\r
-#include "C2cComSftyData.h"\r
-/*================== [defines] ==============================================*/\r
-\r
-/*================== [type definitions] =====================================*/\r
-\r
-/*================== [local data] ===========================================*/\r
-\r
-/* Begin: SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_CMN_SLOW_INIT_32 (online) */\r
-#define SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_2_SLOW_INIT_32\r
-#include "MemMap.h"\r
-/*\r
-@@ SYMBOL = SftyParkLockPosnAcqnLstRtsTiStamp\r
-@@ A2L_TYPE = MEASURE\r
-@@ DATA_TYPE = ULONG\r
-@@ DESCRIPTION = "Safety parklock position last time stamp"\r
-@@ GROUP = SftyParkLockPosnAcqn\r
-@@ END\r
-*/\r
-STATIC VAR(uint32, SFTYPARKLOCKPOSNACQN_VAR) SftyParkLockPosnAcqnLstRtsTiStamp = 0U;\r
-\r
-#define SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_2_SLOW_INIT_32\r
-#include "MemMap.h"\r
-/* Stop: SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_CMN_SLOW_INIT_32 (online) */\r
-\r
-/* Begin: SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_CMN_SLOW_INIT_32 (online) */\r
-#define SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_2_SLOW_INIT_32\r
-#include "MemMap.h"\r
-/*\r
-@@ SYMBOL = SftyParkLockPosnAcqnCurrRtsTiStamp\r
-@@ A2L_TYPE = MEASURE\r
-@@ DATA_TYPE = ULONG\r
-@@ DESCRIPTION = "Safety parklock position current time stamp"\r
-@@ GROUP = SftyParkLockPosnAcqn\r
-@@ END\r
-*/\r
-STATIC VAR(uint32, SFTYPARKLOCKPOSNACQN_VAR) SftyParkLockPosnAcqnCurrRtsTiStamp = 0U;\r
-\r
-#define SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_2_SLOW_INIT_32\r
-#include "MemMap.h"\r
-/* Stop: SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_CMN_SLOW_INIT_32 (online) */\r
-\r
-/* Begin: SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_CMN_SLOW_INIT_32 (online) */\r
-#define SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_2_SLOW_INIT_32\r
-#include "MemMap.h"\r
-/*\r
-@@ SYMBOL = SftyParkLockPosnAcqnCurrDmaTiStamp\r
-@@ A2L_TYPE = MEASURE\r
-@@ DATA_TYPE = ULONG\r
-@@ DESCRIPTION = "Safety parklock position Wdi current time stamp"\r
-@@ GROUP = SftyParkLockPosnAcqn\r
-@@ END\r
-*/\r
-STATIC VAR(uint32, SFTYPARKLOCKPOSNACQN_VAR) SftyParkLockPosnAcqnCurrDmaTiStamp = 0U;\r
-\r
-#define SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_2_SLOW_INIT_32\r
-#include "MemMap.h"\r
-/* Stop: SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_CMN_SLOW_INIT_32 (online) */\r
-\r
-\r
-/* Begin: SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_CMN_SLOW_INIT_32 (online) */\r
-#define SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_2_SLOW_INIT_32\r
-#include "MemMap.h"\r
-/*\r
-@@ SYMBOL = SftyParkLockPosnAcqnLstDmaTiStamp\r
-@@ A2L_TYPE = MEASURE\r
-@@ DATA_TYPE = ULONG\r
-@@ DESCRIPTION = "Safety parklock position Wdi last time stamp"\r
-@@ GROUP = SftyParkLockPosnAcqn\r
-@@ END\r
-*/\r
-STATIC VAR(uint32, SFTYPARKLOCKPOSNACQN_VAR) SftyParkLockPosnAcqnLstDmaTiStamp = 0U;\r
-\r
-#define SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_2_SLOW_INIT_32\r
-#include "MemMap.h"\r
-/* Stop: SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_CMN_SLOW_INIT_32 (online) */\r
-\r
-\r
-/* Begin: SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_CMN_SLOW_INIT_32 (online) */\r
-#define SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_2_SLOW_INIT_32\r
-#include "MemMap.h"\r
-/*\r
-@@ SYMBOL = SftyParkLockPosnAcqnDeltaRtsTiStamp\r
-@@ A2L_TYPE = MEASURE\r
-@@ DATA_TYPE = ULONG\r
-@@ DESCRIPTION = "Safety parklock position delta time stamp"\r
-@@ GROUP = SftyParkLockPosnAcqn\r
-@@ END\r
-*/\r
-STATIC VAR(uint32, SFTYPARKLOCKPOSNACQN_VAR) SftyParkLockPosnAcqnDeltaRtsTiStamp = 0U;\r
-\r
-#define SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_2_SLOW_INIT_32\r
-#include "MemMap.h"\r
-/* Stop: SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_CMN_SLOW_INIT_32 (online) */\r
-\r
-\r
-/* Begin: SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_CMN_SLOW_INIT_32 (online) */\r
-#define SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_2_SLOW_INIT_32\r
-#include "MemMap.h"\r
-/*\r
-@@ SYMBOL = SftyParkLockPosnAcqnCrcVal\r
-@@ A2L_TYPE = MEASURE\r
-@@ DATA_TYPE = ULONG\r
-@@ DESCRIPTION = "Safety parklock position delta crc value"\r
-@@ GROUP = SftyParkLockPosnAcqn\r
-@@ END\r
-*/\r
-STATIC VAR(uint32, SFTYPARKLOCKPOSNACQN_VAR) SftyParkLockPosnAcqnCrcVal = 0U;\r
-\r
-#define SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_2_SLOW_INIT_32\r
-#include "MemMap.h"\r
-/* Stop: SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_CMN_SLOW_INIT_32 (online) */\r
-\r
-\r
-/*================== [definition of local functions] ========================*/\r
-\r
-/* Begin: SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_2_SLOW_INIT_8 (online) */\r
-#define SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_2_SLOW_INIT_8\r
-#include "MemMap.h"\r
-/*\r
-@@ SYMBOL = SftyParkLockPosnAcqnSnsrSts\r
-@@ A2L_TYPE = MEASURE\r
-@@ DATA_TYPE = UBYTE\r
-@@ DESCRIPTION = "Safety parklock position acquire sensor status"\r
-@@ GROUP = SftyParkLockPosnAcqn\r
-@@ END\r
-*/\r
-STATIC VAR(uint8, SFTYPARKLOCKPOSNACQN_VAR) SftyParkLockPosnAcqnSnsrSts = 0U;\r
-\r
-#define SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_2_SLOW_INIT_8\r
-#include "MemMap.h"\r
-/* Stop: SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_2_SLOW_INIT_8 (online) */\r
-\r
-/* Begin: SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_2_SLOW_INIT_8 (online) */\r
-#define SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_2_SLOW_INIT_8\r
-#include "MemMap.h"\r
-/*\r
-@@ SYMBOL = SftyParkLockPosnAcqnSnsrWdiFlg\r
-@@ A2L_TYPE = MEASURE\r
-@@ DATA_TYPE = UBYTE\r
-@@ DESCRIPTION = "Safety parklock position acquire sensor watch dog interrupt flag"\r
-@@ GROUP = SftyParkLockPosnAcqn\r
-@@ END\r
-*/\r
-STATIC VAR(uint8, SFTYPARKLOCKPOSNACQN_VAR) SftyParkLockPosnAcqnSnsrWdiFlg = 0U;\r
-\r
-#define SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_2_SLOW_INIT_8\r
-#include "MemMap.h"\r
-/* Stop: SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_2_SLOW_INIT_8 (online) */\r
-\r
-\r
-/* Begin: SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_CMN_SLOW_INIT_32 (online) */\r
-#define SFTYPARKLOCKPOSNACQN_START_SEC_VAR_AREA_2_SLOW_INIT_32\r
-#include "MemMap.h"\r
-/*\r
-@@ INSTANCE = SftyParkLockPosnAcqnSENTSnrDataRx\r
-@@ STRUCTURE = SftyParkLockSENTDataType\r
-@@ END\r
-*/\r
-STATIC VAR(SftyParkLockSENTDataType, SFTYPARKLOCKPOSNACQN_VAR) SftyParkLockPosnAcqnSENTSnrDataRx = {{0U},{0U},{0U},{0U},{0U}};\r
-\r
-#define SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_2_SLOW_INIT_32\r
-#include "MemMap.h"\r
-/* Stop: SFTYPARKLOCKPOSNACQN_STOP_SEC_VAR_AREA_CMN_SLOW_INIT_32 (online) */\r
-\r
-\r
-/*================== [definition of global functions] =======================*/\r
-\r
-/* ****************************** AREA CMN ********************************* */\r
-/* ********************************** SLOW ********************************* */\r
-\r
-\r
-\r
-#define SFTYPARKLOCKPOSNACQN_START_SEC_CODE_AREA_2_SLOW\r
-#include "MemMap.h"\r
-\r
-/***********************************************************************************/\r
-/*\r
- * \\fn      void SftyParkLockPosnAcqn_InitArea2ErrMonrStVal(void)\r
- * \\brief   This Function clear SftyParkLockPosnAcqn monitor status.\r
- * Parent DD SftyParkLockPosnAcqn_MainFunctionArea2\r
- * \\return : None\r
- */\r
-/***********************************************************************************/\r
-\r
-LOCAL_INLINE void SftyParkLockPosnAcqn_InitArea2ErrMonrStVal(void)\r
-{\r
-\t/* ************* Source code **************** */\r
-\tSftyParkLockPosnAcqnSnrToutErrMonrSt = ERR_DEB_MONR_STS_INACTIVE;\r
-\tSftyParkLockPosnAcqnSnrDataRxCrcErrMonrSt = ERR_DEB_MONR_STS_INACTIVE;\r
-}\r
-\r
-/***********************************************************************************/\r
-/*\r
- * \\fn      void SftyParkLockPosnAcqn_GetParkLockVal(void)\r
- * \\brief   This Function shall get the value from the DMA or Replacement.\r
- * Parent DD SftyParkLockPosnAcqn_MainFunctionArea2\r
- * \\return : None\r
- */\r
-/***********************************************************************************/\r
-\r
-LOCAL_INLINE void SftyParkLockPosnAcqn_GetParkLockVal(void)\r
-{\r
-\t/* ************* Source code **************** */\r
-    /* replacement flag is true, use the replacement value,otherwise use the DMA value*/\r
-#ifndef SERIES_PRODUCTION\r
-\r
-\tif(SftyReplcmParkLockPosnAcqnEnaFlg == TRUE)\r
-\t{\r
-\t    /* Get the parklock input from the replacement value */\r
-        SftyParkLockPosnAcqnSnsrSts = SftyReplcmParkLockActrPosSnsrSts;\r
-\t\tSftyParkLockPosnAcqnSENTSnrDataRx.CrcData.all = SftyReplcmParkLockPosnAcqnSENTSnrDataRxCrcVal;\r
-\t\tSftyParkLockPosnAcqnSENTSnrDataRx.RxIntStat.all = SftyReplcmParkLockPosnAcqnSENTSnrDataRxIntStatVal;\r
-\t\tSftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.all = SftyReplcmParkLockPosnAcqnSENTSnrDataRxSnsrDataVal;\r
-\t\tSftyParkLockPosnAcqnSENTSnrDataRx.TiStampDma = SftyReplcmParkLockPosnAcqnSENTSnrDataRxTiStampDmaVal;\r
-\t\tSftyParkLockPosnAcqnSENTSnrDataRx.TiStampRts = SftyReplcmParkLockPosnAcqnSENTSnrDataRxTiStampRtsSVal;\t    \r
- \r
-\t}\r
-\telse\r
-\t\t\r
-#endif  \r
-\t{\r
-\t\tSftyParkLockPosnAcqnSnsrSts = SftyReplcmParkLockActrPosSnsrSts; /*Need to be replaced by  SftyparklockActrSnsrSts*/\r
-\t    SftyParkLockPosnAcqnSENTSnrDataRx.CrcData.all = SftyDmaParkLockPosnAcqnSENTSnrDataRx.CrcData;\r
-\t\tSftyParkLockPosnAcqnSENTSnrDataRx.RxIntStat.all = SftyDmaParkLockPosnAcqnSENTSnrDataRx.RxIntStat;\r
-\t\tSftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.all = SftyDmaParkLockPosnAcqnSENTSnrDataRx.SnsrData;\r
-\t\tSftyParkLockPosnAcqnSENTSnrDataRx.TiStampDma = SftyDmaParkLockPosnAcqnSENTSnrDataRx.TiStampDma;\r
-\t\tSftyParkLockPosnAcqnSENTSnrDataRx.TiStampRts = SftyDmaParkLockPosnAcqnSENTSnrDataRx.TiStampRts;\r
-\t}\r
-\r
-}\r
-/******************************************************************/\r
-/*!\r
- * \\fn      uint8 SftyParkLockPosnAcqn_ChkRtsTiStamp\r
- * \\brief   This function checks timestamp of the frame\r
- * \\Parent_DD  SftyParkLockPosnAcqn_MainFunctionArea2\r
- * \\return  uint8 - RTS timestamp check status\r
- * \\retVal\r: ERR_DEB_MONR_STS_PASSED - Return timestamp check as passed\r
- * \\retVal  ERR_DEB_MONR_STS_FAILED - Return timestamp check as failed\r
- */\r
-/******************************************************************/\r
-LOCAL_INLINE uint8 SftyParkLockPosnAcqn_ChkRtsTiStamp(void)\r
-{\r
-   uint8 retVal;\r
-\r
-   /* Get current timestamp */\r
-   SftyParkLockPosnAcqnCurrRtsTiStamp = SftyParkLockPosnAcqnSENTSnrDataRx.TiStampRts;\r
-\r
-      /* Compare with current time stamp and last time stamp to confirm if the time stamp is updated*/\r
-\t  retVal = (uint8)SftyUtils_ChkTiStamp(&SftyParkLockPosnAcqnLstRtsTiStamp, &SftyParkLockPosnAcqnCurrRtsTiStamp);\r
-\r
-\t  if(retVal == ERR_DEB_MONR_STS_PASSED)\r
-\t  {    \r
-\t       /*if time updated, check if delta time is less than 1ms */\r
-\t       SftyParkLockPosnAcqnDeltaRtsTiStamp = SftyParkLockPosnAcqnCurrRtsTiStamp - SftyParkLockPosnAcqnLstRtsTiStamp;\r
-\t  \r
-\t\t   if((SftyParkLockPosnAcqnDeltaRtsTiStamp < SftyParkLockPosnAcqnDeltaRtsTiStampThd))\r
-\t\t\t{\r
-\t\t        /* if the delta time stamp is less than 1ms, set the timeout monitor to PASSED*/\r
-\t\t\t\tretVal = ERR_DEB_MONR_STS_PASSED;    \r
-\t\t\t}\r
-\t\t\telse\r
-\t\t\t{\r
-\t            /* if the delta time stamp is over than 1ms, set the timeout monitor to FAILED*/\r
-\t\t\t\tretVal = ERR_DEB_MONR_STS_FAILED; \t \r
-\t\t\t}\r
-\r
-\t  }\r
-\t  else\r
-\t  {\r
-\t       /* if the time stamp is updated, set the timeout monitor to FAILED*/\r
-           retVal = ERR_DEB_MONR_STS_FAILED; \r
-\t  }\r
-   \r
-\r
-   return retVal;\r
-\r
-}\r
-\r
-/***********************************************************************************/\r
-/*\r
- * \\fn      void SftyParkLockPosnAcqn_TimeoutCheck(void)\r
- * \\brief   This Function check parklock position message timeout.\r
- * Parent DD SftyParkLockPosnAcqn_MainFunctionArea2\r
- * \\return : None\r
- */\r
-/***********************************************************************************/\r
-\r
-LOCAL_INLINE void SftyParkLockPosnAcqn_TimeoutCheck(void)\r
-{\r
-    uint8 errMonSts;\r
-\t/************** Source code *****************/\r
-    /* Check if the parklock sensor power supply is normal */\r
-\tif(SftyParkLockPosnAcqnSnsrSts == TRUE)\r
-\t{\r
-\t     /* Get the SftyParkLockPosnAcqn WDI timestamp*/\r
-         SftyParkLockPosnAcqnCurrDmaTiStamp = SftyParkLockPosnAcqnSENTSnrDataRx.TiStampDma;\r
-\t\t \r
-\t\t /* Check if the WDI timestamp updated normally*/\r
-\t\t errMonSts = SftyUtils_ChkTiStamp(&SftyParkLockPosnAcqnLstDmaTiStamp, &SftyParkLockPosnAcqnCurrDmaTiStamp);\r
-\r
-\t\t /*If the WDI timestamp update normally*/\r
-\t\t if(errMonSts == ERR_DEB_MONR_STS_PASSED)\r
-\t\t {\r
-\t\t    /* Get the SftyParkLockSnsrWdi flag*/\r
-\t\t    SftyParkLockPosnAcqnSnsrWdiFlg = SftyParkLockPosnAcqnSENTSnrDataRx.RxIntStat.B.bit13;\r
-\r
-\t\t\t/* Check if the WDI flag is triggered */\r
-            if(SftyParkLockPosnAcqnSnsrWdiFlg == FALSE)\r
-\t        {\r
-                /* Check parklock time stamp and update to the tim out monitor status*/\r
-\t\t        SftyParkLockPosnAcqnSnrToutErrMonrSt = SftyParkLockPosnAcqn_ChkRtsTiStamp();\t \r
-\t\t\t\t\r
-\t        }\r
-\t\t    else\r
-\t        {\r
-\t            /* Set the time out monitor status to FAILED*/\r
-\t\t        SftyParkLockPosnAcqnSnrToutErrMonrSt = ERR_DEB_MONR_STS_FAILED;\r
-\t\t\t\t\r
-\t\t\t   /* If WDI flag is triggered, clear the WDI flag */\r
-\t\t\t   SENT_WDI_FLG_CLR = 1U;\r
-\t\t    }\r
-\r
-\t\t }\r
-\t     else\r
-\t     {\r
-\t\t      /* Set the time out monitor status to FAILED*/\r
-\t\t\t  SftyParkLockPosnAcqnSnrToutErrMonrSt = ERR_DEB_MONR_STS_FAILED;\r
-\t     }\r
-\t    \r
-\t}\r
-\telse\r
-\t{\r
-\t\t/*Do nothing*/\r
-\t}\r
-\t\t\t\r
-\t\r
-}\r
-\r
-\r
-/***********************************************************************************/\r
-/*\r
- * \\fn      void SftyParkLockPosnAcqn_CrcValCheck(void)\r
- * \\brief   This Function check parklock position CRC value.\r
- * Parent DD SftyParkLockPosnAcqn_MainFunctionArea2\r
- * \\return : None\r
- */\r
-/***********************************************************************************/\r
-\r
-LOCAL_INLINE void SftyParkLockPosnAcqn_CrcValCheck(void)\r
-{\r
-     uint8 crcBuffer[6];\r
-\t/* ************* Source code **************** */\r
-\t/* If the timeout check passed, check the crc value*/ \r
-\tif(SftyParkLockPosnAcqnSnrToutErrMonrSt == ERR_DEB_MONR_STS_PASSED)\r
-\t{\r
-\t   /* Get the nibble data value */\r
-\t   crcBuffer[0] = (uint8)SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.Nibble.data0;\r
-\t   crcBuffer[1] = (uint8)SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.Nibble.data1;\r
-\t   crcBuffer[2] = (uint8)SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.Nibble.data2;\r
-\t   crcBuffer[3] = (uint8)SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.Nibble.data3;\r
-\t   crcBuffer[4] = (uint8)SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.Nibble.data4;\r
-\t   crcBuffer[5] = (uint8)SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.Nibble.data5;\r
-\r
-\t   /* Calculate the CRC value from the nibble data input */\r
-       SftyParkLockPosnAcqnCrcVal = SftyCrc_CalcCRC4((const uint8*)crcBuffer,SFTYPARKLOCKPOSNACQN_CRC_CALCN_BUF_SIZE,\r
-\t   \t                                             SFTYPARKLOCKPOSNACQN_4BIT_CRC_INIT_SEED_VALUE,TRUE);\r
-       /* check the crc value  */\r
-\t   if(SftyParkLockPosnAcqnCrcVal == SftyParkLockPosnAcqnSENTSnrDataRx.CrcData.Nibble.data0)\r
-\t   {\r
-\t       /* If calculated CRC is equal to niblle data crc value, set the crc monitor status to passed*/\r
-\t       SftyParkLockPosnAcqnSnrDataRxCrcErrMonrSt = ERR_DEB_MONR_STS_PASSED;\r
-\t   }\r
-\t   else\r
-\t   {\r
-\t       /* If calculated CRC is not equal to niblle data crc value, set the crc monitor status to failed*/\r
-\t       SftyParkLockPosnAcqnSnrDataRxCrcErrMonrSt = ERR_DEB_MONR_STS_FAILED;\r
-\t\t   \r
-\t   }\r
-\t}\r
-}\r
-\r
-\r
-/***********************************************************************************/\r
-/*\r
- * \\fn      void SftyParkLockPosnAcqn_ExtractPosRawVal(void)\r
- * \\brief   This Function extract parklock position raw value.\r
- * Parent DD SftyParkLockPosnAcqn_MainFunctionArea2\r
- * \\return : None\r
- */\r
-/***********************************************************************************/\r
-\r
-LOCAL_INLINE void SftyParkLockPosnAcqn_ExtractPosRawVal(void)\r
-{\r
-\t/* ************* Source code **************** */\r
-\tif(SftyParkLockPosnAcqnSnrDataRxCrcErrMonrSt == ERR_DEB_MONR_STS_PASSED)\r
-\t{\r
-\t   /* If both timeout check and crc check are passed, update D0 to D2 the raw value */\r
-       SftyParkLockPosnAcqnRawVal = SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.Msg.msg0;\r
-\t}\r
-\telse\r
-\t{\r
-      /* Do nothing */\r
-\t}\r
-}\r
-\r
-\r
-/***********************************************************************************/\r
-/*\r
- * \\fn      void SftyParkLockPosnAcqn_MainFunctionArea2(void)\r
- * \\brief   This is the mian function of SftyParkLockPosnAcqn component.\r
- * \\return : None\r
- */\r
-/***********************************************************************************/\r
-FUNC(void, SFTYPARKLOCKPOSNACQN_CODE) SftyParkLockPosnAcqn_MainFunctionArea2(void)\r
-{\r
-   /* ******** Variables declaration *********** */\r
-   \r
-   /* ************* Source code **************** */\r
-   /* Clear the all error monitor status */\r
-   SftyParkLockPosnAcqn_InitArea2ErrMonrStVal();\r
-\r
-   /* Get the park lock input value */\r
-   SftyParkLockPosnAcqn_GetParkLockVal();\r
-\r
-   /* Check the timeout */\r
-   SftyParkLockPosnAcqn_TimeoutCheck();\r
-\r
-   /* Check the CRC value */\r
-   SftyParkLockPosnAcqn_CrcValCheck();\r
-\r
-   /*Extract the position to raw value */\r
-   SftyParkLockPosnAcqn_ExtractPosRawVal();\r
-\r
-   return;\r
-}\r
-\r
-\r
-/***********************************************************************************/\r
-/*\r
- * \\fn      void SftyParkLockPosnAcqn_InitArea2(void)\r
- * \\brief   This Function initializes SftyParkLockPosnAcqn component.\r
- * \\return : None\r
- */\r
-/***********************************************************************************/\r
-FUNC(void, SFTYPARKLOCKPOSNACQN_CODE) SftyParkLockPosnAcqn_InitArea2(void)\r
-{\r
-   /* ******** Variables declaration *********** */\r
-   \r
-   /* Initialize the raw value and monitor status */\r
-   SftyParkLockPosnAcqnRawVal = 0U;\r
-   SftyParkLockPosnAcqnSnrToutErrMonrSt = ERR_DEB_MONR_STS_INACTIVE;\r
-   SftyParkLockPosnAcqnSnrDataRxCrcErrMonrSt = ERR_DEB_MONR_STS_INACTIVE;\r
-   \r
-   return;\r
-}\r
-\r
-\r
-#define SFTYPARKLOCKPOSNACQN_STOP_SEC_CODE_AREA_2_SLOW\r
-#include "MemMap.h"\r
-\r
-/*================== [closure] ==============================================*/\r
-\r
-/*! @} doxygen end of group definition */\r
-/* ********************************************************************** */\r
-/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2021              */\r
-/* All Rights Reserved. Confidential                                      */\r
-/* ********************************************************************** */\r
-/*==================[end of file]============================================*/\r
-\r
-\r
+/* ********************************************************************** */
+/* Sourcefile: SftyParkLockPosnAcqn.c                                            */
+/*                                                                        */
+/* Project: 100KW                                                         */
+/* Aurix                                                                  */
+/*                                                                        */
+/* Department: Valeo Siemens eAutomotive                                  */
+/* I DT EC R&D                                                            */
+/* ********************************************************************** */
+/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2021              */
+/* All Rights Reserved. Confidential                                      */
+/* ********************************************************************** */
+
+/*!
+* \\defgroup SftyParkLockPosnAcqn SftyParkLockPosnAcqn - Safety parklock position acquiration
+*           This module get and check the parklock position message. 
+*           
+*/
+
+/*!
+ * \\page SftyParkLockPosnAcqn_reqs Parklock position acquiration Requirements
+ * \\ingroup SftyParkLockPosnAcqn
+ * \\brief Parklock position acquiration Requirements
+ */
+
+/*!
+* \\defgroup SftyParkLockPosnAcqn_module Parklock position acquiration Module
+* \\ingroup SftyParkLockPosnAcqn
+* @{
+*/
+
+
+
+/*================== [includes] =============================================*/
+#include "AddEnumTypes.h"
+#include "Mathlib.h"
+#include "ErrDeb_cmn.h"
+#include "SftyParkLockPosnAcqn_data.h"
+#include "SftyParkLockPosnAcqn.h"
+#include "SftyUtils.h"
+#include "SftyDma.h"
+#include "SftyCrc.h"
+#include "SftyReplcmt_data.h"
+/*================== [defines] ==============================================*/
+
+/*================== [type definitions] =====================================*/
+
+/*================== [local data] ===========================================*/
+
+/* Begin: SFTYPARKLOCKPOSNACQN_AREA_2_START_SEC_VAR_FAST_CLEARED (online) */
+#define SFTYPARKLOCKPOSNACQN_AREA_2_START_SEC_VAR_FAST_CLEARED
+#include "MemMap.h"
+/*
+@@ SYMBOL = SftyParkLockPosnAcqnLstRtsTiStamp
+@@ A2L_TYPE = MEASURE
+@@ DATA_TYPE = ULONG
+@@ DESCRIPTION = "Safety parklock position last time stamp"
+@@ GROUP = SftyParkLockPosnAcqn
+@@ END
+*/
+STATIC VAR(uint32, SFTYPARKLOCKPOSNACQN_VAR) SftyParkLockPosnAcqnLstRtsTiStamp;
+
+
+/*
+@@ SYMBOL = SftyParkLockPosnAcqnCurrRtsTiStamp
+@@ A2L_TYPE = MEASURE
+@@ DATA_TYPE = ULONG
+@@ DESCRIPTION = "Safety parklock position current time stamp"
+@@ GROUP = SftyParkLockPosnAcqn
+@@ END
+*/
+STATIC VAR(uint32, SFTYPARKLOCKPOSNACQN_VAR) SftyParkLockPosnAcqnCurrRtsTiStamp;
+
+
+/*
+@@ SYMBOL = SftyParkLockPosnAcqnCurrDmaTiStamp
+@@ A2L_TYPE = MEASURE
+@@ DATA_TYPE = ULONG
+@@ DESCRIPTION = "Safety parklock position Wdi current time stamp"
+@@ GROUP = SftyParkLockPosnAcqn
+@@ END
+*/
+STATIC VAR(uint32, SFTYPARKLOCKPOSNACQN_VAR) SftyParkLockPosnAcqnCurrDmaTiStamp;
+
+
+/*
+@@ SYMBOL = SftyParkLockPosnAcqnLstDmaTiStamp
+@@ A2L_TYPE = MEASURE
+@@ DATA_TYPE = ULONG
+@@ DESCRIPTION = "Safety parklock position Wdi last time stamp"
+@@ GROUP = SftyParkLockPosnAcqn
+@@ END
+*/
+STATIC VAR(uint32, SFTYPARKLOCKPOSNACQN_VAR) SftyParkLockPosnAcqnLstDmaTiStamp;
+
+
+/*
+@@ SYMBOL = SftyParkLockPosnAcqnDeltaRtsTiStamp
+@@ A2L_TYPE = MEASURE
+@@ DATA_TYPE = ULONG
+@@ DESCRIPTION = "Safety parklock position delta time stamp"
+@@ GROUP = SftyParkLockPosnAcqn
+@@ END
+*/
+STATIC VAR(uint32, SFTYPARKLOCKPOSNACQN_VAR) SftyParkLockPosnAcqnDeltaRtsTiStamp;
+
+
+/*
+@@ SYMBOL = SftyParkLockPosnAcqnCrcVal
+@@ A2L_TYPE = MEASURE
+@@ DATA_TYPE = ULONG
+@@ DESCRIPTION = "Safety parklock position delta crc value"
+@@ GROUP = SftyParkLockPosnAcqn
+@@ END
+*/
+STATIC VAR(uint32, SFTYPARKLOCKPOSNACQN_VAR) SftyParkLockPosnAcqnCrcVal;
+
+/*
+@@ SYMBOL = SftyParkLockPosnAcqnSnsrSts
+@@ A2L_TYPE = MEASURE
+@@ DATA_TYPE = UBYTE
+@@ DESCRIPTION = "Safety parklock position acquire sensor status"
+@@ GROUP = SftyParkLockPosnAcqn
+@@ END
+*/
+STATIC VAR(uint8, SFTYPARKLOCKPOSNACQN_VAR) SftyParkLockPosnAcqnSnsrSts;
+
+/*
+@@ SYMBOL = SftyParkLockPosnAcqnSnsrWdiFlg
+@@ A2L_TYPE = MEASURE
+@@ DATA_TYPE = UBYTE
+@@ DESCRIPTION = "Safety parklock position acquire sensor watch dog interrupt flag"
+@@ GROUP = SftyParkLockPosnAcqn
+@@ END
+*/
+STATIC VAR(uint8, SFTYPARKLOCKPOSNACQN_VAR) SftyParkLockPosnAcqnSnsrWdiFlg;
+
+
+/*
+@@ INSTANCE = SftyParkLockPosnAcqnSENTSnrDataRx
+@@ STRUCTURE = SftyParkLockSENTDataType
+@@ END
+*/
+STATIC VAR(SftyParkLockSENTDataType, SFTYPARKLOCKPOSNACQN_VAR) SftyParkLockPosnAcqnSENTSnrDataRx;
+
+/* End: SFTYPARKLOCKPOSNACQN_AREA_2_STOP_SEC_VAR_FAST_CLEARED (online) */
+#define SFTYPARKLOCKPOSNACQN_AREA_2_STOP_SEC_VAR_FAST_CLEARED
+#include "MemMap.h"
+
+
+
+/*================== [definition of global functions] =======================*/
+/* ********************************** SLOW ********************************* */
+
+#define SFTYPARKLOCKPOSNACQN_START_SEC_CODE_AREA_2_SLOW
+#include "MemMap.h"
+
+/***********************************************************************************/
+/*
+ * \\fn      void SftyParkLockPosnAcqn_InitArea2ErrMonrStVal(void)
+ * \\brief   This Function clear SftyParkLockPosnAcqn monitor status.
+ * Parent DD SftyParkLockPosnAcqn_MainFunctionArea2
+ * \\return : None
+ */
+/***********************************************************************************/
+
+LOCAL_INLINE void SftyParkLockPosnAcqn_InitArea2ErrMonrStVal(void)
+{
+\t/* Initialize all monitor status to inactive */
+\tSftyParkLockPosnAcqnSnrToutErrMonrSt = ERR_DEB_MONR_STS_INACTIVE;
+\tSftyParkLockPosnAcqnSnrDataRxCrcErrMonrSt = ERR_DEB_MONR_STS_INACTIVE;
+}
+
+/***********************************************************************************/
+/*
+ * \\fn      void SftyParkLockPosnAcqn_GetParkLockVal(void)
+ * \\brief   This Function shall get the value from the DMA or Replacement.
+ * Parent DD SftyParkLockPosnAcqn_MainFunctionArea2
+ * \\return : None
+ */
+/***********************************************************************************/
+
+LOCAL_INLINE void SftyParkLockPosnAcqn_GetParkLockVal(void)
+{
+\t/* ************* Source code **************** */
+    /* replacement flag is true, use the replacement value,otherwise use the DMA value*/
+#ifndef SERIES_PRODUCTION
+
+\tif(SftyReplcmParkLockPosnAcqnEnaFlg == TRUE)
+\t{
+\t    /* Get the parklock input from the replacement value */
+        SftyParkLockPosnAcqnSnsrSts = SftyReplcmParkLockActrPosSnsrSts;
+\t\tSftyParkLockPosnAcqnSENTSnrDataRx.CrcData.all = SftyReplcmParkLockPosnAcqnSENTSnrDataRxCrcVal;
+\t\tSftyParkLockPosnAcqnSENTSnrDataRx.RxIntStat.all = SftyReplcmParkLockPosnAcqnSENTSnrDataRxIntStatVal;
+\t\tSftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.all = SftyReplcmParkLockPosnAcqnSENTSnrDataRxSnsrDataVal;
+\t\tSftyParkLockPosnAcqnSENTSnrDataRx.TiStampDma = SftyReplcmParkLockPosnAcqnSENTSnrDataRxTiStampDmaVal;
+\t\tSftyParkLockPosnAcqnSENTSnrDataRx.TiStampRts = SftyReplcmParkLockPosnAcqnSENTSnrDataRxTiStampRtsSVal;\t    
+ 
+\t}
+\telse
+\t\t
+#endif  
+\t{   
+\t    /* Get the input from the DMA value */
+\t\tSftyParkLockPosnAcqnSnsrSts = SftyReplcmParkLockActrPosSnsrSts;     /*Need to be replaced by  SftyparklockActrSnsrSts*/
+\t    SftyParkLockPosnAcqnSENTSnrDataRx.CrcData.all = SftyDmaParkLockPosnAcqnSENTSnrDataRx.CrcData;
+\t\tSftyParkLockPosnAcqnSENTSnrDataRx.RxIntStat.all = SftyDmaParkLockPosnAcqnSENTSnrDataRx.RxIntStat;
+\t\tSftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.all = SftyDmaParkLockPosnAcqnSENTSnrDataRx.SnsrData;
+\t\tSftyParkLockPosnAcqnSENTSnrDataRx.TiStampDma = SftyDmaParkLockPosnAcqnSENTSnrDataRx.TiStampDma;
+\t\tSftyParkLockPosnAcqnSENTSnrDataRx.TiStampRts = SftyDmaParkLockPosnAcqnSENTSnrDataRx.TiStampRts;
+\t}
+
+}
+/******************************************************************/
+/*!
+ * \\fn      uint8 SftyParkLockPosnAcqn_ChkRtsTiStamp
+ * \\brief   This function checks timestamp of the frame
+ * \\Parent_DD  SftyParkLockPosnAcqn_MainFunctionArea2
+ * \\return  uint8 - RTS timestamp check status
+ * \\retVal
+: ERR_DEB_MONR_STS_PASSED - Return timestamp check as passed
+ * \\retVal  ERR_DEB_MONR_STS_FAILED - Return timestamp check as failed
+ */
+/******************************************************************/
+LOCAL_INLINE uint8 SftyParkLockPosnAcqn_ChkRtsTiStamp(void)
+{
+   uint8 retVal;
+
+   /* Get current timestamp */
+   SftyParkLockPosnAcqnCurrRtsTiStamp = SftyParkLockPosnAcqnSENTSnrDataRx.TiStampRts;
+
+      /* Compare with current time stamp and last time stamp to confirm if the time stamp is updated*/
+\t  retVal = (uint8)SftyUtils_ChkTiStamp(&SftyParkLockPosnAcqnLstRtsTiStamp, &SftyParkLockPosnAcqnCurrRtsTiStamp);
+
+\t  if(retVal == ERR_DEB_MONR_STS_PASSED)
+\t  {    
+\t       /*if time updated, check if delta time is less than 1ms */
+\t       SftyParkLockPosnAcqnDeltaRtsTiStamp = SftyParkLockPosnAcqnCurrRtsTiStamp - SftyParkLockPosnAcqnLstRtsTiStamp;
+\t  
+\t\t   if((SftyParkLockPosnAcqnDeltaRtsTiStamp < SftyParkLockPosnAcqnDeltaRtsTiStampThd))
+\t\t\t{
+\t\t        /* if the delta time stamp is less than 1ms, set the timeout monitor to PASSED*/
+\t\t\t\tretVal = ERR_DEB_MONR_STS_PASSED;    
+\t\t\t}
+\t\t\telse
+\t\t\t{
+\t            /* if the delta time stamp is over than 1ms, set the timeout monitor to FAILED*/
+\t\t\t\tretVal = ERR_DEB_MONR_STS_FAILED; \t 
+\t\t\t}
+
+\t  }
+\t  else
+\t  {
+\t       /* if the time stamp is updated, set the timeout monitor to FAILED*/
+           retVal = ERR_DEB_MONR_STS_FAILED; 
+\t  }
+   
+
+   return retVal;
+
+}
+
+/***********************************************************************************/
+/*
+ * \\fn      void SftyParkLockPosnAcqn_TimeoutCheck(void)
+ * \\brief   This Function check parklock position message timeout.
+ * Parent DD SftyParkLockPosnAcqn_MainFunctionArea2
+ * \\return : None
+ */
+/***********************************************************************************/
+
+LOCAL_INLINE void SftyParkLockPosnAcqn_TimeoutCheck(void)
+{
+    uint8 errMonSts;
+\t/************** Source code *****************/
+    /* Check if the parklock sensor power supply is normal */
+\tif(SftyParkLockPosnAcqnSnsrSts == TRUE)
+\t{
+\t     /* Get the SftyParkLockPosnAcqn WDI timestamp*/
+         SftyParkLockPosnAcqnCurrDmaTiStamp = SftyParkLockPosnAcqnSENTSnrDataRx.TiStampDma;
+\t\t 
+\t\t /* Check if the WDI timestamp updated normally*/
+\t\t errMonSts = SftyUtils_ChkTiStamp(&SftyParkLockPosnAcqnLstDmaTiStamp, &SftyParkLockPosnAcqnCurrDmaTiStamp);
+
+\t\t /*If the WDI timestamp update normally*/
+\t\t if(errMonSts == ERR_DEB_MONR_STS_PASSED)
+\t\t {
+\t\t    /* Get the SftyParkLockSnsrWdi flag*/
+\t\t    SftyParkLockPosnAcqnSnsrWdiFlg = SftyParkLockPosnAcqnSENTSnrDataRx.RxIntStat.B.bit13;
+
+\t\t\t/* Check if the WDI flag is triggered */
+            if(SftyParkLockPosnAcqnSnsrWdiFlg == FALSE)
+\t        {
+                /* Check parklock time stamp and update to the tim out monitor status*/
+\t\t        SftyParkLockPosnAcqnSnrToutErrMonrSt = SftyParkLockPosnAcqn_ChkRtsTiStamp();\t 
+\t\t\t\t
+\t        }
+\t\t    else
+\t        {
+\t            /* Set the time out monitor status to FAILED*/
+\t\t        SftyParkLockPosnAcqnSnrToutErrMonrSt = ERR_DEB_MONR_STS_FAILED;
+\t\t\t\t
+\t\t\t     /* If WDI flag is triggered, clear the WDI flag */
+\t\t\t     SENT_WDI_FLG_CLR = 1U;
+\t\t    }
+
+\t\t }
+\t     else
+\t     {
+\t\t      /* Set the time out monitor status to FAILED*/
+\t\t\t  SftyParkLockPosnAcqnSnrToutErrMonrSt = ERR_DEB_MONR_STS_FAILED;
+\t     }
+\t    
+\t}
+\telse
+\t{
+\t\t/*Do nothing*/
+\t}
+\t\t\t
+\t
+}
+
+
+/***********************************************************************************/
+/*
+ * \\fn      void SftyParkLockPosnAcqn_CrcCheck(void)
+ * \\brief   This Function check parklock position CRC value.
+ * Parent DD SftyParkLockPosnAcqn_MainFunctionArea2
+ * \\return : None
+ */
+/***********************************************************************************/
+
+LOCAL_INLINE void SftyParkLockPosnAcqn_CrcCheck(void)
+{
+     uint8 crcBuffer[6];
+\t/* ************* Source code **************** */
+\t/* If the timeout check passed, check the crc value*/ 
+\tif(SftyParkLockPosnAcqnSnrToutErrMonrSt == ERR_DEB_MONR_STS_PASSED)
+\t{
+\t   /* Get the nibble data value */
+\t   crcBuffer[0] = (uint8)SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.Nibble.data0;
+\t   crcBuffer[1] = (uint8)SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.Nibble.data1;
+\t   crcBuffer[2] = (uint8)SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.Nibble.data2;
+\t   crcBuffer[3] = (uint8)SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.Nibble.data3;
+\t   crcBuffer[4] = (uint8)SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.Nibble.data4;
+\t   crcBuffer[5] = (uint8)SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.Nibble.data5;
+
+\t   /* Calculate the CRC value from the nibble data input */
+       SftyParkLockPosnAcqnCrcVal = SftyCrc_CalcCRC4((const uint8*)crcBuffer,SFTYPARKLOCKPOSNACQN_CRC_CALCN_BUF_SIZE,
+\t   \t                                             SFTYPARKLOCKPOSNACQN_4BIT_CRC_INIT_SEED_VALUE,TRUE);
+       /* check the crc value  */
+\t   if(SftyParkLockPosnAcqnCrcVal == SftyParkLockPosnAcqnSENTSnrDataRx.CrcData.Nibble.data0)
+\t   {
+\t       /* If calculated CRC is equal to niblle data crc value, set the crc monitor status to passed*/
+\t       SftyParkLockPosnAcqnSnrDataRxCrcErrMonrSt = ERR_DEB_MONR_STS_PASSED;
+\t   }
+\t   else
+\t   {
+\t       /* If calculated CRC is not equal to niblle data crc value, set the crc monitor status to failed*/
+\t       SftyParkLockPosnAcqnSnrDataRxCrcErrMonrSt = ERR_DEB_MONR_STS_FAILED;
+\t\t   
+\t   }
+\t}
+}
+
+
+/***********************************************************************************/
+/*
+ * \\fn      void SftyParkLockPosnAcqn_ExtractPosRawVal(void)
+ * \\brief   This function extract parklock position raw value.
+ * Parent DD SftyParkLockPosnAcqn_MainFunctionArea2
+ * \\return : None
+ */
+/***********************************************************************************/
+
+LOCAL_INLINE void SftyParkLockPosnAcqn_ExtractPosRawVal(void)
+{
+\t/* ************* Source code **************** */
+\tif(SftyParkLockPosnAcqnSnrDataRxCrcErrMonrSt == ERR_DEB_MONR_STS_PASSED)
+\t{
+\t   /* If both timeout check and crc check are passed, update D0 to D2 the raw value */
+       SftyParkLockPosnAcqnRawVal = SftyParkLockPosnAcqnSENTSnrDataRx.SnsrData.Msg.msg0;
+\t}
+\telse
+\t{
+      /* Do nothing */
+\t}
+}
+
+
+/***********************************************************************************/
+/*
+ * \\fn      void SftyParkLockPosnAcqn_MainFunctionArea2(void)
+ * \\brief   This is the mian function of SftyParkLockPosnAcqn component.
+ * \\return : None
+ */
+/***********************************************************************************/
+FUNC(void, SFTYPARKLOCKPOSNACQN_CODE) SftyParkLockPosnAcqn_MainFunctionArea2(void)
+{
+   /* ******** Variables declaration *********** */
+   
+   /* ************* Source code **************** */
+   /* Clear the all error monitor status */
+   SftyParkLockPosnAcqn_InitArea2ErrMonrStVal();
+
+   /* Get the park lock input value */
+   SftyParkLockPosnAcqn_GetParkLockVal();
+
+   /* Check the timeout */
+   SftyParkLockPosnAcqn_TimeoutCheck();
+
+   /* Check the CRC value */
+   SftyParkLockPosnAcqn_CrcCheck();
+
+   /*Extract the position to raw value */
+   SftyParkLockPosnAcqn_ExtractPosRawVal();
+
+   return;
+}
+
+
+/***********************************************************************************/
+/*
+ * \\fn      void SftyParkLockPosnAcqn_InitArea2(void)
+ * \\brief   This Function initializes SftyParkLockPosnAcqn component.
+ * \\return : None
+ */
+/***********************************************************************************/
+FUNC(void, SFTYPARKLOCKPOSNACQN_CODE) SftyParkLockPosnAcqn_InitArea2(void)
+{
+   /* ******** Variables declaration *********** */
+   
+   /* Initialize the raw value and monitor status */
+   SftyParkLockPosnAcqnRawVal = 0U;
+   SftyParkLockPosnAcqnSnrToutErrMonrSt = ERR_DEB_MONR_STS_INACTIVE;
+   SftyParkLockPosnAcqnSnrDataRxCrcErrMonrSt = ERR_DEB_MONR_STS_INACTIVE;
+   
+   return;
+}
+
+
+#define SFTYPARKLOCKPOSNACQN_STOP_SEC_CODE_AREA_2_SLOW
+#include "MemMap.h"
+
+/*================== [closure] ==============================================*/
+
+/*! @} doxygen end of group definition */
+/* ********************************************************************** */
+/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2021              */
+/* All Rights Reserved. Confidential                                      */
+/* ********************************************************************** */
+/*==================[end of file]============================================*/
+
+
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftySdl/src/SftySdl_cfg.c b/src/fw_cu/Components/Safety/Sfty_Cmn/SftySdl/src/SftySdl_cfg.c
index bed8c5c06..ccd794e57 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/SftySdl/src/SftySdl_cfg.c
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftySdl/src/SftySdl_cfg.c
@@ -459,37 +459,40 @@ STATIC FUNC(void, SFTYSDL) SftySdl_FinishInit(void)
 @@ INSTANCE = SftySdlTickCntNormRun._36_ SftySdlRunTiNormRun_SftyLvSplyEvln_MainFunctionArea2
 @@ STRUCTURE = SftySdl_TickCntType
 @@ END
-@@ INSTANCE = SftySdlTickCntNormRun._37_ SftySdlRunTiNormRun_SftyParkLockEvln_MainFastArea0
+@@ INSTANCE = SftySdlTickCntNormRun._37_ SftySdlRunTiNormRun_SftyParkLockPosnAcqn_MainFunctionArea2  
 @@ STRUCTURE = SftySdl_TickCntType
 @@ END
-@@ INSTANCE = SftySdlTickCntNormRun._38_ SftySdlRunTiNormRun_SftyParkLockEvln_MainFunctionArea2
+@@ INSTANCE = SftySdlTickCntNormRun._38_ SftySdlRunTiNormRun_SftyParkLockEvln_MainFastArea0
 @@ STRUCTURE = SftySdl_TickCntType
 @@ END
-@@ INSTANCE = SftySdlTickCntNormRun._39_ SftySdlRunTiNormRun_SftyParkLockEvln_SlowFunctionArea2
+@@ INSTANCE = SftySdlTickCntNormRun._39_ SftySdlRunTiNormRun_SftyParkLockEvln_MainFunctionArea2
 @@ STRUCTURE = SftySdl_TickCntType
 @@ END
-@@ INSTANCE = SftySdlTickCntNormRun._40_ SftySdlRunTiNormRun_SftySdl_MPUChkArea1Slow
+@@ INSTANCE = SftySdlTickCntNormRun._40_ SftySdlRunTiNormRun_SftyParkLockEvln_SlowFunctionArea2
 @@ STRUCTURE = SftySdl_TickCntType
 @@ END
-@@ INSTANCE = SftySdlTickCntNormRun._41_ SftySdlRunTiNormRun_SftySdl_MPUChkArea2Slow
+@@ INSTANCE = SftySdlTickCntNormRun._41_ SftySdlRunTiNormRun_SftySdl_MPUChkArea1Slow
 @@ STRUCTURE = SftySdl_TickCntType
 @@ END
-@@ INSTANCE = SftySdlTickCntNormRun._42_ SftySdlRunTiNormRun_SftySdl_MPUChkAreaCmnSlow
+@@ INSTANCE = SftySdlTickCntNormRun._42_ SftySdlRunTiNormRun_SftySdl_MPUChkArea2Slow
 @@ STRUCTURE = SftySdl_TickCntType
 @@ END
-@@ INSTANCE = SftySdlTickCntNormRun._43_ SftySdlRunTiNormRun_SftySdl_MPUChkArea0
+@@ INSTANCE = SftySdlTickCntNormRun._43_ SftySdlRunTiNormRun_SftySdl_MPUChkAreaCmnSlow
 @@ STRUCTURE = SftySdl_TickCntType
 @@ END
-@@ INSTANCE = SftySdlTickCntNormRun._44_ SftySdlRunTiNormRun_SftySdl_MPUChkArea1
+@@ INSTANCE = SftySdlTickCntNormRun._44_ SftySdlRunTiNormRun_SftySdl_MPUChkArea0
 @@ STRUCTURE = SftySdl_TickCntType
 @@ END
-@@ INSTANCE = SftySdlTickCntNormRun._45_ SftySdlRunTiNormRun_SftySdl_MPUChkArea2
+@@ INSTANCE = SftySdlTickCntNormRun._45_ SftySdlRunTiNormRun_SftySdl_MPUChkArea1
 @@ STRUCTURE = SftySdl_TickCntType
 @@ END
-@@ INSTANCE = SftySdlTickCntNormRun._46_ SftySdlRunTiNormRun_SftySdl_MPUChkAreaCmn
+@@ INSTANCE = SftySdlTickCntNormRun._46_ SftySdlRunTiNormRun_SftySdl_MPUChkArea2
 @@ STRUCTURE = SftySdl_TickCntType
 @@ END
-@@ INSTANCE = SftySdlTickCntNormRun._47_ SftySdlRunTiNormRun_SftySysInit_DebugModChk
+@@ INSTANCE = SftySdlTickCntNormRun._47_ SftySdlRunTiNormRun_SftySdl_MPUChkAreaCmn
+@@ STRUCTURE = SftySdl_TickCntType
+@@ END
+@@ INSTANCE = SftySdlTickCntNormRun._48_ SftySdlRunTiNormRun_SftySysInit_DebugModChk
 @@ STRUCTURE = SftySdl_TickCntType
 @@ END
 */
@@ -548,11 +551,11 @@ CONST(SftySdl_TaskTblType, SFTYSDL) SftySdlNormRunTaskTbl[]=
    ,{ SFTYSDL_AREA_CMN, &SftyErrDeb_MainFunctionAreaCmnSlow,     100u,           6u}
    ,{ SFTYSDL_AREA_0,   &SftyTempEvln_MainFunction,               20u,           8u}
 //   ,{ SFTYSDL_AREA_0,   &SftyLibApp_Run,                        5000u,         4u}
-   ,{ SFTYSDL_AREA_2,\t&SftyParkLockPosnAcqn_MainFunctionArea2,  10u,           0u}
    ,{ SFTYSDL_AREA_CMN, &SftyShutoffPahTst_Main,                  10u,           0u}
    ,{ SFTYSDL_AREA_1,   &SftyCrashSigMon_MainFunction,            10u,           0u}
    ,{ SFTYSDL_AREA_2,   &SftyHvInterlock_MainFunction,            10u,           0u}
    ,{ SFTYSDL_AREA_2,   &SftyLvSplyEvln_MainFunctionArea2,        50u,           0u}
+   ,{ SFTYSDL_AREA_2,\t&SftyParkLockPosnAcqn_MainFunctionArea2,  10u,           0u}
    ,{ SFTYSDL_AREA_0,   &SftyParkLockEvln_MainFastArea0,           2u,           0u}
    ,{ SFTYSDL_AREA_2,   &SftyParkLockEvln_MainFunctionArea2,      10u,           0u}
    ,{ SFTYSDL_AREA_2,   &SftyParkLockEvln_SlowFunctionArea2,     100u,           0u}
@@ -623,7 +626,6 @@ CONST(SftySdl_InitTblType, SFTYSDL) SftySdlInitNormRunTbl[] =
     ,{ SFTYSDL_AREA_CMN, &SftyActvDchaCtrl_Init }
     ,{ SFTYSDL_AREA_CMN, &SftyE2eRx_Init }
     ,{ SFTYSDL_AREA_1,   &SftyTqEstimrPwrMdl_InitArea1}
-\t,{ SFTYSDL_AREA_2,   &SftyParkLockPosnAcqn_InitArea2}
     ,{ SFTYSDL_AREA_0,   &SftySysInit_InitArea0 }       /* Closes access to safety relevant components (SMU/Ports...) */
 //    ,{ SFTYSDL_AREA_2,   &SftySbcCtrl_InitChk}          /* Must run after SftySysInit */
 //\t,{ SFTYSDL_AREA_0,   &SftyLibApp_RunInit }          /* RunInit shall be called after SysInit, where SMU and MTU access protection */
@@ -631,6 +633,7 @@ CONST(SftySdl_InitTblType, SFTYSDL) SftySdlInitNormRunTbl[] =
     ,{ SFTYSDL_AREA_1,   &SftyCrashSigMon_Init}
     ,{ SFTYSDL_AREA_2,   &SftyHvInterlock_Init}
     ,{ SFTYSDL_AREA_2,   &SftyLvSplyEvln_InitArea2}
+\t,{ SFTYSDL_AREA_2,   &SftyParkLockPosnAcqn_InitArea2}
 \t,{ SFTYSDL_AREA_2,   &SftyParkLockEvln_Init}
 };
 
diff --git a/src/fw_cu/build/a2l/Measurements-to-Timeslices-Mapping.csv b/src/fw_cu/build/a2l/Measurements-to-Timeslices-Mapping.csv
index 0c64e7289..5116dfdc3 100644
--- a/src/fw_cu/build/a2l/Measurements-to-Timeslices-Mapping.csv
+++ b/src/fw_cu/build/a2l/Measurements-to-Timeslices-Mapping.csv
@@ -6511,6 +6511,9 @@ SftySdlRunTiNormRun_SftyErrDeb_MainFunctionAreaCmn.TickStart,Core_1,Core_1_200us
 SftySdlRunTiNormRun_SftyModMgr_MainFunction.CycTi,Core_1,Core_1_200us,0.2,,,SSW
 SftySdlRunTiNormRun_SftyModMgr_MainFunction.RunTi,Core_1,Core_1_200us,0.2,,,SSW
 SftySdlRunTiNormRun_SftyModMgr_MainFunction.TickStart,Core_1,Core_1_200us,0.2,,,SSW
+ SftySdlRunTiNormRun_SftyParkLockPosnAcqn_MainFunctionArea2.CycTi,Core_1,Core_1_200us,0.2,,,SSW
+SftySdlRunTiNormRun_SftyParkLockPosnAcqn_MainFunctionArea2.RunTi,Core_1,Core_1_200us,0.2,,,SSW
+SftySdlRunTiNormRun_SftyParkLockPosnAcqn_MainFunctionArea2.TickStart,Core_1,Core_1_200us,0.2,,,SSW
 SftySdlRunTiNormRun_SftyParkLockEvln_MainFastArea0.CycTi,Core_1,Core_1_200us,0.2,,,SSW
 SftySdlRunTiNormRun_SftyParkLockEvln_MainFastArea0.RunTi,Core_1,Core_1_200us,0.2,,,SSW
 SftySdlRunTiNormRun_SftyParkLockEvln_MainFastArea0.TickStart,Core_1,Core_1_200us,0.2,,,SSW
'
