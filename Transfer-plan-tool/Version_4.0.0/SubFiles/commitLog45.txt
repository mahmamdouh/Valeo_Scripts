b'commit ed21515f9e68b8c42d627d416a3647ca395c0f9e
Author: Mohammed ANDALOUSSI (JV) <mohammed.andaloussi.jv@valeo.com>
Date:   Tue Feb 8 10:01:01 2022 +0100

    $100kW-52189$ IGBT Temp range switch
    
    Change-Id: I0637f17233e1d7c09f0a8664697f03d44d75e9ca

diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eFpga/include/SftyE2eFpga_data.h b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eFpga/include/SftyE2eFpga_data.h
index 6b46a3220..7589526ae 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eFpga/include/SftyE2eFpga_data.h
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eFpga/include/SftyE2eFpga_data.h
@@ -55,7 +55,6 @@ extern VAR(boolean, SFTYE2EFPGA_VAR) SftyE2eFpgaScSpdReadyFltSts;
 extern VAR(boolean, SFTYE2EFPGA_VAR) SftyE2eFpgaHsGateDrvrFltSts;
 extern VAR(boolean, SFTYE2EFPGA_VAR) SftyE2eFpgaLoGateDrvrFltSts;
 extern VAR(boolean, SFTYE2EFPGA_VAR) SftyE2eFpgaMidPointPhaFltSts[SYSDEF_EM_PHA_CNT_MAX];
-extern VAR(boolean, SFTYE2EFPGA_VAR) SftyE2eFpgaIgbtTempRngSwtSts;
 
 #define SFTYE2EFPGA_STOP_SEC_VAR_AREA_CMN_FAST_CLEARED
 #include "MemMap.h"
@@ -109,7 +108,7 @@ extern CONST(boolean, SFTYREPLCMT_CALIB) SftyE2eFpgaActvDchaReqValOvrdVal;
 extern CONST(uint8, SFTYREPLCMT_CALIB)   SftyE2eFpgaModOvrdEna;
 extern CONST(uint8, SFTYREPLCMT_CALIB)   SftyE2eFpgaModValOvrdVal;
 extern CONST(uint8, SFTYREPLCMT_CALIB)   SftyE2eFpgaReiniCombinedFltOvrdEna;
-extern CONST(uint16, SFTYREPLCMT_CALIB)  SftyE2eFpgaReiniCombinedFltOvrdVal;
+extern CONST(uint16, SFTYREPLCMT_CALIB)  SftyE2eFpgaReiniCombinedFltOvrdVal;/* PRQA S 0777 # following Arch interface long naming; External identifier does not differ from other identifier is here wrong */
 
 
 #define SFTYREPLCMT_STOP_SEC_CALIB_8
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eFpga/src/SftyE2eFpga.c b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eFpga/src/SftyE2eFpga.c
index f13601465..f519701cf 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eFpga/src/SftyE2eFpga.c
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eFpga/src/SftyE2eFpga.c
@@ -2658,7 +2658,6 @@ FUNC(void, SFTYE2EFPGA_CODE) SftyE2eFpga_Init(void)
    SftyE2eFpgaFirstRunDone                               = FALSE;
    SftyE2eFpgaFirstRunCntrChkDone                        = FALSE;
    SftyE2eFpgaTiStampChkFirstRun                         = FALSE;
-   SftyE2eFpgaIgbtTempRngSwtSts                          = FALSE;
    SftyE2eFpgaAlvCntr                                    = 0xFFu;
    SftyE2eFpgaDmaDataCurrIdx                             = 0x00u;
    SftyE2eFpgaDmaDataLstIdx                              = 0x00u;
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eFpga/src/SftyE2eFpga_data.c b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eFpga/src/SftyE2eFpga_data.c
index f2bf0331e..603bb1ea4 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eFpga/src/SftyE2eFpga_data.c
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eFpga/src/SftyE2eFpga_data.c
@@ -248,16 +248,6 @@ VAR(boolean, SFTYE2EFPGA_VAR) SftyE2eFpgaLoGateDrvrFltSts;
 */
 VAR(boolean, SFTYE2EFPGA_VAR) SftyE2eFpgaMidPointPhaFltSts[SYSDEF_EM_PHA_CNT_MAX];
 
-/*
-@@ SYMBOL = SftyE2eFpgaIgbtTempRngSwtSts
-@@ A2L_TYPE = MEASURE
-@@ DATA_TYPE = UBYTE
-@@ DESCRIPTION = "Igbt Temp range switch status"
-@@ GROUP = SftyE2eFpga
-@@ END
-*/
-VAR(boolean, SFTYE2EFPGA_VAR) SftyE2eFpgaIgbtTempRngSwtSts;
-
 #define SFTYE2EFPGA_STOP_SEC_VAR_AREA_CMN_FAST_CLEARED
 #include "MemMap.h"
 
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/include/SftyReplcmt_data.h b/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/include/SftyReplcmt_data.h
index d94b76f80..70b6fec1a 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/include/SftyReplcmt_data.h
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/include/SftyReplcmt_data.h
@@ -2733,7 +2733,7 @@ extern CONST(uint8, SFTYREPLCMT_CALIB) SftyReplcmtTempEvlnTempIPhaValStiEna;
 #define SFTYREPLCMT_START_SEC_CALIB_8
 #include "MemMap.h"
 
-extern CONST(boolean, SFTYREPLCMT_CALIB) SftyReplcmtIgbtTempRngSwtStsVal;
+extern CONST(boolean, SFTYREPLCMT_CALIB) SftyReplcmtIgbtTempRngSwtStsVal[SYSDEF_EM_PHA_CNT_MAX];
 #define SFTYREPLCMT_STOP_SEC_CALIB_8
 #include "MemMap.h"
 /* End: SFTYREPLCMT_STOP_SEC_CALIB_8 (calib) */
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/src/SftyReplcmt_data.c b/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/src/SftyReplcmt_data.c
index 9c1717b51..5764f16e4 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/src/SftyReplcmt_data.c
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/src/SftyReplcmt_data.c
@@ -2968,11 +2968,12 @@ CONST(uint8, SFTYREPLCMT_CALIB) SftyReplcmtIgbtTempRngSwtStsValStiEna = 0U;
 @@ SYMBOL = SftyReplcmtIgbtTempRngSwtStsVal
 @@ A2L_TYPE = PARAMETER
 @@ DATA_TYPE = UBYTE
-@@ DESCRIPTION = "Replacement value for range switch status"
+@@ DIMENSION = 3
+@@ DESCRIPTION = "Replacement value for IGBT temperature  range switch status"
 @@ GROUP = SftyTempEvln
 @@ END
 */
-CONST(boolean, SFTYREPLCMT_CALIB) SftyReplcmtIgbtTempRngSwtStsVal = 0U;
+CONST(boolean, SFTYREPLCMT_CALIB) SftyReplcmtIgbtTempRngSwtStsVal[SYSDEF_EM_PHA_CNT_MAX] = {0U,0U,0U};
 #define SFTYREPLCMT_STOP_SEC_CALIB_8
 #include "MemMap.h"
 /* End: SFTYREPLCMT_STOP_SEC_CALIB_8 (calib) */
diff --git a/src/fw_cu/Components/Safety/Sfty_Inv/SftyTempEvln/src/SftyTempEvln.c b/src/fw_cu/Components/Safety/Sfty_Inv/SftyTempEvln/src/SftyTempEvln.c
index 279a39830..b2e38c563 100644
--- a/src/fw_cu/Components/Safety/Sfty_Inv/SftyTempEvln/src/SftyTempEvln.c
+++ b/src/fw_cu/Components/Safety/Sfty_Inv/SftyTempEvln/src/SftyTempEvln.c
@@ -53,7 +53,10 @@
 
 
 /*================== [defines] ==============================================*/
-
+#define SFTY_TEMP_EVLN_IGBT_RAW_VAL_MASK        (0x07FFU)
+#define SFTY_TEMP_EVLN_IGBT_RNG_SWT_STS_MASK    (0x0800U)
+#define SFTY_TEMP_EVLN_IGBT_RNG_SWT_STS_BIT_POS (11U)
+#define SFTY_TEMP_EVLN_IGBT_RNG_SWT_STS_LOW     (0u)
 /*================== [type definitions] =====================================*/
 
 /*================== [local data] ===========================================*/
@@ -66,12 +69,13 @@
 @@ SYMBOL = SftyTempEvlnIgbtRngSwtSts
 @@ A2L_TYPE = MEASURE
 @@ DATA_TYPE = UBYTE
+@@ DIMENSION = 3
 @@ DESCRIPTION = "Range switch"
 @@ GROUP = SftyTempEvln
 @@ END
 */
 /*! \\cvar Range switch */
-STATIC VAR(boolean, SFTYTEMPEVLN_VAR) SftyTempEvlnIgbtRngSwtSts;
+STATIC VAR(boolean, SFTYTEMPEVLN_VAR) SftyTempEvlnIgbtRngSwtSts[SYSDEF_EM_PHA_CNT_MAX];
 
 /*
 @@ SYMBOL = SftyTempEvlnIgbtTRawVal
@@ -436,20 +440,16 @@ LOCAL_INLINE void SftyTempEvln_EvlnMotStatorT(void)
 
   return;
 }
-
 /*********************************************************************************************/
 /*!
- * \\fn        void SftyTempEvln_GetIGBTData(void)
+ * \\fn        void SftyTempEvln_GetIgbtTempRawVal(void)
  * \\brief     This function gets the IGBT temperature raw values from SftyFpgaE2e interface
  * \\Parent_DD SftyTempEvln_MainFunction
  */
 /********************************************************************************************/
 
-LOCAL_INLINE void SftyTempEvln_GetIGBTData(void)
+LOCAL_INLINE void SftyTempEvln_GetIgbtTempRawVal(void)
 {
-   /* ******** Variables declaration *********** */
-
-  /* ************* Source code **************** */
 #ifndef SERIES_PRODUCTION
    /* Replacement stimulus enable */
    if(SftyReplcmtTempEvlnIgbtTRawValStiEna == TRUE)
@@ -463,26 +463,66 @@ LOCAL_INLINE void SftyTempEvln_GetIGBTData(void)
 #endif /* SERIES_PRODUCTION */
    {
       /* Phase value from SftyE2eFpga */
-      SftyTempEvlnIgbtTRawVal[SYSDEF_PHA_U] = SftyE2eFpgaTempIGBTRawVal[SYSDEF_PHA_U];
-      SftyTempEvlnIgbtTRawVal[SYSDEF_PHA_V] = SftyE2eFpgaTempIGBTRawVal[SYSDEF_PHA_V];
-      SftyTempEvlnIgbtTRawVal[SYSDEF_PHA_W] = SftyE2eFpgaTempIGBTRawVal[SYSDEF_PHA_W];
+      SftyTempEvlnIgbtTRawVal[SYSDEF_PHA_U] = SftyE2eFpgaTempIGBTRawVal[SYSDEF_PHA_U] & SFTY_TEMP_EVLN_IGBT_RAW_VAL_MASK;
+      SftyTempEvlnIgbtTRawVal[SYSDEF_PHA_V] = SftyE2eFpgaTempIGBTRawVal[SYSDEF_PHA_V] & SFTY_TEMP_EVLN_IGBT_RAW_VAL_MASK;
+      SftyTempEvlnIgbtTRawVal[SYSDEF_PHA_W] = SftyE2eFpgaTempIGBTRawVal[SYSDEF_PHA_W] & SFTY_TEMP_EVLN_IGBT_RAW_VAL_MASK;
    }
+   return;
+}
+
+/*********************************************************************************************/
+/*!
+ * \\fn        void SftyTempEvln_GetIgbtTempRngSwtSts(void)
+ * \\brief     This function gets the IGBT temperature range switch status from SftyFpgaE2e interface
+ * \\Parent_DD SftyTempEvln_MainFunction
+ */
+/********************************************************************************************/
 
+LOCAL_INLINE void SftyTempEvln_GetIgbtTempRngSwtSts(void)
+{
 #ifndef SERIES_PRODUCTION
    /* Replacement stimulus enable */
    if(SftyReplcmtIgbtTempRngSwtStsValStiEna == TRUE)
    {
       /* Replacement values for phase temperature */
-      SftyTempEvlnIgbtRngSwtSts = SftyReplcmtIgbtTempRngSwtStsVal;
+      SftyTempEvlnIgbtRngSwtSts[SYSDEF_PHA_U] = SftyReplcmtIgbtTempRngSwtStsVal[SYSDEF_PHA_U];
+      SftyTempEvlnIgbtRngSwtSts[SYSDEF_PHA_V] = SftyReplcmtIgbtTempRngSwtStsVal[SYSDEF_PHA_V];
+      SftyTempEvlnIgbtRngSwtSts[SYSDEF_PHA_W] = SftyReplcmtIgbtTempRngSwtStsVal[SYSDEF_PHA_W];
 
    }
    else
 #endif /* SERIES_PRODUCTION */
    {
-      /* Phase value from SftyE2eFpga */
-      SftyTempEvlnIgbtRngSwtSts = SftyE2eFpgaIgbtTempRngSwtSts;
+      /* Get range switch val */
+      SftyTempEvlnIgbtRngSwtSts[SYSDEF_PHA_U] = (uint8)((SftyE2eFpgaTempIGBTRawVal[SYSDEF_PHA_U] & SFTY_TEMP_EVLN_IGBT_RNG_SWT_STS_MASK)
+                                                         >> SFTY_TEMP_EVLN_IGBT_RNG_SWT_STS_BIT_POS);
+
+      SftyTempEvlnIgbtRngSwtSts[SYSDEF_PHA_V] = (uint8)((SftyE2eFpgaTempIGBTRawVal[SYSDEF_PHA_V] & SFTY_TEMP_EVLN_IGBT_RNG_SWT_STS_MASK)
+                                                         >> SFTY_TEMP_EVLN_IGBT_RNG_SWT_STS_BIT_POS);
+
+      SftyTempEvlnIgbtRngSwtSts[SYSDEF_PHA_W] = (uint8)((SftyE2eFpgaTempIGBTRawVal[SYSDEF_PHA_W] & SFTY_TEMP_EVLN_IGBT_RNG_SWT_STS_MASK)
+                                                         >> SFTY_TEMP_EVLN_IGBT_RNG_SWT_STS_BIT_POS);
 
    }
+   return;
+}
+/*********************************************************************************************/
+/*!
+ * \\fn        void SftyTempEvln_GetIGBTData(void)
+ * \\brief     This function gets the IGBT temperature raw values from SftyFpgaE2e interface
+ * \\Parent_DD SftyTempEvln_MainFunction
+ */
+/********************************************************************************************/
+
+LOCAL_INLINE void SftyTempEvln_GetIGBTData(void)
+{
+   /* ******** Variables declaration *********** */
+
+  /* ************* Source code **************** */
+
+   SftyTempEvln_GetIgbtTempRawVal();
+
+   SftyTempEvln_GetIgbtTempRngSwtSts();
 
    return;
 }
@@ -501,14 +541,16 @@ LOCAL_INLINE void SftyTempEvln_GetIGBTData(void)
 LOCAL_INLINE uint8 SftyTempEvln_RngHiChk(uint16 tempVal, uint16 threshold)
 {
    uint8 retSts;
+
    if (tempVal <= threshold)
-      {
-         retSts =  ERR_DEB_MONR_STS_FAILED;
-      }
-      else
-      {
-         retSts = ERR_DEB_MONR_STS_PASSED;
-      }
+   {
+      retSts =  ERR_DEB_MONR_STS_FAILED;
+   }
+   else
+   {
+      retSts = ERR_DEB_MONR_STS_PASSED;
+   }
+
    return retSts;
 }
 
@@ -525,6 +567,7 @@ LOCAL_INLINE uint8 SftyTempEvln_RngHiChk(uint16 tempVal, uint16 threshold)
 LOCAL_INLINE uint8 SftyTempEvln_RngLoChk(uint16 tempVal, uint16 threshold)
 {
    uint8 retSts;
+
    if (tempVal >= threshold)
    {
       retSts =  ERR_DEB_MONR_STS_FAILED;
@@ -533,6 +576,7 @@ LOCAL_INLINE uint8 SftyTempEvln_RngLoChk(uint16 tempVal, uint16 threshold)
    {
       retSts =  ERR_DEB_MONR_STS_PASSED;
    }
+
    return retSts;
 }
 
@@ -551,6 +595,7 @@ LOCAL_INLINE uint8 SftyTempEvln_RngLoChk(uint16 tempVal, uint16 threshold)
 LOCAL_INLINE uint8 SftyTempEvln_PlausRngChk(float32 tempVal1, float32 tempVal2, float32 tempVal3, float32 threshold)
 {
    uint8 retSts;
+
    if ((MLIB_F32AbsF32(tempVal1 - tempVal2) >= threshold) &&
        (MLIB_F32AbsF32(tempVal1 - tempVal3) >= threshold))
    {
@@ -577,25 +622,26 @@ LOCAL_INLINE uint8 SftyTempEvln_PlausRngChk(float32 tempVal1, float32 tempVal2,
 LOCAL_INLINE float32 SftyTempEvln_FindMaxVal(float32 val1, float32 val2, float32 val3)
 {
 
-   float32 maxVal;
+   float32 retVal;
    /* Check if val1 is greater than val2 and val3 */
    if((val1 >= val2) && (val1 >= val3))
    {
       /* val1 is maximum */
-      maxVal = val1;
+      retVal = val1;
    }
    /* Check if val2 is greater than val1 and val3 */
    else if((val2 >= val1) && (val2 >= val3))
    {
       /* val2 is maximum */
-      maxVal = val2;
+      retVal = val2;
    }
    else
    {
       /* val3 is maximum */
-      maxVal = val3;
+      retVal = val3;
    }
-   return maxVal;
+
+   return retVal;
 }
 
 /**********************************************************************************************/
@@ -699,74 +745,101 @@ LOCAL_INLINE void SftyTempEvln_IgbtJuncTempChk(void)
 
 /*******************************************************************************************************************/
 /*!
- * \\fn        void SftyTempEvln_IgbtTempRawToPhyValConv(void)
- * \\brief     This function converts the raw temperature value to the physical value using range High
+ * \\fn        void SftyTempEvln_IgbtTempURawToPhyValConv(void)
+ * \\brief     This function converts the IGBT U raw temperature value to the physical value depending on corresponding
+ *            range switch status
+ * \\param[in] uint8 range switch status
  * \\Parent_DD SftyTempEvln_MainFunction
  */
 /*******************************************************************************************************************/
-LOCAL_INLINE void SftyTempEvln_IgbtTempRawToPhyValConvLo(void)
+LOCAL_INLINE void SftyTempEvln_IgbtTempURawToPhyValConv(uint8 rngSwtSts)
 {
    /* ******** Variables declaration *********** */
 
   /* ************* Source code **************** */
 
-   /* Convert the Igbt raw temperature value to their physical value */
-   SftyTempEvlnIGBTPhyVal[SYSDEF_PHA_U] = SftyTempEvln_ConvRawToPhy(SftyTempEvlnIgbtUTSnsrLoChartcTPrmL
-                                                               ,SftyTempEvlnIgbtUTSnsrLoChartcVPrmA
-                                                               ,SftyTempEvlnIgbtTRawVal[SYSDEF_PHA_U]);
-
-   SftyTempEvlnIGBTPhyVal[SYSDEF_PHA_V] = SftyTempEvln_ConvRawToPhy(SftyTempEvlnIgbtVTSnsrLoChartcTPrmL
-                                                               ,SftyTempEvlnIgbtVTSnsrLoChartcVPrmA
-                                                               ,SftyTempEvlnIgbtTRawVal[SYSDEF_PHA_V]);
-
-   SftyTempEvlnIGBTPhyVal[SYSDEF_PHA_W] = SftyTempEvln_ConvRawToPhy(SftyTempEvlnIgbtWTSnsrLoChartcTPrmL
-                                                               ,SftyTempEvlnIgbtWTSnsrLoChartcVPrmA
-                                                               ,SftyTempEvlnIgbtTRawVal[SYSDEF_PHA_W]);
-
-   /* Determine the maximum phase temperature*/
-   SftyTempEvlnIgbtTMaxPhyVal=  SftyTempEvln_FindMaxVal(SftyTempEvlnIGBTPhyVal[SYSDEF_PHA_U],
-                                                        SftyTempEvlnIGBTPhyVal[SYSDEF_PHA_V],
-                                                        SftyTempEvlnIGBTPhyVal[SYSDEF_PHA_W]);
-
+   if( rngSwtSts == SFTY_TEMP_EVLN_IGBT_RNG_SWT_STS_LOW)
+   {
+      /* Convert the Igbt raw temperature value to their physical value */
+      SftyTempEvlnIGBTPhyVal[SYSDEF_PHA_U] = SftyTempEvln_ConvRawToPhy(SftyTempEvlnIgbtUTSnsrLoChartcTPrmL,
+                                                                       SftyTempEvlnIgbtUTSnsrLoChartcVPrmA,
+                                                                       SftyTempEvlnIgbtTRawVal[SYSDEF_PHA_U]);
+   }
+   else
+   {
+      /* Convert the Igbt raw temperature value to their physical value */
+      SftyTempEvlnIGBTPhyVal[SYSDEF_PHA_U] = SftyTempEvln_ConvRawToPhy(SftyTempEvlnIgbtUTSnsrHiChartcTPrmL,
+                                                                       SftyTempEvlnIgbtUTSnsrHiChartcVPrmA,
+                                                                       SftyTempEvlnIgbtTRawVal[SYSDEF_PHA_U]);
+   }
 
    return;
-
 }
 
 /*******************************************************************************************************************/
 /*!
- * \\fn        void SftyTempEvln_IgbtTempRawToPhyValConv(void)
- * \\brief     This function converts the raw temperature value to the physical value using range low
+ * \\fn        void SftyTempEvln_IgbtTempVRawToPhyValConv(void)
+ * \\brief     This function converts the IGBT V raw temperature value to the physical value depending on corresponding
+ *            range switch status
+ * \\param[in] uint8 range switch status
  * \\Parent_DD SftyTempEvln_MainFunction
  */
 /*******************************************************************************************************************/
-LOCAL_INLINE void SftyTempEvln_IgbtTempRawToPhyValConvHi(void)
+LOCAL_INLINE void SftyTempEvln_IgbtTempVRawToPhyValConv(uint8 rngSwtSts)
 {
    /* ******** Variables declaration *********** */
 
   /* ************* Source code **************** */
 
-   /* Convert the Igbt raw temperature value to their physical value */
-   SftyTempEvlnIGBTPhyVal[SYSDEF_PHA_U] = SftyTempEvln_ConvRawToPhy(SftyTempEvlnIgbtUTSnsrHiChartcTPrmL
-                                                               ,SftyTempEvlnIgbtUTSnsrHiChartcVPrmA
-                                                               ,SftyTempEvlnIgbtTRawVal[SYSDEF_PHA_U]);
+   if( rngSwtSts == SFTY_TEMP_EVLN_IGBT_RNG_SWT_STS_LOW)
+   {
+      /* Convert the Igbt raw temperature value to their physical value */
+      SftyTempEvlnIGBTPhyVal[SYSDEF_PHA_V] = SftyTempEvln_ConvRawToPhy(SftyTempEvlnIgbtVTSnsrLoChartcTPrmL,
+                                                                       SftyTempEvlnIgbtVTSnsrLoChartcVPrmA,
+                                                                       SftyTempEvlnIgbtTRawVal[SYSDEF_PHA_V]);
+   }
+   else
+   {
+      /* Convert the Igbt raw temperature value to their physical value */
+      SftyTempEvlnIGBTPhyVal[SYSDEF_PHA_V] = SftyTempEvln_ConvRawToPhy(SftyTempEvlnIgbtVTSnsrHiChartcTPrmL,
+                                                                       SftyTempEvlnIgbtVTSnsrHiChartcVPrmA,
+                                                                       SftyTempEvlnIgbtTRawVal[SYSDEF_PHA_V]);
+   }
 
-   SftyTempEvlnIGBTPhyVal[SYSDEF_PHA_V] = SftyTempEvln_ConvRawToPhy(SftyTempEvlnIgbtVTSnsrHiChartcTPrmL
-                                                               ,SftyTempEvlnIgbtVTSnsrHiChartcVPrmA
-                                                               ,SftyTempEvlnIgbtTRawVal[SYSDEF_PHA_V]);
+   return;
+}
 
-   SftyTempEvlnIGBTPhyVal[SYSDEF_PHA_W] = SftyTempEvln_ConvRawToPhy(SftyTempEvlnIgbtWTSnsrHiChartcTPrmL
-                                                               ,SftyTempEvlnIgbtWTSnsrHiChartcVPrmA
-                                                               ,SftyTempEvlnIgbtTRawVal[SYSDEF_PHA_W]);
+/*******************************************************************************************************************/
+/*!
+ * \\fn        void SftyTempEvln_IgbtTempWRawToPhyValConv(void)
+ * \\brief     This function converts the IGBT W raw temperature value to the physical value depending on corresponding
+ *            range switch status
+ * \\param[in] uint8 range switch status
+ * \\Parent_DD SftyTempEvln_MainFunction
+ */
+/*******************************************************************************************************************/
+LOCAL_INLINE void SftyTempEvln_IgbtTempWRawToPhyValConv(uint8 rngSwtSts)
+{
+   /* ******** Variables declaration *********** */
 
-   /* Determine the maximum phase temperature*/
-   SftyTempEvlnIgbtTMaxPhyVal=  SftyTempEvln_FindMaxVal(SftyTempEvlnIGBTPhyVal[SYSDEF_PHA_U],
-                                                        SftyTempEvlnIGBTPhyVal[SYSDEF_PHA_V],
-                                                        SftyTempEvlnIGBTPhyVal[SYSDEF_PHA_W]);
+  /* ************* Source code **************** */
 
+   if( rngSwtSts == SFTY_TEMP_EVLN_IGBT_RNG_SWT_STS_LOW)
+   {
+      /* Convert the Igbt raw temperature value to their physical value */
+      SftyTempEvlnIGBTPhyVal[SYSDEF_PHA_W] = SftyTempEvln_ConvRawToPhy(SftyTempEvlnIgbtWTSnsrLoChartcTPrmL,
+                                                                       SftyTempEvlnIgbtWTSnsrLoChartcVPrmA,
+                                                                       SftyTempEvlnIgbtTRawVal[SYSDEF_PHA_W]);
+   }
+   else
+   {
+      /* Convert the Igbt raw temperature value to their physical value */
+      SftyTempEvlnIGBTPhyVal[SYSDEF_PHA_W] = SftyTempEvln_ConvRawToPhy(SftyTempEvlnIgbtWTSnsrHiChartcTPrmL,
+                                                                       SftyTempEvlnIgbtWTSnsrHiChartcVPrmA,
+                                                                       SftyTempEvlnIgbtTRawVal[SYSDEF_PHA_W]);
+   }
 
    return;
-
 }
 
 /*******************************************************************************************************************/
@@ -783,14 +856,18 @@ LOCAL_INLINE void SftyTempEvln_IgbtTempRawToPhyValConv(void)
   /* ************* Source code **************** */
 
    /* Convert the Igbt raw temperature value to their physical value */
-   if(SftyTempEvlnIgbtRngSwtSts == FALSE)
-   {
-      SftyTempEvln_IgbtTempRawToPhyValConvLo();
-   }
-   else
-   {
-      SftyTempEvln_IgbtTempRawToPhyValConvHi();
-   }
+   SftyTempEvln_IgbtTempURawToPhyValConv(SftyTempEvlnIgbtRngSwtSts[SYSDEF_PHA_U]);
+
+   /* Convert the Igbt raw temperature value to their physical value */
+   SftyTempEvln_IgbtTempVRawToPhyValConv(SftyTempEvlnIgbtRngSwtSts[SYSDEF_PHA_V]);
+
+   /* Convert the Igbt raw temperature value to their physical value */
+   SftyTempEvln_IgbtTempWRawToPhyValConv(SftyTempEvlnIgbtRngSwtSts[SYSDEF_PHA_W]);
+
+   /* Determine the maximum phase temperature*/
+   SftyTempEvlnIgbtTMaxPhyVal = SftyTempEvln_FindMaxVal(SftyTempEvlnIGBTPhyVal[SYSDEF_PHA_U],
+                                                        SftyTempEvlnIGBTPhyVal[SYSDEF_PHA_V],
+                                                        SftyTempEvlnIGBTPhyVal[SYSDEF_PHA_W]);
    return;
 
 }
@@ -1086,7 +1163,9 @@ FUNC(void, SFTY_TEMP_EVLN_CODE) SftyTempEvln_Init(void)
    SftyTempEvlnPlausCntr = 0U;
    SftyTempEvlnDcBusBarTemp = 0.f;
    SftyTempEvlnDcDcLinkCpTemp = 0.f;
-   SftyTempEvlnIgbtRngSwtSts = FALSE;
+   SftyTempEvlnIgbtRngSwtSts[SYSDEF_PHA_U] = FALSE;
+   SftyTempEvlnIgbtRngSwtSts[SYSDEF_PHA_V] = FALSE;
+   SftyTempEvlnIgbtRngSwtSts[SYSDEF_PHA_W] = FALSE;
 
    return;
 }
diff --git a/src/fw_cu/Components/Safety/Sfty_Inv/SftyTempEvln/src/SftyTempEvln_data.c b/src/fw_cu/Components/Safety/Sfty_Inv/SftyTempEvln/src/SftyTempEvln_data.c
index 4d68ab841..9036b477b 100644
--- a/src/fw_cu/Components/Safety/Sfty_Inv/SftyTempEvln/src/SftyTempEvln_data.c
+++ b/src/fw_cu/Components/Safety/Sfty_Inv/SftyTempEvln/src/SftyTempEvln_data.c
@@ -585,8 +585,8 @@ CONST(uint16, SFTYTEMPEVLN_CALIB) SftyTempEvlnIgbtTempHWPRngLoThd =  875U;  /* c
 */
 /*! IGBT temperature raw values; unit \'U\' */
 CONST(uint16, SFTYTEMPEVLN_CALIB) SftyTempEvlnIgbtUTSnsrLoChartcVPrmA[20] =
-   {19U,706U,808U,924U,1055U,1202U,1365U,1543U,1736U,1940U,2152U,2369U,2584U,2794U,
-    2993U,3177U,3343U,3489U,3614U,3720U};
+   {19U,353U,404U,462U,528U,601U,683U,772U,868U,970U,1076U,1184U,1292U,1397U,
+    1497U,1588U,1671U,1744U,1807U,1860U};
 
 /*
 @@ SYMBOL = SftyTempEvlnIgbtUTSnsrHiChartcVPrmA
@@ -599,8 +599,8 @@ CONST(uint16, SFTYTEMPEVLN_CALIB) SftyTempEvlnIgbtUTSnsrLoChartcVPrmA[20] =
 */
 /*! IGBT temperature raw values; unit \'U\' */
 CONST(uint16, SFTYTEMPEVLN_CALIB) SftyTempEvlnIgbtUTSnsrHiChartcVPrmA[24] =
-   {23U,1074U,1156U,1244U,1338U,1437U,1543U,1654U,1770U,1891U,2016U,2144U,2274U,2406U,
-    2538U,2669U,2798U,2923U,3044U,3159U,3268U,3369U,3463U,3548U};
+   {23U,537U,578U,622U,669U,719U,771U,827U,885U,945U,1008U,1072U,1137U,1203U,
+    1269U,1335U,1399U,1462U,1522U,1579U,1634U,1684U,1731U,1774U};
 
 /*
 @@ SYMBOL = SftyTempEvlnIgbtVTSnsrLoChartcVPrmA
@@ -613,8 +613,8 @@ CONST(uint16, SFTYTEMPEVLN_CALIB) SftyTempEvlnIgbtUTSnsrHiChartcVPrmA[24] =
 */
 /*! IGBT temperature raw values; unit \'U\' */
 CONST(uint16, SFTYTEMPEVLN_CALIB) SftyTempEvlnIgbtVTSnsrLoChartcVPrmA[20] =
-   {19U,706U,808U,924U,1055U,1202U,1365U,1543U,1736U,1940U,2152U,2369U,2584U,2794U,
-    2993U,3177U,3343U,3489U,3614U,3720U};
+   {19U,353U,404U,462U,528U,601U,683U,772U,868U,970U,1076U,1184U,1292U,1397U,
+    1497U,1588U,1671U,1744U,1807U,1860U};
 
 /*
 @@ SYMBOL = SftyTempEvlnIgbtVTSnsrHiChartcVPrmA
@@ -627,8 +627,8 @@ CONST(uint16, SFTYTEMPEVLN_CALIB) SftyTempEvlnIgbtVTSnsrLoChartcVPrmA[20] =
 */
 /*! IGBT temperature raw values; unit \'V\' */
 CONST(uint16, SFTYTEMPEVLN_CALIB) SftyTempEvlnIgbtVTSnsrHiChartcVPrmA[24] =
-   {23U,1074U,1156U,1244U,1338U,1437U,1543U,1654U,1770U,1891U,2016U,2144U,2274U,2406U,
-    2538U,2669U,2798U,2923U,3044U,3159U,3268U,3369U,3463U,3548U};
+   {23U,537U,578U,622U,669U,719U,771U,827U,885U,945U,1008U,1072U,1137U,1203U,
+    1269U,1335U,1399U,1462U,1522U,1579U,1634U,1684U,1731U,1774U};
 
 /*
 @@ SYMBOL = SftyTempEvlnIgbtWTSnsrLoChartcVPrmA
@@ -641,8 +641,8 @@ CONST(uint16, SFTYTEMPEVLN_CALIB) SftyTempEvlnIgbtVTSnsrHiChartcVPrmA[24] =
 */
 /*! IGBT temperature raw values; unit \'W\' */
 CONST(uint16, SFTYTEMPEVLN_CALIB) SftyTempEvlnIgbtWTSnsrLoChartcVPrmA[20] =
-   {19U,706U,808U,924U,1055U,1202U,1365U,1543U,1736U,1940U,2152U,2369U,2584U,2794U,
-    2993U,3177U,3343U,3489U,3614U,3720U};
+   {19U,353U,404U,462U,528U,601U,683U,772U,868U,970U,1076U,1184U,1292U,1397U,
+    1497U,1588U,1671U,1744U,1807U,1860U};
 
 /*
 @@ SYMBOL = SftyTempEvlnIgbtWTSnsrHiChartcVPrmA
@@ -655,8 +655,8 @@ CONST(uint16, SFTYTEMPEVLN_CALIB) SftyTempEvlnIgbtWTSnsrLoChartcVPrmA[20] =
 */
 /*! IGBT temperature raw values; unit \'W\' */
 CONST(uint16, SFTYTEMPEVLN_CALIB) SftyTempEvlnIgbtWTSnsrHiChartcVPrmA[24] =
-   {23U,1074U,1156U,1244U,1338U,1437U,1543U,1654U,1770U,1891U,2016U,2144U,2274U,2406U,
-    2538U,2669U,2798U,2923U,3044U,3159U,3268U,3369U,3463U,3548U};
+   {23U,537U,578U,622U,669U,719U,771U,827U,885U,945U,1008U,1072U,1137U,1203U,
+    1269U,1335U,1399U,1462U,1522U,1579U,1634U,1684U,1731U,1774U};
 
 
 /*
diff --git a/src/fw_cu/build/a2l/Measurements-to-Timeslices-Mapping.csv b/src/fw_cu/build/a2l/Measurements-to-Timeslices-Mapping.csv
index 7ba7cc761..11bfebaca 100644
--- a/src/fw_cu/build/a2l/Measurements-to-Timeslices-Mapping.csv
+++ b/src/fw_cu/build/a2l/Measurements-to-Timeslices-Mapping.csv
@@ -6919,7 +6919,6 @@ SftyE2eFpgaMeasCohrncFltStsAcc,Core_1,Core_1_200us,0.2,,,SSW
 SftyE2eFpgaFirstRunDone,Core_1,Core_1_200us,0.2,,,SSW
 SftyE2eFpgaHsGateDrvrFltSts,Core_1,Core_1_200us,0.2,,,SSW
 SftyE2eFpgaHsGateDrvrFltStsAcc,Core_1,Core_1_200us,0.2,,,SSW
-SftyE2eFpgaIgbtTempRngSwtSts,Core_1,Core_1_200us,0.2,,,SSW
 SftyE2eFpgaMidPointPhaFltSts,Core_1,Core_1_200us,0.2,,,SSW
 SftyE2eFpgaMidPointPhaFltStsAcc,Core_1,Core_1_200us,0.2,,,SSW
 SftyE2eFpgaMod,Core_1,Core_1_200us,0.2,,,SSW
'
