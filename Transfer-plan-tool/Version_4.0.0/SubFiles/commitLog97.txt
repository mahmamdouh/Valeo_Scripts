b'commit d137b8f45fda3604830739e04748a1cb42ed3661
Author: arajpoot <asvindra.rajpoot.jv.ext@valeo.com>
Date:   Wed Dec 22 18:44:18 2021 +0530

    $100kW-48730$   FCT_CtrlParkPos - Release Code SftyLvSplyEvln
    
    Change-Id: I07f4072056c1f51b26acf200b4c58121592363b4

diff --git a/src/fw_cu/Components/Cmn/Shared/MemMap/include/SftyNextGen_MemMap.h b/src/fw_cu/Components/Cmn/Shared/MemMap/include/SftyNextGen_MemMap.h
index ea7248cb8..393c482b0 100644
--- a/src/fw_cu/Components/Cmn/Shared/MemMap/include/SftyNextGen_MemMap.h
+++ b/src/fw_cu/Components/Cmn/Shared/MemMap/include/SftyNextGen_MemMap.h
@@ -5513,6 +5513,83 @@
    #define SAFETY_STOP_SEC_CALIB
    #include "BasicNextGen_MemMap.h"
 
+
+/*************************************************SftyLvSplyEvln************************************************************/
+
+#elif (defined SFTYLVSPLYEVLN_ASIL_B_START_SEC_VAR_FAST_CLEARED)
+   #undef SFTYLVSPLYEVLN_ASIL_B_START_SEC_VAR_FAST_CLEARED
+   #define SFTY_ASIL_B_START_SEC_VAR_FAST_CLEARED
+   #include "BasicNextGen_MemMap.h"
+
+#elif (defined SFTYLVSPLYEVLN_ASIL_B_STOP_SEC_VAR_FAST_CLEARED)
+   #undef SFTYLVSPLYEVLN_ASIL_B_STOP_SEC_VAR_FAST_CLEARED
+   #define SFTY_ASIL_B_STOP_SEC_VAR_FAST_CLEARED
+   #include "BasicNextGen_MemMap.h"
+
+#elif (defined SFTYLVSPLYEVLN_AREA_2_START_SEC_CODE_SLOW)
+   #undef SFTYLVSPLYEVLN_AREA_2_START_SEC_CODE_SLOW
+   #define SFTY_ASIL_B_START_SEC_CODE_SLOW
+   #include "BasicNextGen_MemMap.h"
+
+#elif (defined SFTYLVSPLYEVLN_AREA_2_STOP_SEC_CODE_SLOW)
+   #undef SFTYLVSPLYEVLN_AREA_2_STOP_SEC_CODE_SLOW
+   #define SFTY_ASIL_B_STOP_SEC_CODE_SLOW
+   #include "BasicNextGen_MemMap.h"
+
+#elif (defined SFTYLVSPLYEVLN_START_SEC_VAR_AREA_2_SLOW_INIT_8)
+   #undef SFTYLVSPLYEVLN_START_SEC_VAR_AREA_2_SLOW_INIT_8
+   #define SFTY_ASIL_B_START_SEC_VAR_FAST_INIT
+   #include "BasicNextGen_MemMap.h"
+
+#elif (defined SFTYLVSPLYEVLN_STOP_SEC_VAR_AREA_2_SLOW_INIT_8)
+   #undef SFTYLVSPLYEVLN_STOP_SEC_VAR_AREA_2_SLOW_INIT_8
+   #define SFTY_ASIL_B_STOP_SEC_VAR_FAST_INIT
+   #include "BasicNextGen_MemMap.h"
+
+#elif (defined SFTYLVSPLYEVLN_START_SEC_VAR_AREA_2_SLOW_INIT_32)
+   #undef SFTYLVSPLYEVLN_START_SEC_VAR_AREA_2_SLOW_INIT_32
+   #define SFTY_ASIL_B_START_SEC_VAR_FAST_INIT
+   #include "BasicNextGen_MemMap.h"
+
+#elif (defined SFTYLVSPLYEVLN_STOP_SEC_VAR_AREA_2_SLOW_INIT_32)
+   #undef SFTYLVSPLYEVLN_STOP_SEC_VAR_AREA_2_SLOW_INIT_32
+   #define SFTY_ASIL_B_STOP_SEC_VAR_FAST_INIT
+   #include "BasicNextGen_MemMap.h"
+
+#elif (defined SFTYLVSPLYEVLN_START_SEC_CALIB_8)
+   #undef SFTYLVSPLYEVLN_START_SEC_CALIB_8
+   #define SAFETY_START_SEC_CALIB
+   #include "BasicNextGen_MemMap.h"
+
+#elif (defined SFTYLVSPLYEVLN_STOP_SEC_CALIB_8)
+   #undef SFTYLVSPLYEVLN_STOP_SEC_CALIB_8
+   #define SAFETY_STOP_SEC_CALIB
+   #include "BasicNextGen_MemMap.h"
+
+#elif (defined SFTYLVSPLYEVLN_START_SEC_CALIB_16)
+   #undef SFTYLVSPLYEVLN_START_SEC_CALIB_16
+   #define SAFETY_START_SEC_CALIB
+   #include "BasicNextGen_MemMap.h"
+
+#elif (defined SFTYLVSPLYEVLN_STOP_SEC_CALIB_16)
+   #undef SFTYLVSPLYEVLN_STOP_SEC_CALIB_16
+   #define SAFETY_STOP_SEC_CALIB
+   #include "BasicNextGen_MemMap.h"
+
+#elif (defined SFTYLVSPLYEVLN_START_SEC_CALIB_32)
+   #undef SFTYLVSPLYEVLN_START_SEC_CALIB_32
+   #define SAFETY_START_SEC_CALIB
+   #include "BasicNextGen_MemMap.h"
+
+#elif (defined SFTYLVSPLYEVLN_STOP_SEC_CALIB_32)
+   #undef SFTYLVSPLYEVLN_STOP_SEC_CALIB_32
+   #define SAFETY_STOP_SEC_CALIB
+   #include "BasicNextGen_MemMap.h"
+
+
+
+
+
 /****************************************************************************************************/
 #elif (defined SFTYTEMPEVLN_AREA_0_START_SEC_VAR_FAST_CLEARED)
    #undef SFTYTEMPEVLN_AREA_0_START_SEC_VAR_FAST_CLEARED
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyErrDeb/include/SftyErrDeb_data.h b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyErrDeb/include/SftyErrDeb_data.h
index 4559afd43..2c19e47d8 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyErrDeb/include/SftyErrDeb_data.h
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyErrDeb/include/SftyErrDeb_data.h
@@ -1678,6 +1678,19 @@ extern VAR(uint8, SFTYCRASHSIGMON_VAR) SftyHvInterlockTiErrMonrSt;
 /* End: SFTYHVINTERLOCK_STOP_SEC_VAR_AREA_2_SLOW_INIT_8 (online) */
 
 
+/* Begin: SFTYLVSPLYEVLN_START_SEC_VAR_AREA_2_SLOW_INIT_8 (online) */
+#define SFTYLVSPLYEVLN_START_SEC_VAR_AREA_2_SLOW_INIT_8
+#include "MemMap.h"
+
+extern VAR(uint8, SFTYLVSPLYEVLN_VAR) SftyLvSplyEvlnKl30RngLoErrMonrSt;
+
+extern VAR(uint8, SFTYLVSPLYEVLN_VAR) SftyLvSplyEvlnKl30RngHiErrMonrSt;
+
+#define SFTYLVSPLYEVLN_STOP_SEC_VAR_AREA_2_SLOW_INIT_8
+#include "MemMap.h"
+/* End: SFTYLVSPLYEVLN_STOP_SEC_VAR_AREA_2_SLOW_INIT_8 (online) */
+
+
    /* Begin: SFTYTQESTIMRPWRMDL_START_SEC_VAR_AREA_1_FAST_INIT_8 (online) */
 #define SFTYTQESTIMRPWRMDL_START_SEC_VAR_AREA_1_FAST_INIT_8
 #include "MemMap.h"
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyLvSplyEvln/a2l/.gitkeep b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyLvSplyEvln/a2l/.gitkeep
new file mode 100644
index 000000000..e69de29bb
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyLvSplyEvln/doc/.gitkeep b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyLvSplyEvln/doc/.gitkeep
new file mode 100644
index 000000000..e69de29bb
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyLvSplyEvln/include/SftyLvSplyEvln.h b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyLvSplyEvln/include/SftyLvSplyEvln.h
new file mode 100644
index 000000000..e53330f5a
--- /dev/null
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyLvSplyEvln/include/SftyLvSplyEvln.h
@@ -0,0 +1,63 @@
+/* ********************************************************************** */
+/* Sourcefile:    SftyLvSplyEvln.h                                         */
+/*                                                                        */
+/* Project:       100kw                                                   */
+/* TriCore                                                                */
+/*                                                                        */
+/* Department: Valeo Siemens eAutomotive                                  */
+/* I DT EC R&D                                                            */
+/* ********************************************************************** */
+/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2021              */
+/* All Rights Reserved. Confidential                                      */
+/* ********************************************************************** */
+#ifndef SFTYLVSPLYEVLN_H
+#define SFTYLVSPLYEVLN_H
+/*!
+* \\addtogroup SftyLvSplyEvln_module
+* @{
+*/
+
+/*================== [includes] =============================================*/
+
+/*================== [macros] ===============================================*/
+
+/*================== [type definitions] =====================================*/
+
+/*================== [declaration of public data] ===========================*/
+
+/*================== [declaration of global functions] ======================*/
+
+/* ****************************** AREA 1 *********************************** */
+/* ********************************** FAST ********************************* */
+
+
+
+/* ****************************** AREA 2 *********************************** */
+/* ********************************** FAST ********************************* */
+
+
+
+/* ********************************** SLOW ********************************* */
+#define SFTYLVSPLYEVLN_AREA_2_START_SEC_CODE_SLOW
+#include "MemMap.h"
+
+extern FUNC(void, SFTYLVSPLYEVLN) SftyLvSplyEvln_MainFunctionArea2(void);
+extern FUNC(void, SFTYLVSPLYEVLN) SftyLvSplyEvln_InitArea2(void);
+
+
+
+#define SFTYLVSPLYEVLN_AREA_2_STOP_SEC_CODE_SLOW
+#include "MemMap.h"
+
+
+
+
+
+/*================== [closure] ==============================================*/
+/*! @} doxygen end of group definition */
+#endif /* SFTYLVSPLYEVLN_H_ */
+/* ********************************************************************** */
+/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2021              */
+/* All Rights Reserved. Confidential                                      */
+/* ********************************************************************** */
+/*==================[end of file]============================================*/
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyLvSplyEvln/include/SftyLvSplyEvln_data.h b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyLvSplyEvln/include/SftyLvSplyEvln_data.h
new file mode 100644
index 000000000..8190bb529
--- /dev/null
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyLvSplyEvln/include/SftyLvSplyEvln_data.h
@@ -0,0 +1,122 @@
+/* ***************************************************************** */
+/* Sourcefile: SftyLvSplyEvln_data.h                                  */
+/* ADD Container: SftyLvSplyEvln                                      */
+/* ADD Container Version: 1.0.0                                      */
+/* ***************************************************************** */
+/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2021                 */
+/* All Rights Reserved. Confidential                                 */
+/* ***************************************************************** */
+#ifndef\tSFTYLVSPLYEVLN_DATA_H
+#define\tSFTYLVSPLYEVLN_DATA_H
+
+
+#include "Platform_Types.h"
+#include "Compiler.h"
+#include "AddStructTypes.h"
+
+/********************************* AREA CMN - BEGIN ***************************************/
+
+
+
+/* Begin: SFTYLVSPLYEVLN_START_SEC_VAR_AREA_2_SLOW_INIT_8 (online) */
+#define SFTYLVSPLYEVLN_START_SEC_VAR_AREA_2_SLOW_INIT_8
+#include "MemMap.h"
+
+extern VAR(uint8, SFTYLVSPLYEVLN_VAR) SftyLvSplyEvlnKl30RngLoErrMonrSt;
+
+extern VAR(uint8, SFTYLVSPLYEVLN_VAR) SftyLvSplyEvlnKl30RngHiErrMonrSt;
+
+
+
+#define SFTYLVSPLYEVLN_STOP_SEC_VAR_AREA_2_SLOW_INIT_8
+#include "MemMap.h"
+/* End: SFTYLVSPLYEVLN_STOP_SEC_VAR_AREA_2_SLOW_INIT_8 (online) */
+
+
+/* Begin: SFTYLVSPLYEVLN_START_SEC_CALIB_32 (calib) */
+#define SFTYLVSPLYEVLN_START_SEC_CALIB_32
+#include "MemMap.h"
+
+extern CONST(float32, SFTYLVSPLYEVLN_CALIB) SftyLvSplyEvlnKl30PhyRngLoThd;
+
+extern CONST(float32, SFTYLVSPLYEVLN_CALIB) SftyLvSplyEvlnKl30PhyRngHiThd;
+
+
+
+#define SFTYLVSPLYEVLN_STOP_SEC_CALIB_32
+#include "MemMap.h"
+/* End: SFTYLVSPLYEVLN_STOP_SEC_CALIB_32 (calib) */
+
+
+/* Begin: SFTYLVSPLYEVLN_START_SEC_VAR_AREA_2_SLOW_INIT_32 */
+#define SFTYLVSPLYEVLN_START_SEC_VAR_AREA_2_SLOW_INIT_32
+#include "MemMap.h"
+
+extern VAR(float32, SFTYLVSPLYEVLN_VAR) SftyLvSplyEvlnKl30UMeas;
+
+
+
+#define SFTYLVSPLYEVLN_STOP_SEC_VAR_AREA_2_SLOW_INIT_32
+#include "MemMap.h"
+/* End: SFTYLVSPLYEVLN_STOP_SEC_VAR_AREA_2_SLOW_INIT_32 */
+
+
+/* Begin: SFTYDMA_START_SEC_VAR_AREA_1_SLOW_INIT_16 (online) */
+#define SFTYDMA_START_SEC_VAR_AREA_1_SLOW_INIT_16
+#include "MemMap.h"
+
+extern VAR(uint16, SFTYDMA_VAR) SftyDmaKl30RawVal;
+#define SFTYDMA_STOP_SEC_VAR_AREA_1_SLOW_INIT_16
+#include "MemMap.h"
+/* End: SFTYDMA_STOP_SEC_VAR_AREA_1_SLOW_INIT_16 (online) */
+
+
+/* Begin: SFTYDMA_START_SEC_VAR_AREA_1_SLOW_INIT_32 (online) */
+#define SFTYDMA_START_SEC_VAR_AREA_1_SLOW_INIT_32
+#include "MemMap.h"
+
+extern VAR(uint32, SFTYDMA_VAR) SftyDmaKl30TiStamp;
+#define SFTYDMA_STOP_SEC_VAR_AREA_1_SLOW_INIT_32
+#include "MemMap.h"
+/* End: SFTYDMA_STOP_SEC_VAR_AREA_1_SLOW_INIT_32 (online) */
+
+
+
+
+
+
+
+
+
+/* Begin: SFTYLVSPLYEVLN_START_SEC_CALIB_32 (calib struct) */
+#define SFTYLVSPLYEVLN_START_SEC_CALIB_32
+#include "MemMap.h"
+
+extern CONST(SftyOffsetGainType, SFTYLVSPLYEVLN_CALIB) SftyLvSplyEvlnKl30MeasProdData;
+
+#define SFTYLVSPLYEVLN_STOP_SEC_CALIB_32
+#include "MemMap.h"
+/* End: SFTYLVSPLYEVLN_STOP_SEC_CALIB_32 (calib struct) */
+
+
+
+/* Begin: SFTYLVSPLYEVLN_START_SEC_CALIB_32 (calib struct) */
+#define SFTYLVSPLYEVLN_START_SEC_CALIB_32
+#include "MemMap.h"
+
+extern CONST(SftyOffsetGainType, SFTYLVSPLYEVLN_CALIB) SftyLvSplyEvlnKl30MeasProdData;
+
+#define SFTYLVSPLYEVLN_STOP_SEC_CALIB_32
+#include "MemMap.h"
+/* End: SFTYLVSPLYEVLN_STOP_SEC_CALIB_32 (calib struct) */
+
+
+/************************* CALIBRATION PARAMETERS - END *****************************/
+
+/*================== [closure] ==============================================*/
+#endif
+/* ***************************************************************** */
+/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2021                 */
+/* All Rights Reserved. Confidential                                 */
+/* ***************************************************************** */
+/*==================[end of file]====================================*/
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyLvSplyEvln/lib/.gitkeep b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyLvSplyEvln/lib/.gitkeep
new file mode 100644
index 000000000..e69de29bb
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyLvSplyEvln/make/makefile.mak b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyLvSplyEvln/make/makefile.mak
new file mode 100644
index 000000000..69d0486e4
--- /dev/null
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyLvSplyEvln/make/makefile.mak
@@ -0,0 +1,28 @@
+# \\\\file\
#
+# \\brief AUTOSAR <ComponentName>
+#
+# This file contains the implementation of AUTOSAR
+# module <ComponentName>.
+#
+# \\author <AuthorInformation> Siemens AG, 91056 Erlangen, Germany
+#
+# Copyright 2015 - 2015 Siemens AG
+# All rights exclusively reserved for Siemens AG,
+# unless expressly agreed to otherwise.#
+################################################################## DEFINITIONS#
+#################################################################
+
+
+SftyLvSplyEvln_BASE := $(dir $(abspath $(lastword $(dir $(abspath $(lastword $(MAKEFILE_LIST)))))))
+SftyLvSplyEvln_PATH_OUT := $(SftyLvSplyEvln_BASE)generated
+SftyLvSplyEvln_PATH_USE := $(SftyLvSplyEvln_BASE)
+CC_FILES_TO_BUILD += $(wildcard $(SftyLvSplyEvln_BASE)src/*.c)
+CPP_FILES_TO_BUILD += $(wildcard $(SftyLvSplyEvln_BASE)src/*.cpp)
+ASM_FILES_TO_BUILD += $(wildcard $(SftyLvSplyEvln_BASE)src/*.s)
+
+SftyLvSplyEvln_ARCHIVED_LIB := $(wildcard $(SftyLvSplyEvln_BASE)lib/*.a)
+SftyLvSplyEvln_GENERATED_LIB := $(SftyLvSplyEvln_BASE)generated/lib/SftyLvSplyEvln.a
+SftyLvSplyEvln_ARCHIVED_A2L := $(wildcard $(SftyLvSplyEvln_BASE)a2l/*.a2l)
+SftyLvSplyEvln_GENERATED_A2L := $(SftyLvSplyEvln_BASE)generated/a2l/SftyLvSplyEvln.a2l
+A2L_SLAVE_SftyLvSplyEvln = $(SftyLvSplyEvln_GENERATED_A2L)
+CC_INCLUDE_PATH += $(SftyLvSplyEvln_BASE)include
\\ No newline at end of file
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyLvSplyEvln/src/SftyLvSplyEvln.c b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyLvSplyEvln/src/SftyLvSplyEvln.c
new file mode 100644
index 000000000..0f3ae97c6
--- /dev/null
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyLvSplyEvln/src/SftyLvSplyEvln.c
@@ -0,0 +1,320 @@
+/* ********************************************************************** */
+/* Sourcefile:    SftyLvSplyEvln.c                                         */
+/*                                                                        */
+/* Project:       100kw                                                   */
+/* TriCore                                                                */
+/*                                                                        */
+/* Department: Valeo Siemens eAutomotive                                  */
+/* I DT EC R&D                                                            */
+/* ********************************************************************** */
+/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2021              */
+/* All Rights Reserved. Confidential                                      */
+/* ********************************************************************** */
+
+/*!
+* \\defgroup SftyLvSplyEvln SftyLvSplyEvln - low voltage evaluation
+*           This module evaluates physical value of voltage from raw value.
+*           and update into the c2c variable
+*/
+
+
+/** 
+ * \\page SftyLvSplyEvln_reqs low voltage evaluation Module Requirements
+ * \\ingroup SftyLvSplyEvln
+ * \\brief low voltage evaluation Module Requirements
+ */
+
+
+/*!
+* \\defgroup SftyLvSplyEvln_module low voltage evaluation module
+* \\ingroup SftyLvSplyEvln
+* @{
+*/
+
+/*================== [includes] =============================================*/
+
+
+#include "C2cComSftyData.h"
+#include "SftyDma.h"
+#include "SftyDma_data.h"
+#include "SftyReplcmt_data.h"
+#include "SftyLvSplyEvln.h"
+#include "SftyLvSplyEvln_data.h"
+#include "ErrDeb_cmn.h"
+#include "SftyUtils.h"
+
+
+#if  defined(SWIT_Active) || defined(SWIT_IT_Active) || defined(SWIT_FC_Active)
+#include "SWIT_Sfty.h"
+#endif
+/*================== [defines] ==============================================*/
+/*================== [type definitions] =====================================*/
+
+
+
+/*================== [macros] ===============================================*/
+
+/*================== [local data] ===========================================*/
+
+
+
+#define SFTYLVSPLYEVLN_ASIL_B_START_SEC_VAR_FAST_CLEARED
+#include "MemMap.h"
+
+/*
+@@ SYMBOL = SftyLvSplyEvlnCurRawVal
+@@ A2L_TYPE = MEASURE
+@@ DATA_TYPE = UWORD
+@@ DESCRIPTION = "Current Raw Value"
+@@ GROUP = SftyLvSplyElvn
+@@ END
+*/
+/*! \\cvar Current Raw Value; unit \'-\' */
+STATIC VAR(uint16, SFTYLVSPLYEVLN_VAR) SftyLvSplyEvlnCurRawVal;
+
+
+
+/*
+@@ SYMBOL = SftyLvSplyEvlnCurTiStamp
+@@ A2L_TYPE = MEASURE
+@@ DATA_TYPE = ULONG
+@@ DESCRIPTION = "Current TimeStamp"
+@@ GROUP = SftyLvSplyElvn
+@@ END
+*/
+/*! \\cvar Current TimeStamp; unit \'-\' */
+STATIC VAR(uint32, SFTYLVSPLYEVLN_VAR) SftyLvSplyEvlnCurTiStamp;
+
+/*
+@@ SYMBOL = SftyLvSplyEvlnLstTiStamp
+@@ A2L_TYPE = MEASURE
+@@ DATA_TYPE = ULONG
+@@ DESCRIPTION = "Last time stamp"
+@@ GROUP = SftyLvSplyElvn
+@@ END
+*/
+/*! \\cvar Last time stamp; unit \'-\' */
+STATIC VAR(uint32, SFTYLVSPLYEVLN_VAR) SftyLvSplyEvlnLstTiStamp;
+
+
+
+/*
+@@ SYMBOL = SftyLvSplyEvlnTiStampErrSts
+@@ A2L_TYPE = MEASURE
+@@ DATA_TYPE = UBYTE
+@@ DESCRIPTION = "Last time Time stamp error monitor state"
+@@ GROUP = SftyLvSplyElvn
+@@ END
+*/
+/*! \\cvar Last time stamp; unit \'-\' */
+STATIC VAR(uint8, SFTYLVSPLYEVLN_VAR) SftyLvSplyEvlnTiStampErrSts;
+
+
+#define SFTYLVSPLYEVLN_ASIL_B_STOP_SEC_VAR_FAST_CLEARED
+#include "MemMap.h"
+
+/*================== [public data] ==========================================*/
+
+
+/*================== [private constant definitions] =========================*/
+
+/*================== [prototype of local functions] =========================*/
+
+/*================== [definition of local functions] ========================*/
+
+/******************************************************************/
+
+/******************************************************************/
+/*!
+ * \\fn      void SftyLvSplyEvln_VldtKl30DmaData(void)
+ * \\brief   Get Kl30 voltage raw value and timestamp from DMA
+ * \\Parent_DD : SftyLvSplyEvln_MainFunction
+ */
+/******************************************************************/
+LOCAL_INLINE void SftyLvSplyEvln_VldtKl30DmaData(void)
+{
+
+   /* ******** Variables declaration *********** */
+
+  /* ************* Source code **************** */
+   /* Get data from DMA buffer */
+   SftyDma_UpdateKl30AndTiStamp();
+
+#ifndef SERIES_PRODUCTION
+   if (SftyReplcmtLvSplyEvlnKl30DataStiEna == TRUE)
+   {
+      SftyLvSplyEvlnCurRawVal = SftyReplcmtLvSplyEvlnKl30RawVal;
+      SftyLvSplyEvlnCurTiStamp = SftyReplcmtLvSplyEvlnKl30TiStamp;
+   }
+   else
+#endif /* SERIES_PRODUCTION */
+   {
+      /* Raw value in KL30 measured over DMA */
+      SftyLvSplyEvlnCurRawVal = SftyDmaKl30RawVal;
+
+      /* raw value of Timestamp of KL30 over DMA */
+      SftyLvSplyEvlnCurTiStamp = SftyDmaKl30TiStamp;
+   }
+
+   /* Checking the validity of Time Stamp */
+   SftyLvSplyEvlnTiStampErrSts = SftyUtils_ChkTiStamp(&SftyLvSplyEvlnLstTiStamp, &SftyLvSplyEvlnCurTiStamp);
+
+   return;
+}
+
+/******************************************************************/
+/*!
+* \\fn    void SftyLvSplyEvln_RngChkKl30(void)
+* \\brief Check the over range of raw KL30 value
+* \\Parent_DD : SftyLvSplyEvln_MainFunction
+*/
+/******************************************************************/
+
+LOCAL_INLINE void SftyLvSplyEvln_RngChkKl30(void)
+{
+
+   /* ******** Variables declaration *********** */
+
+  /* ************* Source code **************** */
+
+      /* If raw KL30 voltage is bigger than high threshold */
+      if (SftyLvSplyEvlnKl30UMeas > SftyLvSplyEvlnKl30PhyRngHiThd )
+      {
+         /* Update the range high fault as fault and range low  as no fault*/
+         SftyLvSplyEvlnKl30RngHiErrMonrSt = ERR_DEB_MONR_STS_FAILED;
+         SftyLvSplyEvlnKl30RngLoErrMonrSt = ERR_DEB_MONR_STS_PASSED;
+      }
+      /* If raw KL30 voltage is bigger less than low threshold */
+      else if(SftyLvSplyEvlnKl30UMeas < SftyLvSplyEvlnKl30PhyRngLoThd)
+      {
+         /* Update the range high fault as no fault and low fault as fault */
+         SftyLvSplyEvlnKl30RngHiErrMonrSt = ERR_DEB_MONR_STS_PASSED;
+         SftyLvSplyEvlnKl30RngLoErrMonrSt = ERR_DEB_MONR_STS_FAILED;
+
+      }
+      /* If raw KL30 voltage is in the range of  thresholds */
+      else
+      {
+         /* Update the range high and low  fault as no fault */
+          SftyLvSplyEvlnKl30RngLoErrMonrSt = ERR_DEB_MONR_STS_PASSED;
+          SftyLvSplyEvlnKl30RngHiErrMonrSt = ERR_DEB_MONR_STS_PASSED;
+      }
+
+
+   return;
+}
+
+/******************************************************************/
+/*!
+* \\fn    void SftyLvSplyEvln_CnvKl30RawToPhyVal(void)
+* \\brief Convert the raw value into the physical values
+* \\Parent_DD : SftyLvSplyEvln_MainFunction
+*/
+/******************************************************************/
+
+LOCAL_INLINE void SftyLvSplyEvln_CnvKl30RawToPhyVal(void)
+{
+   /* ******** Variables declaration *********** */
+
+  /* ************* Source code **************** */
+   /* ******** Variables declaration *********** */
+
+
+   /* ************* Source code **************** */
+      /*Convert the raw value to physical value */
+      SftyLvSplyEvlnKl30UMeas = SftyUtils_ScaVal(SftyLvSplyEvlnCurRawVal,SftyLvSplyEvlnKl30MeasProdData);
+      /* updating the physical value to C2C*/
+      SftyC2cData.Kl30U = SftyLvSplyEvlnKl30UMeas;
+
+   return;
+}
+
+/******************************************************************/
+/*!
+* \\fn    void SftyLvSplyEvln_InitMainFunctionArea2(void)
+* \\brief reset the error states and measured values
+* \\Parent_DD : SftyLvSplyEvln_MainFunction
+*/
+/******************************************************************/
+
+LOCAL_INLINE void SftyLvSplyEvln_InitMainFunctionArea2(void)
+{
+   /* ******** Variables declaration *********** */
+
+  /* ************* Source code **************** */
+   /* ******** Variables declaration *********** */
+
+
+   /* ************* Source code **************** */
+   SftyLvSplyEvlnKl30RngLoErrMonrSt = ERR_DEB_MONR_STS_INACTIVE;
+   SftyLvSplyEvlnKl30RngHiErrMonrSt = ERR_DEB_MONR_STS_INACTIVE;
+   SftyLvSplyEvlnKl30UMeas = 0.0f;
+   SftyLvSplyEvlnCurTiStamp = 0U;
+   SftyLvSplyEvlnCurRawVal = 0U;
+
+   return;
+}
+
+#define SFTYLVSPLYEVLN_AREA_2_START_SEC_CODE_SLOW
+#include "MemMap.h"
+/******************************************************************/
+/*!
+ * \\fn      void SftyLvSplyEvln_MainFunctionArea2(void)
+ * \\brief   This API-Function shall be called in a cyclic task.
+ */
+/******************************************************************/
+FUNC(void, SFTYLVSPLYEVLN) SftyLvSplyEvln_MainFunctionArea2(void)
+{
+
+   /* ******** Variables declaration *********** */
+
+  /* ************* Source code **************** */
+   /* Call all the functions */
+   SftyLvSplyEvln_InitMainFunctionArea2();
+   SftyLvSplyEvln_VldtKl30DmaData();
+
+   /* Checking the error status of time stamp*/
+   if(SftyLvSplyEvlnTiStampErrSts == TRUE)
+   {
+      SftyLvSplyEvln_CnvKl30RawToPhyVal();
+      SftyLvSplyEvln_RngChkKl30();
+   }
+   else
+   {
+      /* Set error status */
+      SftyLvSplyEvlnKl30RngHiErrMonrSt = ERR_DEB_MONR_STS_FAILED;
+      SftyLvSplyEvlnKl30RngLoErrMonrSt = ERR_DEB_MONR_STS_FAILED;
+
+   }
+
+   return;
+}
+/******************************************************************/
+/*!
+ * \\fn      void SftyLvSplyEvln_InitArea2(void)
+ * \\brief   This API-Function shall be initialize all the variable used in the code.
+ */
+/******************************************************************/
+FUNC(void, SFTYLVSPLYEVLN) SftyLvSplyEvln_InitArea2(void)
+{
+   /* ******** Variables declaration *********** */
+
+  /* ************* Source code **************** */
+   SftyLvSplyEvlnKl30RngLoErrMonrSt = ERR_DEB_MONR_STS_INACTIVE;
+   SftyLvSplyEvlnKl30RngHiErrMonrSt = ERR_DEB_MONR_STS_INACTIVE;
+   SftyC2cData.Kl30U = 0.0f;
+   SftyLvSplyEvlnKl30UMeas = 0.0f;
+   SftyLvSplyEvlnLstTiStamp = 0xFFFFFFFFU;
+   SftyLvSplyEvlnCurTiStamp = 0U;
+   SftyLvSplyEvlnCurRawVal = 0U;
+   return;
+}
+#define SFTYLVSPLYEVLN_AREA_2_STOP_SEC_CODE_SLOW
+#include "MemMap.h"
+
+/*================== [closure] ==============================================*/
+/* ********************************************************************** */
+/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2021              */
+/* All Rights Reserved. Confidential                                      */
+/* ********************************************************************** */
+/*==================[end of file]============================================*/
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyLvSplyEvln/src/SftyLvSplyEvln_data.c b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyLvSplyEvln/src/SftyLvSplyEvln_data.c
new file mode 100644
index 000000000..f4f0dcd5e
--- /dev/null
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyLvSplyEvln/src/SftyLvSplyEvln_data.c
@@ -0,0 +1,132 @@
+/* ***************************************************************** */
+/* Sourcefile: SftyLvSplyEvln_data.c                                  */
+/* ADD Container: SftyLvSplyEvln                                      */
+/* ADD Container Version: 1.0.0                                      */
+/* ***************************************************************** */
+/* ***************************************************************** */
+/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2021                 */
+/* All Rights Reserved. Confidential                                 */
+/* ***************************************************************** */
+
+
+#include "SftyLvSplyEvln_data.h"
+
+
+
+
+/********************************* AREA CMN - BEGIN ***************************************/
+
+
+
+/* Begin: SFTYHVINTERLOCK_START_SEC_CALIB_32 (calib) */
+#define SFTYLVSPLYEVLN_START_SEC_CALIB_32
+#include "MemMap.h"
+/*
+@@ SYMBOL = SftyLvSplyEvlnKl30PhyRngHiThd
+@@ A2L_TYPE = PARAMETER
+@@ DATA_TYPE = FLOAT
+@@ DESCRIPTION = "Range High Threshold"
+@@ GROUP = SftyLvSplyEvln
+@@ END
+*/
+/*! \\cpar Range High Threshold; unit \'V\' */
+CONST(float32, SFTYLVSPLYEVLN_CALIB) SftyLvSplyEvlnKl30PhyRngHiThd = 16.0f;
+
+/*
+@@ SYMBOL = SftyLvSplyEvlnKl30PhyRngLoThd
+@@ A2L_TYPE = PARAMETER
+@@ DATA_TYPE = FLOAT
+@@ DESCRIPTION = "Range Low Threshold"
+@@ GROUP = SftyLvSplyEvln
+@@ END
+*/
+/*! \\cpar Range Low Threshold; unit \'V\' */
+CONST(float32, SFTYLVSPLYEVLN_CALIB) SftyLvSplyEvlnKl30PhyRngLoThd = 9.0f;
+
+#define SFTYLVSPLYEVLN_STOP_SEC_CALIB_32
+#include "MemMap.h"
+/* End: SFTYLVSPLYEVLN_STOP_SEC_CALIB_32 (calib) */
+
+
+
+/* Begin: SFTYLVSPLYEVLN_START_SEC_CALIB_8 (calib) */
+#define SFTYLVSPLYEVLN_START_SEC_VAR_AREA_2_SLOW_INIT_8
+#include "MemMap.h"
+/*
+@@ SYMBOL = SftyLvSplyEvlnKl30RngHiErrMonrSt
+@@ A2L_TYPE = MEASURE
+@@ DATA_TYPE = UBYTE
+@@ DESCRIPTION = "Range high error monitor status"
+@@ GROUP = SftyLvSplyEvln
+@@ END
+*/
+/*! \\cpar Range high error monitor status; unit \'-\' */
+VAR(uint8, SFTYLVSPLYEVLN_VAR) SftyLvSplyEvlnKl30RngHiErrMonrSt = 0U;
+
+/*
+@@ SYMBOL = SftyLvSplyEvlnKl30RngLoErrMonrSt
+@@ A2L_TYPE = MEASURE
+@@ DATA_TYPE = UBYTE
+@@ DESCRIPTION = "Range  low error monitor status"
+@@ GROUP = SftyLvSplyEvln
+@@ END
+*/
+/*! \\cpar Range low error monitor status; unit \'-\' */
+VAR(uint8, SFTYLVSPLYEVLN_VAR) SftyLvSplyEvlnKl30RngLoErrMonrSt = 0U;
+
+
+
+
+#define SFTYLVSPLYEVLN_STOP_SEC_VAR_AREA_2_SLOW_INIT_8
+#include "MemMap.h"
+/* End: SFTYLVSPLYEVLN_STOP_SEC_CALIB_8 (calib) */
+
+
+/* Begin: SFTYLVSPLYEVLN_START_SEC_VAR_AREA_2_SLOW_INIT_32 */
+#define SFTYLVSPLYEVLN_START_SEC_VAR_AREA_2_SLOW_INIT_32
+#include "MemMap.h"
+
+/*
+@@ SYMBOL = SftyLvSplyEvlnKl30UMeas
+@@ A2L_TYPE = MEASURE
+@@ DATA_TYPE = FLOAT
+@@ DESCRIPTION = "KL30 Measurement value"
+@@ GROUP = SftyLvSplyEvln
+@@ END
+*/
+/*! \\cpar Measurement KL30 value; unit \'V\' */
+
+ VAR(float32, SFTYLVSPLYEVLN_VAR) SftyLvSplyEvlnKl30UMeas = 0.0f;
+
+
+
+#define SFTYLVSPLYEVLN_STOP_SEC_VAR_AREA_2_SLOW_INIT_32
+#include "MemMap.h"
+/* End: SFTYLVSPLYEVLN_STOP_SEC_VAR_AREA_2_SLOW_INIT_32 */
+
+
+/* Begin: SFTYLVSPLYEVLN_START_SEC_CALIB_32 (calib struct) */
+#define SFTYLVSPLYEVLN_START_SEC_CALIB_32
+#include "MemMap.h"
+
+CONST(SftyOffsetGainType, SFTYLVSPLYEVLN_CALIB) SftyLvSplyEvlnKl30MeasProdData =
+         {0.0f, 0.2305f};
+
+
+
+#define SFTYLVSPLYEVLN_STOP_SEC_CALIB_32
+#include "MemMap.h"
+/* End: SFTYLVSPLYEVLN_STOP_SEC_CALIB_32 (calib struct) */
+
+
+
+
+/************************* CALIBRATION PARAMETERS - END *****************************/
+
+/*================== [closure] ==============================================*/
+
+/* ***************************************************************** */
+/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2021                 */
+/* All Rights Reserved. Confidential                                 */
+/* ***************************************************************** */
+/*==================[end of file]====================================*/
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftySdl/src/SftySdl_cfg.c b/src/fw_cu/Components/Safety/Sfty_Cmn/SftySdl/src/SftySdl_cfg.c
index 26d5d661b..bed8c5c06 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/SftySdl/src/SftySdl_cfg.c
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftySdl/src/SftySdl_cfg.c
@@ -41,6 +41,7 @@
 #include "SftyCrc.h"
 #include "SftySysInit_data.h"
 #include "SftyParkLockPosnAcqn.h"
+#include "SftyLvSplyEvln.h"
 #include "SftyParkLockEvln.h"
 
 /* Safety Inverter Modules */
@@ -455,37 +456,40 @@ STATIC FUNC(void, SFTYSDL) SftySdl_FinishInit(void)
 @@ INSTANCE = SftySdlTickCntNormRun._35_ SftySdlRunTiNormRun_SftyHvInterlock_MainFunction
 @@ STRUCTURE = SftySdl_TickCntType
 @@ END
-@@ INSTANCE = SftySdlTickCntNormRun._36_ SftySdlRunTiNormRun_SftyParkLockEvln_MainFastArea0
+@@ INSTANCE = SftySdlTickCntNormRun._36_ SftySdlRunTiNormRun_SftyLvSplyEvln_MainFunctionArea2
 @@ STRUCTURE = SftySdl_TickCntType
 @@ END
-@@ INSTANCE = SftySdlTickCntNormRun._37_ SftySdlRunTiNormRun_SftyParkLockEvln_MainFunctionArea2
+@@ INSTANCE = SftySdlTickCntNormRun._37_ SftySdlRunTiNormRun_SftyParkLockEvln_MainFastArea0
 @@ STRUCTURE = SftySdl_TickCntType
 @@ END
-@@ INSTANCE = SftySdlTickCntNormRun._38_ SftySdlRunTiNormRun_SftyParkLockEvln_SlowFunctionArea2
+@@ INSTANCE = SftySdlTickCntNormRun._38_ SftySdlRunTiNormRun_SftyParkLockEvln_MainFunctionArea2
 @@ STRUCTURE = SftySdl_TickCntType
 @@ END
-@@ INSTANCE = SftySdlTickCntNormRun._39_ SftySdlRunTiNormRun_SftySdl_MPUChkArea1Slow
+@@ INSTANCE = SftySdlTickCntNormRun._39_ SftySdlRunTiNormRun_SftyParkLockEvln_SlowFunctionArea2
 @@ STRUCTURE = SftySdl_TickCntType
 @@ END
-@@ INSTANCE = SftySdlTickCntNormRun._40_ SftySdlRunTiNormRun_SftySdl_MPUChkArea2Slow
+@@ INSTANCE = SftySdlTickCntNormRun._40_ SftySdlRunTiNormRun_SftySdl_MPUChkArea1Slow
 @@ STRUCTURE = SftySdl_TickCntType
 @@ END
-@@ INSTANCE = SftySdlTickCntNormRun._41_ SftySdlRunTiNormRun_SftySdl_MPUChkAreaCmnSlow
+@@ INSTANCE = SftySdlTickCntNormRun._41_ SftySdlRunTiNormRun_SftySdl_MPUChkArea2Slow
 @@ STRUCTURE = SftySdl_TickCntType
 @@ END
-@@ INSTANCE = SftySdlTickCntNormRun._42_ SftySdlRunTiNormRun_SftySdl_MPUChkArea0
+@@ INSTANCE = SftySdlTickCntNormRun._42_ SftySdlRunTiNormRun_SftySdl_MPUChkAreaCmnSlow
 @@ STRUCTURE = SftySdl_TickCntType
 @@ END
-@@ INSTANCE = SftySdlTickCntNormRun._43_ SftySdlRunTiNormRun_SftySdl_MPUChkArea1
+@@ INSTANCE = SftySdlTickCntNormRun._43_ SftySdlRunTiNormRun_SftySdl_MPUChkArea0
 @@ STRUCTURE = SftySdl_TickCntType
 @@ END
-@@ INSTANCE = SftySdlTickCntNormRun._44_ SftySdlRunTiNormRun_SftySdl_MPUChkArea2
+@@ INSTANCE = SftySdlTickCntNormRun._44_ SftySdlRunTiNormRun_SftySdl_MPUChkArea1
 @@ STRUCTURE = SftySdl_TickCntType
 @@ END
-@@ INSTANCE = SftySdlTickCntNormRun._45_ SftySdlRunTiNormRun_SftySdl_MPUChkAreaCmn
+@@ INSTANCE = SftySdlTickCntNormRun._45_ SftySdlRunTiNormRun_SftySdl_MPUChkArea2
 @@ STRUCTURE = SftySdl_TickCntType
 @@ END
-@@ INSTANCE = SftySdlTickCntNormRun._46_ SftySdlRunTiNormRun_SftySysInit_DebugModChk
+@@ INSTANCE = SftySdlTickCntNormRun._46_ SftySdlRunTiNormRun_SftySdl_MPUChkAreaCmn
+@@ STRUCTURE = SftySdl_TickCntType
+@@ END
+@@ INSTANCE = SftySdlTickCntNormRun._47_ SftySdlRunTiNormRun_SftySysInit_DebugModChk
 @@ STRUCTURE = SftySdl_TickCntType
 @@ END
 */
@@ -548,6 +552,7 @@ CONST(SftySdl_TaskTblType, SFTYSDL) SftySdlNormRunTaskTbl[]=
    ,{ SFTYSDL_AREA_CMN, &SftyShutoffPahTst_Main,                  10u,           0u}
    ,{ SFTYSDL_AREA_1,   &SftyCrashSigMon_MainFunction,            10u,           0u}
    ,{ SFTYSDL_AREA_2,   &SftyHvInterlock_MainFunction,            10u,           0u}
+   ,{ SFTYSDL_AREA_2,   &SftyLvSplyEvln_MainFunctionArea2,        50u,           0u}
    ,{ SFTYSDL_AREA_0,   &SftyParkLockEvln_MainFastArea0,           2u,           0u}
    ,{ SFTYSDL_AREA_2,   &SftyParkLockEvln_MainFunctionArea2,      10u,           0u}
    ,{ SFTYSDL_AREA_2,   &SftyParkLockEvln_SlowFunctionArea2,     100u,           0u}
@@ -625,6 +630,7 @@ CONST(SftySdl_InitTblType, SFTYSDL) SftySdlInitNormRunTbl[] =
 \t\t\t\t\t\t\t\t\t\t\t\t\t\t/* is enabled */
     ,{ SFTYSDL_AREA_1,   &SftyCrashSigMon_Init}
     ,{ SFTYSDL_AREA_2,   &SftyHvInterlock_Init}
+    ,{ SFTYSDL_AREA_2,   &SftyLvSplyEvln_InitArea2}
 \t,{ SFTYSDL_AREA_2,   &SftyParkLockEvln_Init}
 };
 
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/include/SftyReplcmt_data.h b/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/include/SftyReplcmt_data.h
index 7afb38a1d..75ea2eeba 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/include/SftyReplcmt_data.h
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/include/SftyReplcmt_data.h
@@ -2598,6 +2598,38 @@ extern CONST(uint8, SFTYREPLCMT_CALIB) SftyReplcmtHvInterlockStiEna;
 #include "MemMap.h"
 /* End: SFTYREPLCMT_STOP_SEC_CALIB_8 (calib) */
 
+/* Begin: SFTYREPLCMT_START_SEC_CALIB_8 (calib) */
+#define SFTYREPLCMT_START_SEC_CALIB_8
+#include "MemMap.h"
+
+extern CONST(uint8, SFTYREPLCMT_CALIB) SftyReplcmtLvSplyEvlnKl30DataStiEna;
+
+#define SFTYREPLCMT_STOP_SEC_CALIB_8
+#include "MemMap.h"
+/* End: SFTYREPLCMT_STOP_SEC_CALIB_8 (calib) */
+
+/* Begin: SFTYREPLCMT_START_SEC_CALIB_16 (calib) */
+#define SFTYREPLCMT_START_SEC_CALIB_8
+#include "MemMap.h"
+
+extern CONST(uint16, SFTYREPLCMT_CALIB) SftyReplcmtLvSplyEvlnKl30RawVal;
+
+#define SFTYREPLCMT_STOP_SEC_CALIB_16
+#include "MemMap.h"
+/* End: SFTYREPLCMT_STOP_SEC_CALIB_16 (calib) */
+
+
+/* Begin: SFTYREPLCMT_START_SEC_CALIB_32 (calib) */
+#define SFTYREPLCMT_START_SEC_CALIB_32
+#include "MemMap.h"
+
+extern CONST(uint32, SFTYREPLCMT_CALIB) SftyReplcmtLvSplyEvlnKl30TiStamp;
+
+#define SFTYREPLCMT_STOP_SEC_CALIB_32
+#include "MemMap.h"
+/* End: SFTYREPLCMT_STOP_SEC_CALIB_32 (calib) */
+
+
 /* Begin: SFTYREPLCMT_START_SEC_CALIB_8 (calib) */
 #define SFTYREPLCMT_START_SEC_CALIB_8
 #include "MemMap.h"
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/src/SftyReplcmt_data.c b/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/src/SftyReplcmt_data.c
index 52bdf0dae..70074d4bc 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/src/SftyReplcmt_data.c
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/Sfty_Common/src/SftyReplcmt_data.c
@@ -2666,6 +2666,60 @@ CONST(uint8, SFTYREPLCMT_CALIB) SftyReplcmtHvInterlockStiEna = 0U;
 #include "MemMap.h"
 /* End: SFTYREPLCMT_STOP_SEC_CALIB_8 (calib) */
 
+/* Begin: SFTYREPLCMT_START_SEC_CALIB_8 (calib) */
+#define SFTYREPLCMT_START_SEC_CALIB_8
+#include "MemMap.h"
+/*
+@@ SYMBOL = SftyReplcmtLvSplyEvlnKl30DataStiEna
+@@ A2L_TYPE = PARAMETER
+@@ DATA_TYPE = UBYTE
+@@ DESCRIPTION = "Safety replacement values enabled for Low voltage supply "
+@@ GROUP = SftyLvSplyEvln
+@@ END
+*/
+CONST(uint8, SFTYREPLCMT_CALIB) SftyReplcmtLvSplyEvlnKl30DataStiEna = 0U;
+
+#define SFTYREPLCMT_STOP_SEC_CALIB_8
+#include "MemMap.h"
+/* End: SFTYREPLCMT_STOP_SEC_CALIB_8 (calib) */
+
+/* Begin: SFTYREPLCMT_START_SEC_CALIB_16 (calib) */
+#define SFTYREPLCMT_START_SEC_CALIB_16
+#include "MemMap.h"
+/*
+@@ SYMBOL = SftyReplcmtLvSplyEvlnKl30RawVal
+@@ A2L_TYPE = PARAMETER
+@@ DATA_TYPE = UWORD
+@@ DESCRIPTION = "Safety replacement values enabled for Low voltage raw value supply "
+@@ GROUP = SftyLvSplyEvln
+@@ END
+*/
+CONST(uint16, SFTYREPLCMT_CALIB) SftyReplcmtLvSplyEvlnKl30RawVal = 0U;
+
+#define SFTYREPLCMT_STOP_SEC_CALIB_16
+#include "MemMap.h"
+/* End: SFTYREPLCMT_STOP_SEC_CALIB_16 (calib) */
+
+
+/* Begin: SFTYREPLCMT_START_SEC_CALIB_32 (calib) */
+#define SFTYREPLCMT_START_SEC_CALIB_32
+#include "MemMap.h"
+/*
+@@ SYMBOL = SftyReplcmtLvSplyEvlnKl30TiStamp
+@@ A2L_TYPE = PARAMETER
+@@ DATA_TYPE = ULONG
+@@ DESCRIPTION = "Safety replacement values enabled for Low voltage time stamp supply "
+@@ GROUP = SftyLvSplyEvln
+@@ END
+*/
+CONST(uint32, SFTYREPLCMT_CALIB) SftyReplcmtLvSplyEvlnKl30TiStamp = 0U;
+
+#define SFTYREPLCMT_STOP_SEC_CALIB_32
+#include "MemMap.h"
+/* End: SFTYREPLCMT_STOP_SEC_CALIB_32 (calib) */
+
+
+
 /* Begin: SFTYREPLCMT_START_SEC_CALIB_8 (calib) */
 #define SFTYREPLCMT_START_SEC_CALIB_8
 #include "MemMap.h"
diff --git a/src/fw_cu/build/a2l/Add.a2l b/src/fw_cu/build/a2l/Add.a2l
index ec23b9ad7..3210cfa02 100644
--- a/src/fw_cu/build/a2l/Add.a2l
+++ b/src/fw_cu/build/a2l/Add.a2l
@@ -3132,6 +3132,29 @@ ASAP2_VERSION 1 60
          3.402823466385288e+038
          FORMAT "%.15"
       /end CHARACTERISTIC
+\t        /begin CHARACTERISTIC SftyLvSplyEvlnKl30MeasProdData.Offset
+         "Offset"
+         VALUE
+         0x0
+         _REC_S1VAL_Autosar40_F4
+         6.805646932770577e+38
+         _CNV_R_R_RATIONALFU_4_CM
+         -3.402823466385288e+038
+         3.402823466385288e+038
+         FORMAT "%.15"
+      /end CHARACTERISTIC
+
+      /begin CHARACTERISTIC SftyLvSplyEvlnKl30MeasProdData.Gain
+         "Gain"
+         VALUE
+         0x0
+         _REC_S1VAL_Autosar40_F4
+         6.805646932770577e+38
+         _CNV_R_R_RATIONALFU_4_CM
+         -3.402823466385288e+038
+         3.402823466385288e+038
+         FORMAT "%.15"
+      /end CHARACTERISTIC
 
       /begin CHARACTERISTIC SftyQSpiCfg.TQ
          "TQ"
@@ -34753,6 +34776,8 @@ ASAP2_VERSION 1 60
             SftyExtAdcHvDcUMeasProdData.Gain
             SftyHvDcUMeasProdData.Offset
             SftyHvDcUMeasProdData.Gain
+\t\t\tSftyLvSplyEvlnKl30MeasProdData.Offset
+\t\t\tSftyLvSplyEvlnKl30MeasProdData.Gain
          /end DEF_CHARACTERISTIC
       /end FUNCTION
 
diff --git a/src/fw_cu/build/a2l/Measurements-to-Timeslices-Mapping.csv b/src/fw_cu/build/a2l/Measurements-to-Timeslices-Mapping.csv
index 5a05f1947..b89bcf6c0 100644
--- a/src/fw_cu/build/a2l/Measurements-to-Timeslices-Mapping.csv
+++ b/src/fw_cu/build/a2l/Measurements-to-Timeslices-Mapping.csv
@@ -6586,6 +6586,9 @@ SftySdlRunTiNormRun_SftyCrashSigMon_MainFunction.TickStart,Core_1,Core_1_200us,0
 SftySdlRunTiNormRun_SftyHvInterlock_MainFunction.CycTi,Core_1,Core_1_200us,0.2,,,SSW
 SftySdlRunTiNormRun_SftyHvInterlock_MainFunction.RunTi,Core_1,Core_1_200us,0.2,,,SSW
 SftySdlRunTiNormRun_SftyHvInterlock_MainFunction.TickStart,Core_1,Core_1_200us,0.2,,,SSW
+SftySdlRunTiNormRun_SftyLvSplyEvln_MainFunctionArea2.CycTi,Core_1,Core_1_200us,0.2,,,SSW
+SftySdlRunTiNormRun_SftyLvSplyEvln_MainFunctionArea2.RunTi,Core_1,Core_1_200us,0.2,,,SSW
+SftySdlRunTiNormRun_SftyLvSplyEvln_MainFunctionArea2.TickStart,Core_1,Core_1_200us,0.2,,,SSW
 SftySdlRunTiNormRun_SftySdl_MPUChkArea1Slow.CycTi,Core_1,Core_1_200us,0.2,,,SSW
 SftySdlRunTiNormRun_SftySdl_MPUChkArea1Slow.RunTi,Core_1,Core_1_200us,0.2,,,SSW
 SftySdlRunTiNormRun_SftySdl_MPUChkArea1Slow.TickStart,Core_1,Core_1_200us,0.2,,,SSW
@@ -8118,6 +8121,13 @@ SftyInvActrSafeStReqIntel,Core_1,Core_1_200us,0.2,,,SSW
 SftyInvActrStateReqEmgySw,Core_1,Core_1_200us,0.2,,,SSW
 SftyInvActrStateReqMod,Core_1,Core_1_200us,0.2,,,SSW
 SftyInvActrStateReqSCSpdReady,Core_1,Core_1_200us,0.2,,,SSW
+SftyLvSplyEvlnCurRawVal,Core_1,Core_1_200us,0.2,,,SSW
+SftyLvSplyEvlnCurTiStamp,Core_1,Core_1_200us,0.2,,,SSW
+SftyLvSplyEvlnKl30RngHiErrMonrSt,Core_1,Core_1_200us,0.2,,,SSW
+SftyLvSplyEvlnKl30RngLoErrMonrSt,Core_1,Core_1_200us,0.2,,,SSW
+SftyLvSplyEvlnKl30UMeas,Core_1,Core_1_200us,0.2,,,SSW
+SftyLvSplyEvlnLstTiStamp,Core_1,Core_1_200us,0.2,,,SSW
+SftyLvSplyEvlnTiStampErrSts,Core_1,Core_1_200us,0.2,,,SSW
 SftyParkLockEvln24BitCrcFrame.byte.data0,Core_1,Core_1_200us,0.2,,,SSW
 SftyParkLockEvln24BitCrcFrame.byte.data1,Core_1,Core_1_200us,0.2,,,SSW
 SftyParkLockEvln24BitCrcFrame.byte.data2,Core_1,Core_1_200us,0.2,,,SSW
'
