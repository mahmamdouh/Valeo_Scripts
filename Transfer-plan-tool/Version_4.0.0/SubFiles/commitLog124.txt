b'commit 4f7278089b564a739721d415211718a1795cd04d
Author: David VARGA <david.varga.jv.ext@valeo.com>
Date:   Tue Nov 23 09:59:18 2021 +0100

    $100kW-46429$ - TqMgr P310-QAC fixes
    
    Change-Id: I1b4043c253a7d60c6e5f8d0cc55f2ebc84b0eb87

diff --git a/src/fw_cu/Components/Inv/LimAndDrt/TqMgr/src/TqMgr.c b/src/fw_cu/Components/Inv/LimAndDrt/TqMgr/src/TqMgr.c
index 22c4e9aac..ec802e605 100644
--- a/src/fw_cu/Components/Inv/LimAndDrt/TqMgr/src/TqMgr.c
+++ b/src/fw_cu/Components/Inv/LimAndDrt/TqMgr/src/TqMgr.c
@@ -622,7 +622,7 @@ FUNC(void, TQMGR_CORE0_CODE) TqMgr_Main(void) /*PRQA S 1503*/
    AlphaTqMin = TqMgr_CalcAlpha(SpdActLoc, SysPrmTqMotGenToTqMinSpdThdLo, SysPrmTqMotGenToTqMinSpdThdHi);
    AlphaTqMax = TqMgr_CalcAlpha(SpdActLoc, SysPrmTqMotGenToTqMaxSpdThdLo, SysPrmTqMotGenToTqMaxSpdThdHi);
 
-#if 0  /* p300_rebase */
+#if 0  /* External power limitation is currently disabled */
    /* Connect to TqPredn */
    (void)Rte_Read_TqPrednTqMinMax_Leistung_Phy_TqMax(&TqMgrPwrLimnExtTqMot);
    (void)Rte_Read_TqPrednTqMinMax_Leistung_Phy_TqMin(&TqMgrPwrLimnExtTqGen);
@@ -777,26 +777,21 @@ FUNC(void, TQMGR_CORE0_CODE) TqMgr_Main(void) /*PRQA S 1503*/
       /* safe state (SPO/ASC) is active */
      TqMgrTqAvlMin = TqActLoc;
      TqMgrTqAvlMax = TqActLoc;
-#if SYSCON_FTR_PSM == 1 /* USE_IPMCTRL_CONTROL */
+#if 0  /* External power limitation is currently disabled */
      TqMgrTqAvlMinExtPwrLim = TqActLoc;
      TqMgrTqAvlMaxExtPwrLim = TqActLoc;
      TqMgrTqAvlMinExtPwrTotLim = TqActLoc;
      TqMgrTqAvlMaxExtPwrTotLim = TqActLoc;
-#endif /* SYSCON_FTR_PSM == 1 */
+#endif /* External power limitation is currently disabled */
    }
    else
    {
      TqMgrTqAvlMin = TqLimTotMinLoc;
      TqMgrTqAvlMax = TqLimTotMaxLoc;
-#if SYSCON_FTR_ASM == 1 /* USE_ASMCTRL_CONTROL */
-   }
-#endif /* SYSCON_FTR_ASM == 1 */
-
-#if 0  /* p300_rebase */
+#if 0  /* External power limitation is currently disabled */
      /* Torque Switch characteristics (for TqPredn) */
      TqMinLoc = TqMgr_CalcTqMin(TqMgrPwrLimnExtTqMot, TqMgrPwrLimnExtTqGen, AlphaTqMin);
      TqMaxLoc = TqMgr_CalcTqMax(TqMgrPwrLimnExtTqMot, TqMgrPwrLimnExtTqGen, AlphaTqMax);
-#endif
 
      TqMinLoc = TqMgr_Max(TqMinLoc, TqLimDrtgMinLoc);
      TqMaxLoc = TqMgr_Min(TqMaxLoc, TqLimDrtgMaxLoc);
@@ -806,20 +801,19 @@ FUNC(void, TQMGR_CORE0_CODE) TqMgr_Main(void) /*PRQA S 1503*/
 
      /* Provide TqAvlTotPwrMinMax Torque Limits */
 
-#if 0  /* p300_rebase */
      /* Torque Switch characteristics (for TotPwrLimn) */
      TqMinLoc = TqMgr_CalcTqMin(TqMgrTotPwrLimnExtTqMot, TqMgrTotPwrLimnExtTqGen, AlphaTqMin);
      TqMaxLoc = TqMgr_CalcTqMax(TqMgrTotPwrLimnExtTqMot, TqMgrTotPwrLimnExtTqGen, AlphaTqMax);
-#endif
+
 
      TqMinLoc = TqMgr_Max(TqMinLoc, TqLimDrtgMinLoc);
      TqMaxLoc = TqMgr_Min(TqMaxLoc, TqLimDrtgMaxLoc);
 
      TqMgrTqAvlMinExtPwrTotLim = TqMinLoc;
      TqMgrTqAvlMaxExtPwrTotLim = TqMaxLoc;
-#if SYSCON_FTR_PSM == 1 /* USE_IPMCTRL_CONTROL */
+#endif  /* External power limitation is currently disabled */
    }
-#endif /* SYSCON_FTR_PSM == 1 */
+
 
    /* Torque limitation for the TqPredn (GenPwrCalcn)
     * this calculation is independent of the safe status
@@ -872,6 +866,7 @@ FUNC(void, TQMGR_CORE0_CODE) TqMgr_Main(void) /*PRQA S 1503*/
    #endif
    (void)Rte_Write_MinMax_Moment_Lim_Phy_Max_Moment_Lim(CanNm);
 
+#if 0 /* External power limitation is currently disabled */
    /* Min torque limit from TqPredn */
    CanNm = TqMgrTqAvlMinExtPwrLim * GearRatFac;
 
@@ -891,6 +886,7 @@ FUNC(void, TQMGR_CORE0_CODE) TqMgr_Main(void) /*PRQA S 1503*/
    CanNm = TqMgrTqAvlMaxExtPwrTotLim * GearRatFac;
 
    (void)Rte_Write_MinMax_Moment_Gesamt_Phy_Max_Moment_Gesamt(CanNm);
+#endif /* External power limitation is currently disabled */
 
    /* EM1_Max_Moment_nom
     * Interner Parameter
@@ -922,21 +918,6 @@ FUNC(void, TQMGR_CORE0_CODE) TqMgr_Main(void) /*PRQA S 1503*/
 
    (void)Rte_Write_IstMoment_Phy_IstMoment(CanNm);
 
-   /* Torque min. limit for active damping */
-   (void)Rte_Write_PECLim_tqMinExtd_VW_PECInIf_tqMinExtd_VW(TqLimTotMinLoc);
-
-   /* Torque max. limit for active damping */
-   (void)Rte_Write_PECLim_tqMaxExtd_VW_PECInIf_tqMaxExtd_VW(TqLimTotMaxLoc);
-
-   /* Max. torque for active damping */
-   (void)Rte_Write_TqOutIf_DampMax_VW_PECInIf_tqDampMax_VW(TqMgrDmpgTqMax);
-
-   /* Act. speed for active damping */
-   (void)Rte_Write_TqOutIf_nMecFil1_VW_PECInIf_nMecFil1_VW(SpdActLoc);
-
-   /* TODO: Connect this directly ! */
-   (void)Rte_Write_TqOutIf_Fric_VW_PECInIf_tqFric_VW(0.F);
-
 #if defined( SWIT_Active) || defined( SWIT_IT_Active)
    SWIT_TqMgr_Main_EndHook();
 #endif
@@ -947,7 +928,7 @@ FUNC(void, TQMGR_CORE0_CODE) TqMgr_Main(void) /*PRQA S 1503*/
    }
    if(SWIT_DRCO_INTERFACES_MAIN_KEY_ENABLE==SWIT_DRCO_Interfaces_Main_key)
      {
-        //SWIT_TqMgr_Main2_EndHook();
+        /*SWIT_TqMgr_Main2_EndHook();*/
      }
 #endif
    return;
@@ -969,37 +950,21 @@ FUNC(void, TQMGR_CORE0_CODE) TqMgr_Main(void) /*PRQA S 1503*/
 /* VWMEB-Inv-174613 - TqMgr_AntiRuckel (TqSpSel)                                */
 FUNC(void, TQMGR_CORE0_CODE) TqMgr_AntiRuckel (void) /*PRQA S 1503*/
 {
-
    float32 TqSetptLoc;
    uint8 tqspSelBsw = 0U;
    float32 TqSetptPhy;
 
-
-   if(FALSE == TqMgrTqSetptUseCan)
-   {
-      /* Get the torque setpoint from the VW ASR/AR component */
-      (void)Rte_Read_TqInIf_tqSpElm_VW_PECOutIf_tqSpElm_VW((uint8*)&TqSetptLoc);
-   }
-   else
-   {
-      /* Get the torque request from CAN */
-      (void)Rte_Read_SollMoment_Phy_SollMoment(&TqSetptPhy);
-      TqSetptLoc = TqSetptPhy / GearRatFac; /* 11.97 */
-   }
+   /* Get the torque request from CAN */
+   (void)Rte_Read_SollMoment_Phy_SollMoment(&TqSetptPhy);
+   TqSetptLoc = TqSetptPhy / GearRatFac; /* 11.97 */
 
    /* Provide the final torque setpoint to Core 2 */
    BswC2cData.TqReq = TqSetptLoc;
    /* Get the set point selection (mode) from CAN */
    (void)Rte_Read_TqSPSelBsw_TqSpSel(&tqspSelBsw);
-/*! \\misra Warning  Msg(4342) an expression of essentially unsigned type has been cast to an enum type. - ADD does not allow enums" */
+   /*! \\misra Warning  Msg(4342) an expression of essentially unsigned type has been cast to an enum type. - ADD does not allow enums" */
    BswC2cData.TqSpSel = (C2cTqSpSelType)tqspSelBsw; /* PRQA S 4342 */
 
-   /* CZ: Following signals are not needed right now */
-   /*
-   (void)Rte_Read_TqInIf_SpMaxSpdl_VW_PECOutIf_tqSpMaxSpdl_VW(&arg_Read_data_5);
-   (void)Rte_Read_TqInIf_SpMinSpdl_VW_PECOutIf_tqSpMinSpdl_VW(&arg_Read_data_6);
-   (void)Rte_Read_TqInIf_tqDamp_VW_PECOutIf_tqDamp_VW(&arg_Read_data_7);
-   */
    return;
 }
 #define TQMGR_CORE0_STOP_SEC_CODE
'
