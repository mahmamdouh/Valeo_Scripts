b'commit 58907411885336eff6726177b10d08b48f81e8c1
Author: Shashi KUMAR (JV) <shashi.kumar.jv@valeo.com>
Date:   Tue Mar 29 18:29:06 2022 +0200

    $100kW-56762$ -Fast over sampling
    
    Change-Id: Iaa2aeb12f44bf5be8a651d4c93b20a47578cabd8

diff --git a/src/fw_cu/Components/Cmn/Sys/GtmDrv/include/LlswGtm_PrjImpl.h b/src/fw_cu/Components/Cmn/Sys/GtmDrv/include/LlswGtm_PrjImpl.h
index 5a187bc9c..78239c855 100644
--- a/src/fw_cu/Components/Cmn/Sys/GtmDrv/include/LlswGtm_PrjImpl.h
+++ b/src/fw_cu/Components/Cmn/Sys/GtmDrv/include/LlswGtm_PrjImpl.h
@@ -94,6 +94,25 @@ EXTERNAL_ CONST(boolean,GTMDRV_CONST) SysPrmRslvrExctInvertedEna;       /* PRQA
 #define STOP_SEC_CALIB
 #include "MemMap.h"
 
+#define START_SEC_CALIB
+/*lint -e(537,451) Repeated inclusion is needed. */
+#include "MemMap.h"
+
+extern const uint16 BswFpgaIfTxCurSamplOffsVal;
+
+#define STOP_SEC_CALIB
+/*lint -e(537,451) Repeated inclusion is needed. */
+#include "MemMap.h"
+
+/* Begin: PWMSPMGR_START_SEC_VAR_CLEARED_32 (online) */
+#define PWMSPMGR_START_SEC_VAR_CLEARED_32
+#include "MemMap.h"
+
+extern VAR(float32, PWMSPMGR_VAR) PwmSpMgrPwmFrqSp;
+#define PWMSPMGR_STOP_SEC_VAR_CLEARED_32
+#include "MemMap.h"
+/* End: PWMSPMGR_STOP_SEC_VAR_CLEARED_32 (online) */
+
 #define LLSWGTM_START_SEC_INIT_CODE_SLOW
 #include "MemMap.h"
 
diff --git a/src/fw_cu/Components/Cmn/Sys/GtmDrv/src/LlswGtm_PrjImpl.c b/src/fw_cu/Components/Cmn/Sys/GtmDrv/src/LlswGtm_PrjImpl.c
index ad7ba3ab8..319a02d71 100644
--- a/src/fw_cu/Components/Cmn/Sys/GtmDrv/src/LlswGtm_PrjImpl.c
+++ b/src/fw_cu/Components/Cmn/Sys/GtmDrv/src/LlswGtm_PrjImpl.c
@@ -73,6 +73,25 @@
 
 extern VAR(boolean,FPGA_VAR) App_Timeout;
 
+/*
+@@ SYMBOL = LlswGtmPwmSpMgrFreqPrev
+@@ A2L_TYPE = MEASURE
+@@ DATA_TYPE = FLOAT
+@@ DESCRIPTION = "LlswGtmPwmSpMgrFreqPrev"
+@@ GROUP = LlswGtm_Cfg
+@@ END
+*/
+float32 LlswGtmPwmSpMgrFreqPrev = 0.f;
+
+/*
+@@ SYMBOL = LlswGtmPwmSpMgrFreq
+@@ A2L_TYPE = MEASURE
+@@ DATA_TYPE = FLOAT
+@@ DESCRIPTION = "LlswGtmPwmSpMgrFreq"
+@@ GROUP = LlswGtm_Cfg
+@@ END
+*/
+float32 LlswGtmPwmSpMgrFreq = 0.f;
 #define ISW_STOP_SEC_VAR_FAST_INIT
 #include <MemMap.h>
 /*================== [macros] ===============================================*/
@@ -143,7 +162,24 @@ static volatile uint32 gtm_count_tim_dsadc_cosine;
  * Temporary used constant
  * TODO: TEST_VAL_FOR_DRCO_FPGA_PARAM_IN_25NS_TICKS should be replaced by the real parameter from DRCO
  */
+/*
+@@ SYMBOL = TEST_VAL_FOR_DRCO_FPGA_PARAM_IN_25NS_TICKS
+@@ A2L_TYPE = PARAMETER
+@@ DATA_TYPE = ULONG
+@@ DESCRIPTION = "TEST_VAL_FOR_DRCO_FPGA_PARAM_IN_25NS_TICKS"
+@@ GROUP = LlswGtm_Cfg
+@@ END
+*/
 const uint32 TEST_VAL_FOR_DRCO_FPGA_PARAM_IN_25NS_TICKS = 440U; // 1000U; //800U; //600U; /* example value =  600 * 25ns = 15000ns = 15 us. Value 800==>20us; 1000=>25us; 440==>11us ... */
+/*
+@@ SYMBOL = TEST_VAL_FOR_DRCO_FPGA_PHAI_TI
+@@ A2L_TYPE = PARAMETER
+@@ DATA_TYPE = FLOAT
+@@ DESCRIPTION = "TEST_VAL_FOR_DRCO_FPGA_PHAI_TI"
+@@ GROUP = LlswGtm_Cfg
+@@ END
+*/
+const float32 TEST_VAL_FOR_DRCO_FPGA_PHAI_TI = 100000000.f;
 
 #define LLSWGTM_STOP_SEC_CONST
 #include "MemMap.h"
@@ -242,6 +278,8 @@ IFX_INTERRUPT(isr_tim_osm_resolver_excitation_start, VTABLE_CPU2, ISR_PRIO_RES_E
    gtm_count_isr_osm_resolver_start++;
 #endif /* LLSWGTM_USE_DEBUG_VARIABLES */
 
+   LlswGtmPwmSpMgrFreqPrev = LlswGtmPwmSpMgrFreq;
+   LlswGtmPwmSpMgrFreq = PwmSpMgrPwmFrqSp;
    /* Wait until CS is stable */
    if (resolverStartedFlag < 20U)
    {
@@ -260,7 +298,7 @@ IFX_INTERRUPT(isr_tim_osm_resolver_excitation_start, VTABLE_CPU2, ISR_PRIO_RES_E
    {
 #ifdef RESOLVER_EXC_FREQ_DYN_ADJ
       /* Update phase current timestamp - Used by DRCO to synchronize Resolver */
-      EncCalcnInpTiStampHvAcI = (uint32) GTM_TBU_CH1_BASE.B.BASE + drcoParamConvTo10nsUnit;
+      EncCalcnInpTiStampHvAcI = ((uint32) GTM_TBU_CH1_BASE.B.BASE + (uint32) drcoParamConvTo10nsUnit + (uint32)((float)BswFpgaIfTxCurSamplOffsVal * 2.5f)) - (TEST_VAL_FOR_DRCO_FPGA_PHAI_TI / (2 * LlswGtmPwmSpMgrFreqPrev));
 #else /* RESOLVER_EXC_FREQ_DYN_ADJ */
 
 #endif /* RESOLVER_EXC_FREQ_DYN_ADJ */
diff --git a/src/fw_cu/Components/Inv/ValMeasAndProc/BswFpgaIf/include/BswFpgaIf.h b/src/fw_cu/Components/Inv/ValMeasAndProc/BswFpgaIf/include/BswFpgaIf.h
index 0bf8e009b..31024a45e 100644
--- a/src/fw_cu/Components/Inv/ValMeasAndProc/BswFpgaIf/include/BswFpgaIf.h
+++ b/src/fw_cu/Components/Inv/ValMeasAndProc/BswFpgaIf/include/BswFpgaIf.h
@@ -136,7 +136,7 @@ extern const uint16 BswFpgaIfPhaOcThdVal;
 extern const uint16 BswFpgaIfTxPwmDeadTimeExcVal;
 extern const uint16 BswFpgaIfTxPwmFreqExcVal;
 extern const uint16 BswFpgaIfTxCurAvgExcVal;
-
+extern const uint16 BswFpgaIfTxHvDcUSamplOffsVal;
 extern const boolean BswFpgaIfTxPwmExcOvrdEna;
 extern const uint16 BswFpgaIfTxPwmExcOvrdVal;
 extern const boolean BswFpgaIfTxPwmCtrlStgOnOffOvrdEna;
diff --git a/src/fw_cu/Components/Inv/ValMeasAndProc/BswFpgaIf/include/VsiSrv_e.h b/src/fw_cu/Components/Inv/ValMeasAndProc/BswFpgaIf/include/VsiSrv_e.h
index 566772e36..0944906b9 100644
--- a/src/fw_cu/Components/Inv/ValMeasAndProc/BswFpgaIf/include/VsiSrv_e.h
+++ b/src/fw_cu/Components/Inv/ValMeasAndProc/BswFpgaIf/include/VsiSrv_e.h
@@ -1909,8 +1909,8 @@ LOCAL_INLINE uint16 VSISRV_GetSignalDebug100To111(void)
 /* Get Ipdu RxS   */
 /*----------------*/
 /*----------------*/
-LOCAL_INLINE uint16 VSISRV_GetSignalHalfCoilCur_Ul(void);
-LOCAL_INLINE uint16 VSISRV_GetSignalHalfCoilCur_Ul(void)
+LOCAL_INLINE uint16 VSISRV_GetSignalHalfCoilCur_W50(void);
+LOCAL_INLINE uint16 VSISRV_GetSignalHalfCoilCur_W50(void)
 {
    uint16 localValue;
    /* VSISRV_SecAtomicStart(); */
@@ -1935,8 +1935,8 @@ LOCAL_INLINE uint16 VSISRV_GetSignalHalfCoilCur_Ur(void)
    return(localValue);
 }
 /*----------------*/
-LOCAL_INLINE uint16 VSISRV_GetSignalHalfCoilCur_Vl(void);
-LOCAL_INLINE uint16 VSISRV_GetSignalHalfCoilCur_Vl(void)
+LOCAL_INLINE uint16 VSISRV_GetSignalDClinkAvg2(void);
+LOCAL_INLINE uint16 VSISRV_GetSignalDClinkAvg2(void)
 {
    uint16 localValue;
    /* VSISRV_SecAtomicStart(); */
@@ -1961,8 +1961,8 @@ LOCAL_INLINE uint16 VSISRV_GetSignalHalfCoilCur_Vr(void)
    return(localValue);
 }
 /*----------------*/
-LOCAL_INLINE uint16 VSISRV_GetSignalHalfCoilCur_Wl(void);
-LOCAL_INLINE uint16 VSISRV_GetSignalHalfCoilCur_Wl(void)
+LOCAL_INLINE uint16 VSISRV_GetSignalDClinkAvg1(void);
+LOCAL_INLINE uint16 VSISRV_GetSignalDClinkAvg1(void)
 {
    uint16 localValue;
    /* VSISRV_SecAtomicStart(); */
@@ -2000,8 +2000,8 @@ LOCAL_INLINE uint16 VSISRV_GetSignalGridVoltU(void)
    return(localValue);
 }
 /*----------------*/
-LOCAL_INLINE uint16 VSISRV_GetSignalGridVoltV(void);
-LOCAL_INLINE uint16 VSISRV_GetSignalGridVoltV(void)
+LOCAL_INLINE uint16 VSISRV_GetSignalHalfCoilCur_U50(void);
+LOCAL_INLINE uint16 VSISRV_GetSignalHalfCoilCur_U50(void)
 {
    uint16 localValue;
    /* VSISRV_SecAtomicStart(); */
@@ -2013,8 +2013,8 @@ LOCAL_INLINE uint16 VSISRV_GetSignalGridVoltV(void)
    return(localValue);
 }
 /*----------------*/
-LOCAL_INLINE uint16 VSISRV_GetSignalGridVoltW(void);
-LOCAL_INLINE uint16 VSISRV_GetSignalGridVoltW(void)
+LOCAL_INLINE uint16 VSISRV_GetSignalHalfCoilCur_V50(void);
+LOCAL_INLINE uint16 VSISRV_GetSignalHalfCoilCur_V50(void)
 {
    uint16 localValue;
    /* VSISRV_SecAtomicStart(); */
diff --git a/src/fw_cu/Components/Inv/ValMeasAndProc/BswFpgaIf/src/BswFpgaIf.c b/src/fw_cu/Components/Inv/ValMeasAndProc/BswFpgaIf/src/BswFpgaIf.c
index 68d707bd7..d6b8fa7b2 100644
--- a/src/fw_cu/Components/Inv/ValMeasAndProc/BswFpgaIf/src/BswFpgaIf.c
+++ b/src/fw_cu/Components/Inv/ValMeasAndProc/BswFpgaIf/src/BswFpgaIf.c
@@ -423,11 +423,22 @@ const uint16 BswFpgaIfTxPwmSwtFreqOvrdVal = 2000u;
 @@ SYMBOL = BswFpgaIfTxCurSamplOffsVal
 @@ A2L_TYPE = PARAMETER
 @@ DATA_TYPE = UWORD
-@@ DESCRIPTION = "Pwm override Frequency value"
+@@ DESCRIPTION = "Phase current offset value"
 @@ GROUP = BswFpgaIf
 @@ END
 */
 const uint16 BswFpgaIfTxCurSamplOffsVal = 0u;
+
+/*
+@@ SYMBOL = BswFpgaIfTxHvDcUSamplOffsVal
+@@ A2L_TYPE = PARAMETER
+@@ DATA_TYPE = UWORD
+@@ DESCRIPTION = "DC voltage offset value"
+@@ GROUP = BswFpgaIf
+@@ END
+*/
+const uint16 BswFpgaIfTxHvDcUSamplOffsVal = 0u;
+
 /*
 @@ SYMBOL = BswFpgaIfTxActDisDurVal
 @@ A2L_TYPE = PARAMETER
@@ -1226,47 +1237,20 @@ void BswFpgaIf_Init(void)
 
 void BswFpgaIf_DrcvRxSignals (void)
 {
-   /*AC-Currents*/
-   if (BswFpgaIfPhaISelEna == 0U)
-   {
-      BswFpgaIf_IPhaRawVal_1[SYSDEF_PHA_U] = VSISRV_GetSignalHalfCoilCur_Ul();
-      BswFpgaIf_IPhaRawVal_1[SYSDEF_PHA_V] = VSISRV_GetSignalHalfCoilCur_Vl();
-      BswFpgaIf_IPhaRawVal_1[SYSDEF_PHA_W] = VSISRV_GetSignalHalfCoilCur_Wl();
-
-      BswFpgaIf_IPhaRawVal[SYSDEF_PHA_U] = BswFpgaIf_IPhaRawVal_1[SYSDEF_PHA_U];
-      BswFpgaIf_IPhaRawVal[SYSDEF_PHA_V] = BswFpgaIf_IPhaRawVal_1[SYSDEF_PHA_V];
-      BswFpgaIf_IPhaRawVal[SYSDEF_PHA_W] = BswFpgaIf_IPhaRawVal_1[SYSDEF_PHA_W];
-   }
-   else if (BswFpgaIfPhaISelEna == 1U)
-   {
-      BswFpgaIf_IPhaRawVal_2[SYSDEF_PHA_U] = VSISRV_GetSignalHalfCoilCur_Ur();
-      BswFpgaIf_IPhaRawVal_2[SYSDEF_PHA_V] = VSISRV_GetSignalHalfCoilCur_Vr();
-      BswFpgaIf_IPhaRawVal_2[SYSDEF_PHA_W] = VSISRV_GetSignalHalfCoilCur_Wr();
-
-      BswFpgaIf_IPhaRawVal[SYSDEF_PHA_U] = BswFpgaIf_IPhaRawVal_2[SYSDEF_PHA_U];
-      BswFpgaIf_IPhaRawVal[SYSDEF_PHA_V] = BswFpgaIf_IPhaRawVal_2[SYSDEF_PHA_V];
-      BswFpgaIf_IPhaRawVal[SYSDEF_PHA_W] = BswFpgaIf_IPhaRawVal_2[SYSDEF_PHA_W];
-   }
-   else if (BswFpgaIfPhaISelEna == 2U)
-   {
-      BswFpgaIf_IPhaRawVal_2[SYSDEF_PHA_U] = VSISRV_GetSignalHalfCoilCur_Ur();
-      BswFpgaIf_IPhaRawVal_2[SYSDEF_PHA_V] = VSISRV_GetSignalHalfCoilCur_Vr();
-      BswFpgaIf_IPhaRawVal_2[SYSDEF_PHA_W] = VSISRV_GetSignalHalfCoilCur_Wr();
-
-      BswFpgaIf_IPhaRawVal_1[SYSDEF_PHA_U] = VSISRV_GetSignalHalfCoilCur_Ul();
-      BswFpgaIf_IPhaRawVal_1[SYSDEF_PHA_V] = VSISRV_GetSignalHalfCoilCur_Vl();
-      BswFpgaIf_IPhaRawVal_1[SYSDEF_PHA_W] = VSISRV_GetSignalHalfCoilCur_Wl();
-
-      BswFpgaIf_IPhaRawVal[SYSDEF_PHA_U] = (BswFpgaIf_IPhaRawVal_2[SYSDEF_PHA_U] + BswFpgaIf_IPhaRawVal_1[SYSDEF_PHA_U]) >> 1u;
-      BswFpgaIf_IPhaRawVal[SYSDEF_PHA_V] = (BswFpgaIf_IPhaRawVal_2[SYSDEF_PHA_V] + BswFpgaIf_IPhaRawVal_1[SYSDEF_PHA_V]) >> 1u;
-      BswFpgaIf_IPhaRawVal[SYSDEF_PHA_W] = (BswFpgaIf_IPhaRawVal_2[SYSDEF_PHA_W] + BswFpgaIf_IPhaRawVal_1[SYSDEF_PHA_W]) >> 1u;
-   }
-   else
-   {
 
-   }
+  BswFpgaIf_IPhaRawVal_2[SYSDEF_PHA_U] = VSISRV_GetSignalHalfCoilCur_Ur();
+  BswFpgaIf_IPhaRawVal_2[SYSDEF_PHA_V] = VSISRV_GetSignalHalfCoilCur_Vr();
+  BswFpgaIf_IPhaRawVal_2[SYSDEF_PHA_W] = VSISRV_GetSignalHalfCoilCur_Wr();
+
+  BswFpgaIf_IPhaRawVal_1[SYSDEF_PHA_U] = VSISRV_GetSignalHalfCoilCur_U50();
+  BswFpgaIf_IPhaRawVal_1[SYSDEF_PHA_V] = VSISRV_GetSignalHalfCoilCur_V50();
+  BswFpgaIf_IPhaRawVal_1[SYSDEF_PHA_W] = VSISRV_GetSignalHalfCoilCur_W50();
+
+  BswFpgaIf_IPhaRawVal[SYSDEF_PHA_U] = (BswFpgaIf_IPhaRawVal_2[SYSDEF_PHA_U] + BswFpgaIf_IPhaRawVal_1[SYSDEF_PHA_U]) >> 1u;
+  BswFpgaIf_IPhaRawVal[SYSDEF_PHA_V] = (BswFpgaIf_IPhaRawVal_2[SYSDEF_PHA_V] + BswFpgaIf_IPhaRawVal_1[SYSDEF_PHA_V]) >> 1u;
+  BswFpgaIf_IPhaRawVal[SYSDEF_PHA_W] = (BswFpgaIf_IPhaRawVal_2[SYSDEF_PHA_W] + BswFpgaIf_IPhaRawVal_1[SYSDEF_PHA_W]) >> 1u;
     /*DC-Link-Voltage*/
-   BswFpgaIf_UdcRawVal = VSISRV_GetSignalDebug64To75();//DC Voltage
+  BswFpgaIf_UdcRawVal = (VSISRV_GetSignalDClinkAvg1() + VSISRV_GetSignalDClinkAvg2()) >> 1u;//DC Voltage
 
 }
 
@@ -1458,11 +1442,11 @@ void BswFpgaIf_TxRx1ms(void)
 /******************************************************************/
 static void BswFpgaIf_MeasDataCopy(void)
 {
-   BswFpgaIfRx_PwrSupply_5V_HS = VSISRV_GetSignalGridVoltU();
+   BswFpgaIfRx_PwrSupply_16V_Multi = VSISRV_GetSignalGridVoltU();
 
-    BswFpgaIfRx_PwrSupply_5V_LS = VSISRV_GetSignalGridVoltV();
+    BswFpgaIfRx_PwrSupply_5V_LS = VSISRV_GetSignalDebug64To75();
 
-   BswFpgaIfRx_PwrSupply_16V_Multi = VSISRV_GetSignalGridVoltW();
+    BswFpgaIfRx_PwrSupply_5V_HS = VSISRV_GetSignalDebug100To111();
 
    BswFpgaIfRx_FpgaVer_LSW =
    (uint16)(((uint16)VsisrvIpduRx.Data.RxA.Id.Mx2.Signal.M1VFpgaL_MSB8 << 4u)
diff --git a/src/fw_cu/Components/Inv/ValMeasAndProc/BswFpgaIf/src/VsiSrv.c b/src/fw_cu/Components/Inv/ValMeasAndProc/BswFpgaIf/src/VsiSrv.c
index b86b1a9bc..843fc643b 100644
--- a/src/fw_cu/Components/Inv/ValMeasAndProc/BswFpgaIf/src/VsiSrv.c
+++ b/src/fw_cu/Components/Inv/ValMeasAndProc/BswFpgaIf/src/VsiSrv.c
@@ -357,7 +357,7 @@ void VSISRV_vidSetFrameTx(void)
       case 0x02:
          VsisrvIpduTx.Data.TxA.Id.Mx2.Signal.Id  = txMuxId;
          VSISRV_SetSignalM4Id2Spare(BswFpgaIfTxCurSamplOffsVal);
-
+         VSISRV_SetSignalM5Id2Spare(BswFpgaIfTxHvDcUSamplOffsVal);
          VSISRV_CopyIpduTxAToFrameTxAId2();
          break;
 
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eFpga/include/SftyE2eFpga_Type.h b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eFpga/include/SftyE2eFpga_Type.h
index 932b87ea1..4d5e74046 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eFpga/include/SftyE2eFpga_Type.h
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eFpga/include/SftyE2eFpga_Type.h
@@ -340,106 +340,106 @@ typedef union SftyDmaE2eFpgaFrameRxType_
 typedef struct SftyE2eFpgalRxSSigType_
 {
    /*
-    @@ ELEMENT = PwrSpl16VM_MSB8
+    @@ ELEMENT = CurV50_MSB8
     @@ STRUCTURE = SftyE2eFpgalRxSSigType
     @@ A2L_TYPE = MEASURE
     @@ DATA_TYPE = UBYTE
-    @@ DESCRIPTION = "PwrSpl16VM_MSB8"
+    @@ DESCRIPTION = "CurV50_MSB8"
     @@ GROUP = SftyE2eFpga
     @@ END
     */
-   uint32 PwrSpl16VM_MSB8:8;
+   uint32 CurV50_MSB8:8; // PwrSpl16VM_MSB8
 
    /*
-    @@ ELEMENT = PwrSup5VLs_LSB8
+    @@ ELEMENT = CurU50_LSB8
     @@ STRUCTURE = SftyE2eFpgalRxSSigType
     @@ A2L_TYPE = MEASURE
     @@ DATA_TYPE = UBYTE
-    @@ DESCRIPTION = "PwrSup5VLs_LSB8"
+    @@ DESCRIPTION = "CurU50_LSB8"
     @@ GROUP = SftyE2eFpga
     @@ END
     */
-    uint32 PwrSup5VLs_LSB8:8;
+    uint32 CurU50_LSB8:8; // PwrSup5VLs_LSB8
 
     /*
-     @@ ELEMENT = PwrSup5VLs_MSB4
+     @@ ELEMENT = CurU50_MSB4
      @@ STRUCTURE = SftyE2eFpgalRxSSigType
      @@ A2L_TYPE = MEASURE
      @@ DATA_TYPE = UBYTE
-     @@ DESCRIPTION = "PwrSup5VLs_MSB4"
+     @@ DESCRIPTION = "CurU50_MSB4"
      @@ GROUP = SftyE2eFpga
      @@ END
      */
-    uint32 PwrSup5VLs_MSB4:4;
+    uint32 CurU50_MSB4:4; // PwrSup5VLs_MSB4
 
     /*
-     @@ ELEMENT = PwrSup5VHs_LSB4
+     @@ ELEMENT = PwrSpl16VM_LSB4
      @@ STRUCTURE = SftyE2eFpgalRxSSigType
      @@ A2L_TYPE = MEASURE
      @@ DATA_TYPE = UBYTE
-     @@ DESCRIPTION = "PwrSup5VHs_LSB4"
+     @@ DESCRIPTION = "PwrSpl16VM_LSB4"
      @@ GROUP = SftyE2eFpga
      @@ END
      */
-    uint32 PwrSup5VHs_LSB4:4;
+    uint32 PwrSpl16VM_LSB4:4; // PwrSup5VHs_LSB4
 
     /*
-    @@ ELEMENT = PwrSup5VHs_MSB8
+    @@ ELEMENT = PwrSpl16VM_MSB8
     @@ STRUCTURE = SftyE2eFpgalRxSSigType
     @@ A2L_TYPE = MEASURE
     @@ DATA_TYPE = UBYTE
-    @@ DESCRIPTION = "PwrSup5VHs_MSB8"
+    @@ DESCRIPTION = "PwrSpl16VM_MSB8"
     @@ GROUP = SftyE2eFpga
     @@ END
     */
-    uint32 PwrSup5VHs_MSB8:8;
+    uint32 PwrSpl16VM_MSB8:8; //PwrSup5VHs_MSB8
 
     /*
-    @@ ELEMENT = CurW50_MSB4
+    @@ ELEMENT = DcLink100_MSB4
     @@ STRUCTURE = SftyE2eFpgalRxSSigType
     @@ A2L_TYPE = MEASURE
     @@ DATA_TYPE = UBYTE
-    @@ DESCRIPTION = "CurW50_MSB4"
+    @@ DESCRIPTION = "DcLink100_MSB4"
     @@ GROUP = SftyE2eFpga
     @@ END
     */
-    uint32 CurW50_MSB4:4;
+    uint32 DcLink100_MSB4:4;
 
     /*
-    @@ ELEMENT = CurV50_LSB4
+    @@ ELEMENT = DcLink50_LSB4
     @@ STRUCTURE = SftyE2eFpgalRxSSigType
     @@ A2L_TYPE = MEASURE
     @@ DATA_TYPE = UBYTE
-    @@ DESCRIPTION = "CurV50_LSB4"
+    @@ DESCRIPTION = "DcLink50_LSB4"
     @@ GROUP = SftyE2eFpga
     @@ END
     */
-    uint32 CurV50_LSB4:4;
+    uint32 DcLink50_LSB4:4;
 
     /*
-    @@ ELEMENT = CurV50_MSB8
+    @@ ELEMENT = DcLink50_MSB8
     @@ STRUCTURE = SftyE2eFpgalRxSSigType
     @@ A2L_TYPE = MEASURE
     @@ DATA_TYPE = UBYTE
-    @@ DESCRIPTION = "CurV50_MSB8"
+    @@ DESCRIPTION = "DcLink50_MSB8"
     @@ GROUP = SftyE2eFpga
     @@ END
     */
-    uint32 CurV50_MSB8:8;
+    uint32 DcLink50_MSB8:8;
 
     /*
-    @@ ELEMENT = CurU50_LSB8
+    @@ ELEMENT = CurW50_LSB8
     @@ STRUCTURE = SftyE2eFpgalRxSSigType
     @@ A2L_TYPE = MEASURE
     @@ DATA_TYPE = UBYTE
-    @@ DESCRIPTION = "CurU50_LSB8"
+    @@ DESCRIPTION = "CurW50_LSB8"
     @@ GROUP = SftyE2eFpga
     @@ END
     */
-    uint32 CurU50_LSB8:8;
+    uint32 CurW50_LSB8:8;  // CurU50_LSB8
 
     /*
-    @@ ELEMENT = CurU50_MSB4
+    @@ ELEMENT = CurW50_MSB4
     @@ STRUCTURE = SftyE2eFpgalRxSSigType
     @@ A2L_TYPE = MEASURE
     @@ DATA_TYPE = UBYTE
@@ -447,18 +447,18 @@ typedef struct SftyE2eFpgalRxSSigType_
     @@ GROUP = SftyE2eFpga
     @@ END
     */
-    uint32 CurU50_MSB4:4;
+    uint32 CurW50_MSB4:4; // CurU50_MSB4
 
     /*
-    @@ ELEMENT = PwrSpl16VM_LSB4
+    @@ ELEMENT = CurV50_LSB4
     @@ STRUCTURE = SftyE2eFpgalRxSSigType
     @@ A2L_TYPE = MEASURE
     @@ DATA_TYPE = UBYTE
-    @@ DESCRIPTION = "PwrSpl16VM_LSB4"
+    @@ DESCRIPTION = "CurV50_LSB4"
     @@ GROUP = SftyE2eFpga
     @@ END
     */
-    uint32 PwrSpl16VM_LSB4:4;
+    uint32 CurV50_LSB4:4;  //PwrSpl16VM_LSB4
 
     /*
     @@ ELEMENT = CurV_LSB8
@@ -505,15 +505,15 @@ typedef struct SftyE2eFpgalRxSSigType_
     uint32 CurU_MSB8:8;
 
     /*
-    @@ ELEMENT = CurW50_LSB8
+    @@ ELEMENT = DcLink100_LSB8
     @@ STRUCTURE = SftyE2eFpgalRxSSigType
     @@ A2L_TYPE = MEASURE
     @@ DATA_TYPE = UBYTE
-    @@ DESCRIPTION = "CurW50_LSB8"
+    @@ DESCRIPTION = "DcLink100_LSB8"
     @@ GROUP = SftyE2eFpga
     @@ END
     */
-    uint32 CurW50_LSB8:8;
+    uint32 DcLink100_LSB8:8;
 
     /*
     @@ ELEMENT = Crc
diff --git a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eFpga/src/SftyE2eFpga.c b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eFpga/src/SftyE2eFpga.c
index a99d0b1e5..6699323cd 100644
--- a/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eFpga/src/SftyE2eFpga.c
+++ b/src/fw_cu/Components/Safety/Sfty_Cmn/SftyE2eFpga/src/SftyE2eFpga.c
@@ -1816,8 +1816,19 @@ LOCAL_INLINE void SftyE2eFpga_ExtrMx0Data(void)
 /******************************************************************/
 LOCAL_INLINE void SftyE2eFpga_ExtractCtrlBrdVal(void)
 {
-   SftyE2eFpgaCtrlBrdRawVal = (((uint16)(SftyE2eFpgaIpduRx.Data.RxA.Id.Mx1.Sig.DcLinkDrvBd_LSB4)) |
-                                (uint16)(((uint16)SftyE2eFpgaIpduRx.Data.RxA.Id.Mx1.Sig.DcLinkDrvBd_MSB8) << 4U));
+   sint16 hvDcU50;
+   sint16 hvDcU100;
+
+   hvDcU50 =  0;
+   hvDcU100 = 0;
+
+   hvDcU50 = MLIB_S16U32( (uint32)((uint16)((uint16)SftyE2eFpgaIpduRx.Data.RxS.Sig.DcLink50_LSB4 |
+            (uint16)(((uint16)SftyE2eFpgaIpduRx.Data.RxS.Sig.DcLink50_MSB8) << 4U))));
+
+   hvDcU100 = MLIB_S16U32( (uint32)((uint16)((uint16)SftyE2eFpgaIpduRx.Data.RxS.Sig.DcLink100_LSB8 |
+            (uint16)(((uint16)SftyE2eFpgaIpduRx.Data.RxS.Sig.DcLink100_MSB4) << 8U))));
+
+   SftyE2eFpgaCtrlBrdRawVal = (hvDcU50 + hvDcU100) >> 1;
    return;
 }
 
@@ -1832,8 +1843,8 @@ LOCAL_INLINE void SftyE2eFpga_ExtractCtrlBrdVal(void)
 /******************************************************************/
 LOCAL_INLINE void SftyE2eFpga_ExtractDrvBrdVal(void)
 {
-   SftyE2eFpgaDrvBrdRawVal = (((uint16)SftyE2eFpgaIpduRx.Data.RxA.Id.Mx1.Sig.DcLinkDrvBd_LSB4) |
-                               (uint16)(((uint16)SftyE2eFpgaIpduRx.Data.RxA.Id.Mx1.Sig.DcLinkDrvBd_MSB8) << 4U));
+   SftyE2eFpgaDrvBrdRawVal = SftyE2eFpgaCtrlBrdRawVal;
+
    return;
 }
 
@@ -1951,8 +1962,19 @@ LOCAL_INLINE void SftyE2eFpga_ExtractARxDataFromIpdu(uint8 alvCntr)
 /******************************************************************/
 LOCAL_INLINE void SftyE2eFpga_ExtractIPhaUVal(void)
 {
-   SftyE2eFpgaIPhaRawVal[SYSDEF_PHA_SET_A][SYSDEF_PHA_U] = MLIB_S16U32( (uint32)((uint16)((uint16)SftyE2eFpgaIpduRx.Data.RxS.Sig.CurU_LSB4 |
-                                                                        (uint16)(((uint16)SftyE2eFpgaIpduRx.Data.RxS.Sig.CurU_MSB8) << 4U))));
+   sint16 PhaI50;
+   sint16 PhaI100;
+
+   PhaI50 =  0;
+   PhaI100 = 0;
+
+   PhaI100 = MLIB_S16U32( (uint32)((uint16)((uint16)SftyE2eFpgaIpduRx.Data.RxS.Sig.CurU_LSB4 |
+            (uint16)(((uint16)SftyE2eFpgaIpduRx.Data.RxS.Sig.CurU_MSB8) << 4U))));
+
+   PhaI50 = MLIB_S16U32( (uint32)((uint16)((uint16)SftyE2eFpgaIpduRx.Data.RxS.Sig.CurU50_LSB8 |
+            (uint16)(((uint16)SftyE2eFpgaIpduRx.Data.RxS.Sig.CurU50_MSB4) << 8U))));
+
+   SftyE2eFpgaIPhaRawVal[SYSDEF_PHA_SET_A][SYSDEF_PHA_U] = (PhaI50 + PhaI100) >> 1;
 
 
    return;
@@ -1969,8 +1991,19 @@ LOCAL_INLINE void SftyE2eFpga_ExtractIPhaUVal(void)
 /******************************************************************/
 LOCAL_INLINE void SftyE2eFpga_ExtractIPhaVVal(void)
 {
-   SftyE2eFpgaIPhaRawVal[SYSDEF_PHA_SET_A][SYSDEF_PHA_V] = MLIB_S16U32( (uint32)((uint16)((uint16)SftyE2eFpgaIpduRx.Data.RxS.Sig.CurV_LSB8 |
-                                                                        (uint16)(((uint16)SftyE2eFpgaIpduRx.Data.RxS.Sig.CurV_MSB4) << 8U))));
+   sint16 PhaI50;
+   sint16 PhaI100;
+
+   PhaI50 =  0;
+   PhaI100 = 0;
+
+   PhaI100 = MLIB_S16U32( (uint32)((uint16)((uint16)SftyE2eFpgaIpduRx.Data.RxS.Sig.CurV_LSB8 |
+            (uint16)(((uint16)SftyE2eFpgaIpduRx.Data.RxS.Sig.CurV_MSB4) << 8U))));
+
+   PhaI50 = MLIB_S16U32( (uint32)((uint16)((uint16)SftyE2eFpgaIpduRx.Data.RxS.Sig.CurV50_LSB4 |
+            (uint16)(((uint16)SftyE2eFpgaIpduRx.Data.RxS.Sig.CurV50_MSB8) << 4U))));
+
+   SftyE2eFpgaIPhaRawVal[SYSDEF_PHA_SET_A][SYSDEF_PHA_V] = (PhaI50 + PhaI100) >> 1;
 
    return;
 }
@@ -1986,8 +2019,19 @@ LOCAL_INLINE void SftyE2eFpga_ExtractIPhaVVal(void)
 /******************************************************************/
 LOCAL_INLINE void SftyE2eFpga_ExtractIPhaWVal(void)
 {
-   SftyE2eFpgaIPhaRawVal[SYSDEF_PHA_SET_A][SYSDEF_PHA_W] = MLIB_S16U32( (uint32)((uint16)((uint16)SftyE2eFpgaIpduRx.Data.RxS.Sig.CurW_LSB4 |
-                                                                        (uint16)(((uint16)SftyE2eFpgaIpduRx.Data.RxS.Sig.CurW_MSB8) << 4U))));
+   sint16 PhaI50;
+   sint16 PhaI100;
+
+   PhaI50 =  0;
+   PhaI100 = 0;
+
+   PhaI100 = MLIB_S16U32( (uint32)((uint16)((uint16)SftyE2eFpgaIpduRx.Data.RxS.Sig.CurW_LSB4 |
+            (uint16)(((uint16)SftyE2eFpgaIpduRx.Data.RxS.Sig.CurW_MSB8) << 4U))));
+
+   PhaI50 = MLIB_S16U32( (uint32)((uint16)((uint16)SftyE2eFpgaIpduRx.Data.RxS.Sig.CurW50_LSB8 |
+            (uint16)(((uint16)SftyE2eFpgaIpduRx.Data.RxS.Sig.CurW50_MSB4) << 8U))));
+
+   SftyE2eFpgaIPhaRawVal[SYSDEF_PHA_SET_A][SYSDEF_PHA_W] = (PhaI50 + PhaI100) >> 1;
    return;
 }
 /******************************************************************/
@@ -2035,8 +2079,8 @@ LOCAL_INLINE void SftyE2eFpga_ExtractPS16MultVal(void)
 /******************************************************************/
 LOCAL_INLINE void SftyE2eFpga_ExtractP5LSVal(void)
 {
-   SftyE2eFpgaP5LSRawVal = MLIB_U16U32( (uint32)((uint16)((uint16)SftyE2eFpgaIpduRx.Data.RxS.Sig.PwrSup5VLs_LSB8 |
-                                                 (uint16)(((uint16)SftyE2eFpgaIpduRx.Data.RxS.Sig.PwrSup5VLs_MSB4) << 8U))));
+   /*SftyE2eFpgaP5LSRawVal = MLIB_U16U32( (uint32)((uint16)((uint16)SftyE2eFpgaIpduRx.Data.RxS.Sig.PwrSup5VLs_LSB8 |
+                                                 (uint16)(((uint16)SftyE2eFpgaIpduRx.Data.RxS.Sig.PwrSup5VLs_MSB4) << 8U)))); */
 
    return;
 }
@@ -2052,8 +2096,8 @@ LOCAL_INLINE void SftyE2eFpga_ExtractP5LSVal(void)
 /******************************************************************/
 LOCAL_INLINE void SftyE2eFpga_ExtractP5HSVal(void)
 {
-   SftyE2eFpgaP5HSRawVal = MLIB_U16U32( (uint32)((uint16)((uint16)SftyE2eFpgaIpduRx.Data.RxS.Sig.PwrSup5VHs_LSB4 |
-                                                 (uint16)(((uint16)SftyE2eFpgaIpduRx.Data.RxS.Sig.PwrSup5VHs_MSB8) << 4U))));
+   /* SftyE2eFpgaP5HSRawVal = MLIB_U16U32( (uint32)((uint16)((uint16)SftyE2eFpgaIpduRx.Data.RxS.Sig.PwrSup5VHs_LSB4 |
+                                                 (uint16)(((uint16)SftyE2eFpgaIpduRx.Data.RxS.Sig.PwrSup5VHs_MSB8) << 4U))));*/
 
    return;
 }
diff --git a/src/fw_cu/build/a2l/Measurements-to-Timeslices-Mapping.csv b/src/fw_cu/build/a2l/Measurements-to-Timeslices-Mapping.csv
index a400a28c0..ba4854e51 100644
--- a/src/fw_cu/build/a2l/Measurements-to-Timeslices-Mapping.csv
+++ b/src/fw_cu/build/a2l/Measurements-to-Timeslices-Mapping.csv
@@ -3808,6 +3808,8 @@ LlswGtm_stTimInit,Core_2,C2_1ms,1,,,DRCO
 LlswGtm_stTomInit,Core_2,C2_1ms,1,,,DRCO
 LlswGtm_TimGpr0Val,Core_0,C0_1ms_TimeTask,10,,,LLSW
 LlswGtm_TimGpr1Val,Core_0,C0_1ms_TimeTask,10,,,LLSW
+LlswGtmPwmSpMgrFreq,Core_2,C2_100u_PWM,0.1,,,DRCO
+LlswGtmPwmSpMgrFreqPrev,Core_2,C2_100u_PWM,0.1,,,DRCO
 NMHWakeReason,Core_0,C0_1ms_TimeTask,1,,,BSW
 NmUserData.ActiveReason_0,Core_0,C0_1ms_TimeTask,1,,,BSW
 NmUserData.ActiveReason_1,Core_0,C0_1ms_TimeTask,1,,,BSW
@@ -6549,16 +6551,16 @@ SftyE2eFpgaIpduRx.Data.RxS.Sig.CurW_LSB4,Core_1,Core_1_200us,0.2,,,SSW
 SftyE2eFpgaIpduRx.Data.RxS.Sig.CurW_MSB8,Core_1,Core_1_200us,0.2,,,SSW
 SftyE2eFpgaIpduRx.Data.RxS.Sig.CurW50_LSB8,Core_1,Core_1_200us,0.2,,,SSW
 SftyE2eFpgaIpduRx.Data.RxS.Sig.CurW50_MSB4,Core_1,Core_1_200us,0.2,,,SSW
+SftyE2eFpgaIpduRx.Data.RxS.Sig.DcLink100_LSB8,Core_1,Core_1_200us,0.2,,,SSW
+SftyE2eFpgaIpduRx.Data.RxS.Sig.DcLink100_MSB4,Core_1,Core_1_200us,0.2,,,SSW
+SftyE2eFpgaIpduRx.Data.RxS.Sig.DcLink50_LSB4,Core_1,Core_1_200us,0.2,,,SSW
+SftyE2eFpgaIpduRx.Data.RxS.Sig.DcLink50_MSB8,Core_1,Core_1_200us,0.2,,,SSW
 SftyE2eFpgaIpduRx.Data.RxS.Sig.FDSts_SOE,Core_1,Core_1_200us,0.2,,,SSW
 SftyE2eFpgaIpduRx.Data.RxS.Sig.FDSts_SOL,Core_1,Core_1_200us,0.2,,,SSW
 SftyE2eFpgaIpduRx.Data.RxS.Sig.FDSts_TxA,Core_1,Core_1_200us,0.2,,,SSW
 SftyE2eFpgaIpduRx.Data.RxS.Sig.FDSts_TxS,Core_1,Core_1_200us,0.2,,,SSW
 SftyE2eFpgaIpduRx.Data.RxS.Sig.PwrSpl16VM_LSB4,Core_1,Core_1_200us,0.2,,,SSW
 SftyE2eFpgaIpduRx.Data.RxS.Sig.PwrSpl16VM_MSB8,Core_1,Core_1_200us,0.2,,,SSW
-SftyE2eFpgaIpduRx.Data.RxS.Sig.PwrSup5VHs_LSB4,Core_1,Core_1_200us,0.2,,,SSW
-SftyE2eFpgaIpduRx.Data.RxS.Sig.PwrSup5VHs_MSB8,Core_1,Core_1_200us,0.2,,,SSW
-SftyE2eFpgaIpduRx.Data.RxS.Sig.PwrSup5VLs_LSB8,Core_1,Core_1_200us,0.2,,,SSW
-SftyE2eFpgaIpduRx.Data.RxS.Sig.PwrSup5VLs_MSB4,Core_1,Core_1_200us,0.2,,,SSW
 SftyE2eFpgaIpduRx.Data16,Core_1,Core_1_200us,0.2,,,SSW
 SftyE2eFpgaIpduRx.Data32,Core_1,Core_1_200us,0.2,,,SSW
 SftyE2eFpgaIpduRx.Data8,Core_1,Core_1_200us,0.2,,,SSW
'
