b'commit 32448c3b5e28bcee53ae189b5a81395e392a5ef2
Author: David VARGA <david.varga.jv.ext@valeo.com>
Date:   Mon Jan 10 10:29:33 2022 +0100

    $100kW-50490$ - TqMgr code review finding fix for 100kW : B02 Branch
    
    Change-Id: I5cbe0dff0ff5080821b4642134c2312b034e81bb

diff --git a/src/fw_cu/Components/Inv/LimAndDrt/TqMgr/src/TqMgr.c b/src/fw_cu/Components/Inv/LimAndDrt/TqMgr/src/TqMgr.c
index 3521e16d8..ed424a8d9 100644
--- a/src/fw_cu/Components/Inv/LimAndDrt/TqMgr/src/TqMgr.c
+++ b/src/fw_cu/Components/Inv/LimAndDrt/TqMgr/src/TqMgr.c
@@ -265,6 +265,7 @@ FUNC(void, TQMGR_CORE2_CODE) TqMgr_Run(void)
    }
    else
    {
+\t  /*Interpolation disabled, use the torque request directly*/
       TqMgrTqReqCanPrev          = TqMgrTqReqCanAct;
       TqMgrTqReqCanIntrpn        = TqMgrTqReqCanAct;
       TqMgrTqReqCanIntrpnDelta   = 0.F;
@@ -340,15 +341,18 @@ FUNC(void, TQMGR_CORE2_CODE) TqMgr_Run(void)
    TqMgrDrtgLimTqMin = BswC2cData.TqMgrTqDrtgMin;
    TqMgrDrtgLimTqMax = BswC2cData.TqMgrTqDrtgMax;
 
+   /*Get the I2TDC limits from HvDcILimn*/
    HvDcILimnTqLimGenIntLoc = BswC2cData.HvDcILimnTqLimGenInt;
    HvDcILimnTqLimMotIntLoc = BswC2cData.HvDcILimnTqLimMotInt;
 
+   /*Switch from Mot/Gen to Min/Max (alpha blending)*/
    HvDcILimnTqLimMinIntLoc = TqMgr_CalcTqMin(HvDcILimnTqLimMotIntLoc, HvDcILimnTqLimGenIntLoc, BswC2cData.TqMgrTqMinAlpha);
    HvDcILimnTqLimMaxIntLoc = TqMgr_CalcTqMax(HvDcILimnTqLimMotIntLoc, HvDcILimnTqLimGenIntLoc, BswC2cData.TqMgrTqMaxAlpha);
 
    /* HvDcULimn */
    if(TRUE == TqMgrHvDcULimnEna)
    {
+\t  /*Switch from Mot/Gen to Min/Max (alpha blending)*/
       TqMinLoc = TqMgr_CalcTqMin(HvDcULimnTqLimMot, HvDcULimnTqLimGen, BswC2cData.TqMgrTqMinAlpha);
       TqMaxLoc = TqMgr_CalcTqMax(HvDcULimnTqLimMot, HvDcULimnTqLimGen, BswC2cData.TqMgrTqMaxAlpha);
       if(0U == TqMgrHvDcULimnHndlAsDrtg)
@@ -423,7 +427,8 @@ FUNC(void, TQMGR_CORE2_CODE) TqMgr_Run(void)
    TqMgrTqLimMaxPrfmncIndcrDenom = TqMaxIndcrLoc;
 
    /***************************************************************************/
-
+   
+   /*Include the I2TDC derating in derating limits*/
    TqMgrDrtgLimTqMin = TqMgr_Max(TqMgrDrtgLimTqMin, HvDcILimnTqLimMinIntLoc);
    TqMgrDrtgLimTqMax = TqMgr_Min(TqMgrDrtgLimTqMax, HvDcILimnTqLimMaxIntLoc);
 
@@ -464,7 +469,7 @@ FUNC(void, TQMGR_CORE2_CODE) TqMgr_Run(void)
 
    if(FALSE == ActvModEna)
    {
-      /* TODO: Workaround for VWMEB-Inv-215706; rework later */
+      /* Workaround for VWMEB-Inv-215706*/
       /* Switch to passive mode; keep the current torque setpoint
        * to prevent messing up Soft ASC/SPO until the Seqr explicitly
        * requests 0 Nm setpoint. */
@@ -524,6 +529,7 @@ FUNC(void, TQMGR_CORE2_CODE) TqMgr_Run(void)
          /*Do nothing*/
       }
 
+      /*Increment the ramped torque request with the gradient-delta*/
       TqMgrTqReqRamp = TqMgrTqSp + TqSetptDelta;
 
       /* Limit ramped torque setpoint to total limits*/
@@ -534,7 +540,6 @@ FUNC(void, TQMGR_CORE2_CODE) TqMgr_Run(void)
    TqMgrTqReqMuxSel = (uint8)TqSpSelLoc;
 
    /* Communicate to Core 0 : total torque limits */
-   /* TODO: CZ: Filtering for 1ms? */
    DrvCtrlC2cData.TqMgrTotTqLimMin = TqMgrTotLimTqMin;
    DrvCtrlC2cData.TqMgrTotTqLimMax = TqMgrTotLimTqMax;
 
@@ -604,6 +609,7 @@ FUNC(void, TQMGR_CORE0_CODE) TqMgr_Main(void) /*PRQA S 1503*/
    UDcActLoc       = DrvCtrlC2cData.UDcActFild1;
    IDcActLoc       = DrvCtrlC2cData.IDcAct;
 #endif
+   /*Get the limits from core2*/
    TqLimTotMinLoc  = DrvCtrlC2cData.TqMgrTotTqLimMin;
    TqLimTotMaxLoc  = DrvCtrlC2cData.TqMgrTotTqLimMax;
    TqLimDrtgMinLoc = DrvCtrlC2cData.TqMgrDrtgTqLimMin;
@@ -673,6 +679,7 @@ FUNC(void, TQMGR_CORE0_CODE) TqMgr_Main(void) /*PRQA S 1503*/
    PwrMotLoc = TqMgr_Min(PwrMotLoc, SysPrmHvDcPwrMax - InvEmLosses);
    PwrGenLoc = TqMgr_Max(PwrGenLoc, SysPrmHvDcPwrMin - InvEmLosses);
 
+   /*Calculate the torque limits from the internal power limits and saturate to avoid fluctuation */
    TqMgrPwrLimnIntTqMot = TqMgr_Min(PwrMotLoc*SpdActAbsInv, TqMgrTqMaxSatn);
    TqMgrPwrLimnIntTqGen = TqMgr_Max(PwrGenLoc*SpdActAbsInv, TqMgrTqMinSatn);
 
@@ -764,6 +771,7 @@ FUNC(void, TQMGR_CORE0_CODE) TqMgr_Main(void) /*PRQA S 1503*/
    TqMgrCore0LimTqMin = TqMinLoc;
    TqMgrCore0LimTqMax = TqMaxLoc;
 
+   /*Send the derating limits to core2*/
    BswC2cData.TqMgrTqDrtgMin = TqMinDrtgLoc;
    BswC2cData.TqMgrTqDrtgMax = TqMaxDrtgLoc;
 
@@ -838,16 +846,18 @@ FUNC(void, TQMGR_CORE0_CODE) TqMgr_Main(void) /*PRQA S 1503*/
    /***************************
     * Outputs
     ***************************/
-   /* TODO: Replace with speed request from CAN! */
+   /* For projects where speed control is used, replace with speed request from CAN. */
    BswC2cData.SpdReq = 0.F;
 
    /* Provide the (partial) torque limits to Core 2 */
    BswC2cData.TqMgrTqLimMin        = TqMgrCore0LimTqMin;
    BswC2cData.TqMgrTqLimMax        = TqMgrCore0LimTqMax;
 
+   /* Provide the blending factors to Core 2 */
    BswC2cData.TqMgrTqMinAlpha      = AlphaTqMin;
    BswC2cData.TqMgrTqMaxAlpha      = AlphaTqMax;
 
+   /* Provide the extended torque limitation status to Core 2 */
    BswC2cData.ExtdTqLimReq         = ExtdTqLimActvSts;
 
    /* Min torque limit */
'
