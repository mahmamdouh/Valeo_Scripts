b'commit e7abb133f1132cd3f24335f6bb777d9e9e484d5d
Author: Adi GODAVARTHI (JV) <adi.godavarthi.jv@valeo.com>
Date:   Mon Oct 18 14:42:47 2021 +0200

    $100kW-42931$ - Pwm3Pha module to be removed from the project
    
    Change-Id: I6048e46fede310d6035a4821d9bdf3ad74178ca5

diff --git a/src/fw_cu/Components/Cmn/Com/C2cCom/src/C2cComDrvCtrl.c b/src/fw_cu/Components/Cmn/Com/C2cCom/src/C2cComDrvCtrl.c
index dc863c792..b0b98882a 100644
--- a/src/fw_cu/Components/Cmn/Com/C2cCom/src/C2cComDrvCtrl.c
+++ b/src/fw_cu/Components/Cmn/Com/C2cCom/src/C2cComDrvCtrl.c
@@ -44,7 +44,6 @@
 #include "C2cComDrvCtrlData.h"
 #include "C2cComCmnData.h"
 
-#include "Pwm3Pha_data.h"
 #include "HvAcICalcn_data.h"
 #include "HvDcICalcn_WrprData.h"
 #include "HvDcUMeas_WrprData.h"
diff --git a/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/a2l/.gitkeep b/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/a2l/.gitkeep
deleted file mode 100644
index e69de29bb..000000000
diff --git a/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/doc/.gitkeep b/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/doc/.gitkeep
deleted file mode 100644
index e69de29bb..000000000
diff --git a/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/include/Pwm3Pha.h b/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/include/Pwm3Pha.h
deleted file mode 100644
index a2bb00218..000000000
--- a/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/include/Pwm3Pha.h
+++ /dev/null
@@ -1,66 +0,0 @@
-/* ********************************************************************** */
-/* Sourcefile:      Pwm3Pha.h                                             */
-/*                                                                        */
-/* Project:         eCar project                                          */
-/*                  TriCore Aurix                                         */
-/*                                                                        */
-/* Department:      Valeo-Siemens eAutomotive GmbH                        */
-/*                  VSeA R&D INV ASW DRCO                                 */
-/*                                                                        */
-/* First author:    Frank Jucht                                           */
-/* Other authors:   -                                                     */
-/* ********************************************************************** */
-/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2021                      */
-/* All Rights Reserved. Confidential                                      */
-/* ********************************************************************** */
-
-#ifndef PWM3PHA_H_
-#define PWM3PHA_H_
-
-/*!
- * \\addtogroup Pwm3Pha
- * @{
- */
-
-/*================== [includes] =============================================*/
-#include "Compiler.h"
-
-/*================== [macros] ===============================================*/
-#ifdef PWM3PHA_
-# define EXTERNAL_
-#else
-# define EXTERNAL_ extern
-#endif
-
-/*================== [type definitions] =====================================*/
-
-/*================== [declaration of public data] ===========================*/
-
-/*================== [declaration of global functions] ======================*/
-#if 0  /* 100kw */
-#define PWM3PHA_START_SEC_CODE_SLOW
-#include "MemMap.h"
-
-EXTERNAL_ FUNC(void, PWM3PHA_CODE) Pwm3Pha_Init(void);
-#define PWM3PHA_STOP_SEC_CODE_SLOW
-#include "MemMap.h"
-
-#define PWM3PHA_START_SEC_CODE_FAST
-#include "MemMap.h"
-
-EXTERNAL_ FUNC(void, PWM3PHA_CODE) Pwm3Pha_RunA(void);
-#define PWM3PHA_STOP_SEC_CODE_FAST
-#include "MemMap.h"
-#endif
-
-
-/*================== [closure] ==============================================*/
-/*! \\misra Warning No C2004:19.6 "Undefine EXTERNAL_ according to Coding Guideline." */
-#undef EXTERNAL_ /* PRQA S 0841 */
-/*! @} doxygen end of group definition                                       */
-#endif /* PWM3PHA_H_ */
-/* ************************************************************************* */
-/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2021                         */
-/* All Rights Reserved. Confidential                                         */
-/* ************************************************************************* */
-/*==================[end of file]============================================*/
diff --git a/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/include/Pwm3Pha_data.h b/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/include/Pwm3Pha_data.h
deleted file mode 100644
index 16c45d6ca..000000000
--- a/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/include/Pwm3Pha_data.h
+++ /dev/null
@@ -1,203 +0,0 @@
-/* ***************************************************************** */
-/* Sourcefile: Pwm3Pha_data.h                                  */
-/* ADD Container: Pwm3Pha                                      */
-/* ADD Container Version: 1.6.0                                      */
-/* ***************************************************************** */
-/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2021                 */
-/* All Rights Reserved. Confidential                                 */
-/* ***************************************************************** */
-/*!
- * \\addtogroup    Pwm3Pha_data
- * @{
-*/
-#ifndef\tPWM3PHA_DATA_H
-#define\tPWM3PHA_DATA_H
-
-
-#include "AddGlobalDefines.h"
-#include "Platform_Types.h"
-#include "Compiler.h"
-
-
-
-#include\t"AddGlobalDefines.h"
-
-#ifndef SW_INTERFACE
-
-
-
-
-
-
-/* PRQA S 3451 SUP_3451 #external declared global data are autogenerated interfaces which are managed by data dictionary */
-
-
-
-   /* Begin: DRVCTRLSDL_START_SEC_VAR_CLEARED_8 (online) */
-#define DRVCTRLSDL_START_SEC_VAR_CLEARED_8
-#include "MemMap.h"
-
-extern VAR(uint8, DRVCTRLSDL_VAR) DrvCtrlSdlPwmHalfAct;
-   #define DRVCTRLSDL_STOP_SEC_VAR_CLEARED_8
-#include "MemMap.h"
-/* End: DRVCTRLSDL_STOP_SEC_VAR_CLEARED_8 (online) */
-
-
-
-
-
-
-   /* Begin: DRVCTRLSIMN_START_SEC_CALIB_32 (calib) */
-#define DRVCTRLSIMN_START_SEC_CALIB_32
-#include "MemMap.h"
-
-extern CONST(float32, DRVCTRLSIMN_CALIB) DrvCtrlSimnPwmDutyCycGainFacPhaU;
-   #define DRVCTRLSIMN_STOP_SEC_CALIB_32
-#include "MemMap.h"
-/* End: DRVCTRLSIMN_STOP_SEC_CALIB_32 (calib) */
-
-
-
-
-
-
-   /* Begin: DRVCTRLSIMN_START_SEC_CALIB_8 (calib) */
-#define DRVCTRLSIMN_START_SEC_CALIB_8
-#include "MemMap.h"
-
-extern CONST(boolean, DRVCTRLSIMN_CALIB) DrvCtrlSimnPwmFltInjEna;
-   #define DRVCTRLSIMN_STOP_SEC_CALIB_8
-#include "MemMap.h"
-/* End: DRVCTRLSIMN_STOP_SEC_CALIB_8 (calib) */
-
-
-
-
-
-
-   /* Begin: DRVCTRLSIMN_START_SEC_CALIB_8 (calib) */
-#define DRVCTRLSIMN_START_SEC_CALIB_8
-#include "MemMap.h"
-
-extern CONST(boolean, DRVCTRLSIMN_CALIB) DrvCtrlSimnPwmSwtOffBotPhaU;
-   #define DRVCTRLSIMN_STOP_SEC_CALIB_8
-#include "MemMap.h"
-/* End: DRVCTRLSIMN_STOP_SEC_CALIB_8 (calib) */
-
-
-
-
-
-
-   /* Begin: DRVCTRLSIMN_START_SEC_CALIB_8 (calib) */
-#define DRVCTRLSIMN_START_SEC_CALIB_8
-#include "MemMap.h"
-
-extern CONST(boolean, DRVCTRLSIMN_CALIB) DrvCtrlSimnPwmSwtOffTopPhaU;
-   #define DRVCTRLSIMN_STOP_SEC_CALIB_8
-#include "MemMap.h"
-/* End: DRVCTRLSIMN_STOP_SEC_CALIB_8 (calib) */
-
-
-
-
-
-
-   /* Begin: DRVCTRLSIMN_START_SEC_CALIB_32 (calib) */
-#define DRVCTRLSIMN_START_SEC_CALIB_32
-#include "MemMap.h"
-
-extern CONST(float32, DRVCTRLSIMN_CALIB) DrvCtrlSimnPwmSwtOnBotDlyPhaU;
-   #define DRVCTRLSIMN_STOP_SEC_CALIB_32
-#include "MemMap.h"
-/* End: DRVCTRLSIMN_STOP_SEC_CALIB_32 (calib) */
-
-
-
-
-
-
-   /* Begin: DRVCTRLSIMN_START_SEC_CALIB_32 (calib) */
-#define DRVCTRLSIMN_START_SEC_CALIB_32
-#include "MemMap.h"
-
-extern CONST(float32, DRVCTRLSIMN_CALIB) DrvCtrlSimnPwmSwtOnTopDlyPhaU;
-   #define DRVCTRLSIMN_STOP_SEC_CALIB_32
-#include "MemMap.h"
-/* End: DRVCTRLSIMN_STOP_SEC_CALIB_32 (calib) */
-
-
-
-
-
-
-   /* Begin: PWMSPMGR_START_SEC_VAR_CLEARED_32 (online) */
-#define PWMSPMGR_START_SEC_VAR_CLEARED_32
-#include "MemMap.h"
-
-extern VAR(float32, PWMSPMGR_VAR) PwmSpMgrPwmFrqSp;
-   #define PWMSPMGR_STOP_SEC_VAR_CLEARED_32
-#include "MemMap.h"
-/* End: PWMSPMGR_STOP_SEC_VAR_CLEARED_32 (online) */
-
-
-
-
-
-
-   /* Begin: PWMSPMUX_START_SEC_VAR_CLEARED_32 (online) */
-#define PWMSPMUX_START_SEC_VAR_CLEARED_32
-#include "MemMap.h"
-
-extern VAR(float32, PWMSPMUX_VAR) PwmSpMuxDutyCycPha[SYSDEF_EM_PHA_CNT_MAX];
-   #define PWMSPMUX_STOP_SEC_VAR_CLEARED_32
-#include "MemMap.h"
-/* End: PWMSPMUX_STOP_SEC_VAR_CLEARED_32 (online) */
-
-
-
-
-
-
-   /* Begin: PWMSPMUX_START_SEC_VAR_CLEARED_8 (online) */
-#define PWMSPMUX_START_SEC_VAR_CLEARED_8
-#include "MemMap.h"
-
-extern VAR(boolean, PWMSPMUX_VAR) PwmSpMuxEnaPha[SYSDEF_EM_PHA_CNT_MAX];
-   #define PWMSPMUX_STOP_SEC_VAR_CLEARED_8
-#include "MemMap.h"
-/* End: PWMSPMUX_STOP_SEC_VAR_CLEARED_8 (online) */
-
-
-
-
-#ifndef XDIM_PWMSPMUXDUTYCYCPHA_PWM3PHA_IMPL
-#define XDIM_PWMSPMUXDUTYCYCPHA_PWM3PHA_IMPL SYSDEF_EM_PHA_CNT_MAX
-#else
-#error "Arraysystemkonstante XDIM_PWMSPMUXDUTYCYCPHA_PWM3PHA_IMPL ist bereits definiert!"
-#endif
-
-#ifndef XDIM_PWMSPMUXENAPHA_PWM3PHA_IMPL
-#define XDIM_PWMSPMUXENAPHA_PWM3PHA_IMPL SYSDEF_EM_PHA_CNT_MAX
-#else
-#error "Arraysystemkonstante XDIM_PWMSPMUXENAPHA_PWM3PHA_IMPL ist bereits definiert!"
-#endif
-
-
-
-#endif
-
-
-
-#endif
-/** @} doxygen end group definition */
-
-
-/* PRQA L:SUP_3451 */
-
-
-/* ***************************************************************** */
-/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2021                 */
-/* All Rights Reserved. Confidential                                 */
-/* ***************************************************************** */
-/*==================[end of file]====================================*/
diff --git a/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/include/invA_pwm.h b/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/include/invA_pwm.h
deleted file mode 100644
index 9bc5ac539..000000000
--- a/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/include/invA_pwm.h
+++ /dev/null
@@ -1,95 +0,0 @@
-/* ********************************************************************** */
-/* Sourcefile:      invA_pwm.h                                            */
-/*                                                                        */
-/* Project:         eCar project                                          */
-/*                  TriCore Aurix                                         */
-/*                                                                        */
-/* Department:      Valeo-Siemens eAutomotive GmbH                        */
-/*                  VSeA R&D INV ASW DRCO                                 */
-/*                                                                        */
-/* First author:    -                                                     */
-/* Other authors:   -                                                     */
-/* ********************************************************************** */
-/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2018              */
-/* All Rights Reserved. Confidential                                      */
-/* ********************************************************************** */
-
-#ifndef INVA_PWM_H_
-#define INVA_PWM_H_
-/*!
-* \\addtogroup Pwm3Pha
-* @{
-*/
-
-/*================== [includes] =============================================*/
-#include "Std_Types.h"
-#include "Platform_Types.h"
-
-/*================== [macros] ===============================================*/
-#define WRITE_DSADC_EVFLAG_TIMESTAMP 0U
-
-#ifdef INVA_PWM_
-# define EXTERNAL_
-#else
-# define EXTERNAL_ extern
-#endif
-
-/*================== [type definitions] =====================================*/
-
-/*================== [declaration of public data] ===========================*/
-#define PWM3PHA_START_SEC_CONST_32
-#include "MemMap.h"
-
-extern const uint16 invA_vadc_current_sample_PRETRIGGER_CNTS;
-
-#define PWM3PHA_STOP_SEC_CONST_32
-#include "MemMap.h"
-/* ************************************************************************* */
-#define PWM3PHA_START_SEC_CALIB_32
-#include "MemMap.h"
-
-extern const volatile uint16 invA_dsadc_current_sample_PRETRIGGER_CNTS;
-
-#define PWM3PHA_STOP_SEC_CALIB_32
-#include "MemMap.h"
-/* ************************************************************************* */
-#define PWM3PHA_START_SEC_VAR_FAST_CLEARED_32
-#include "MemMap.h"
-
-extern sint32 invA_pwm_DEADTIME_CNTS;
-extern sint32 invA_pwm_HALF_PERIOD_CNTS;
-extern sint32 invA_pwm_PRETRIGGER_CNTS;
-
-#if WRITE_DSADC_EVFLAG_TIMESTAMP==1
-extern uint32 invA_pwm_last_HALF_PERIOD_CNTS;
-#endif
-
-#define PWM3PHA_STOP_SEC_VAR_FAST_CLEARED_32
-#include "MemMap.h"
-
-/*================== [declaration of global functions] ======================*/
-#if 0  /* 100kw */
-#define PWM3PHA_START_SEC_CODE_SLOW
-#include "MemMap.h"
-extern void invA_pwm_Init(void);
-#define PWM3PHA_STOP_SEC_CODE_SLOW
-#include "MemMap.h"
-
-#define PWM3PHA_START_SEC_CODE_FAST
-#include "MemMap.h"
-extern void invA_pwm_Set_Next(void);
-#define PWM3PHA_STOP_SEC_CODE_FAST
-#include "MemMap.h"
-#endif
-
-/*================== [closure] ==============================================*/
-/*! \\misra Warning No C2004:19.6 "Undefine EXTERNAL_ according to Coding Guideline." */
-#undef EXTERNAL_ /* PRQA S 0841 */
-/*! @} doxygen end of group definition */
-
-#endif /* INVA_PWM_ */
-/* ********************************************************************** */
-/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2018              */
-/* All Rights Reserved. Confidential                                      */
-/* ********************************************************************** */
-/*==================[end of file]============================================*/
diff --git a/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/lib/.gitkeep b/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/lib/.gitkeep
deleted file mode 100644
index e69de29bb..000000000
diff --git a/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/make/makefile.mak b/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/make/makefile.mak
deleted file mode 100644
index cdb5a64d1..000000000
--- a/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/make/makefile.mak
+++ /dev/null
@@ -1,28 +0,0 @@
-#=======================================================================================
-#
-# Filename:     \tmakefile.mak
-# Module:        \tPwm3Pha
-# Developer:\t\t<DeveloperName>
-# Creation Date: \t<Date>
-#
-# Automatically created by ec_generateMakefile.m
-#
-# Description:  \tMake rules and definition for model generation. This file is
-#               \tincluded by \\ec\\src\\fw_cu\\build\\Makefile
-#
-# Version:\t\t1.2 (15.01.2018)             
-#========================================================================================
-
-Pwm3Pha_BASE := $(dir $(abspath $(lastword $(dir $(abspath $(lastword $(MAKEFILE_LIST)))))))
-Pwm3Pha_PATH_OUT := $(Pwm3Pha_BASE)generated
-Pwm3Pha_PATH_USE := $(Pwm3Pha_BASE)
-CC_FILES_TO_BUILD += $(wildcard $(Pwm3Pha_BASE)src/*.c)
-CPP_FILES_TO_BUILD += $(wildcard $(Pwm3Pha_BASE)src/*.cpp)
-ASM_FILES_TO_BUILD += $(wildcard $(Pwm3Pha_BASE)src/*.s)
-
-Pwm3Pha_ARCHIVED_LIB := $(wildcard $(Pwm3Pha_BASE)lib/*.a)
-Pwm3Pha_GENERATED_LIB := $(Pwm3Pha_BASE)generated/lib/Pwm3Pha.a
-Pwm3Pha_ARCHIVED_A2L := $(wildcard $(Pwm3Pha_BASE)a2l/*.a2l)
-Pwm3Pha_GENERATED_A2L := $(Pwm3Pha_BASE)generated/a2l/Pwm3Pha.a2l
-A2L_SLAVE_Pwm3Pha = $(Pwm3Pha_GENERATED_A2L)
-CC_INCLUDE_PATH += $(Pwm3Pha_BASE)include
diff --git a/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/review/.gitkeep b/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/review/.gitkeep
deleted file mode 100644
index e69de29bb..000000000
diff --git a/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/review/VS_FO0084_Implementation_Review_Checklist_Pwm3Pha_01_01_P270.xlsx b/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/review/VS_FO0084_Implementation_Review_Checklist_Pwm3Pha_01_01_P270.xlsx
deleted file mode 100644
index 268c00f95..000000000
Binary files a/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/review/VS_FO0084_Implementation_Review_Checklist_Pwm3Pha_01_01_P270.xlsx and /dev/null differ
diff --git a/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/src/Pwm3Pha.c b/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/src/Pwm3Pha.c
deleted file mode 100644
index 258aafd6c..000000000
--- a/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/src/Pwm3Pha.c
+++ /dev/null
@@ -1,109 +0,0 @@
-/* ********************************************************************** */
-/* Sourcefile:      Pwm3Pha.c                                             */
-/*                                                                        */
-/* Project:         eCar project                                          */
-/*                  TriCore Aurix                                         */
-/*                                                                        */
-/* Major SW Version : 01                                                  */
-/* Minor SW Version : 02                                                  */
-/*                                                                        */
-/* Department:      Valeo-Siemens eAutomotive GmbH                        */
-/*                  VSeA R&D INV ASW DRCO                                 */
-/*                                                                        */
-/* First author:    Frank Jucht                                           */
-/* Other authors:   -                                                     */
-/* ********************************************************************** */
-/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2021                      */
-/* All Rights Reserved. Confidential                                      */
-/* ********************************************************************** */
-
-/*!
- * \\defgroup Pwm3Pha - handing of the pwm module
- * \\ingroup ModSwtSig
- * @{
- */
-
-#define PWM3PHA_
-
-/*================== [includes] =============================================*/
-#include "Std_Types.h"
-#include "Platform_Types.h"
-#include "AddGlobalDefines.h"
-#include "Pwm3Pha.h"
-#include "Pwm3Pha_data.h"
-
-//#include "dsadc.h"
-#include "invA_pwm.h"
-/* !\\misraWarningNo2012: Rule 1.1(DIR) " [L] Number of macro definitions exceeds 4095 - program does not conform strictly to ISO:C99."*/
-/*"Justification: Because of the platfrom approach is nescesary to be have the macros to compile the different SWs"*/
-#include "C2cComBswData.h" /*PRQA S 0380*/
-#include "C2cComDrvCtrlData.h"
-
-/*================== [defines] ==============================================*/
-
-/*================== [type definitions] =====================================*/
-
-/*================== [local data] ===========================================*/
-
-/*================== [prototype of local functions] =========================*/
-
-/*================== [definition of local functions] ========================*/
-
-/*================== [definition of global functions] =======================*/
-#if 0  /* 100kw */
-#define PWM3PHA_START_SEC_CODE_SLOW
-#include "MemMap.h"
-/******************************************************************/
-/*!
- * \\fn      void Pwm3Pha_Init(void)
- * \\brief   init function of the pwm module
- */
-/******************************************************************/
-
-/* GLIB-60697  -  Pwm3Pha_Init                                    */
-FUNC(void, PWM3PHA_CODE) Pwm3Pha_Init(void)
-{
-   /* call the pwm low level init function */
-   invA_pwm_Init();
-   return;
-}
-#define PWM3PHA_STOP_SEC_CODE_SLOW
-#include "MemMap.h"
-
-#define PWM3PHA_START_SEC_CODE_FAST
-#include "MemMap.h"
-/******************************************************************/
-/*!
- * \\fn      void Pwm3Pha_RunA(void)
- * \\brief   run function of the pwm phase system A
- */
-/******************************************************************/
-/* GLIB-61260  -  Pwm3Pha_RunA                                    */
-FUNC(void, PWM3PHA_CODE) Pwm3Pha_RunA(void)
-{
-   /* call PWM-Modulator */
-   invA_pwm_Set_Next();
-   return;
-}
-
-#define PWM3PHA_STOP_SEC_CODE_FAST
-#include "MemMap.h"
-#endif
-
-
-/******************************************************************/
-/*!
- * \\fn      void Pwm3Pha_NextPwmHalfA(void)
- * \\brief   run function for switching rising and falling pwm half
- */
-/******************************************************************/
-
-/*================== [closure] ==============================================*/
-/*! \\misra Warning No C2004:19.6 "Using \'#undef\' for master c-file"          */
-#undef PWM3PHA_ /* PRQA S 0841 */
-/*! @} doxygen end of group definition                                       */
-/* ************************************************************************* */
-/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2021                         */
-/* All Rights Reserved. Confidential                                         */
-/* ************************************************************************* */
-/*==================[end of file]============================================*/
diff --git a/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/src/Pwm3Pha_data.c b/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/src/Pwm3Pha_data.c
deleted file mode 100644
index d963023dc..000000000
--- a/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/src/Pwm3Pha_data.c
+++ /dev/null
@@ -1,28 +0,0 @@
-/* ***************************************************************** */
-/* Sourcefile: Pwm3Pha_data.c                                  */
-/* ADD Container: Pwm3Pha                                      */
-/* ADD Container Version: 1.6.0                                      */
-/* ***************************************************************** */
-/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2021                 */
-/* All Rights Reserved. Confidential                                 */
-/* ***************************************************************** */
-/*!
- * \\defgroup      Pwm3Pha_data   Pwm3Pha_data -  Pwm3Pha\'s calibration data
- * \\ingroup       Pwm3Pha
- * @{
-*/
-
-#include "Std_Types.h"
-
-
-
-#ifndef ADDS_DEF_FILE
-#define ADDS_DEF_FILE
-#endif
-
-/** @} doxygen end group definition */
-/* ***************************************************************** */
-/* Copyright (C) Valeo-Siemens eAutomotive GmbH 2021                 */
-/* All Rights Reserved. Confidential                                 */
-/* ***************************************************************** */
-/*==================[end of file]====================================*/
diff --git a/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/src/invA_pwm.c b/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/src/invA_pwm.c
deleted file mode 100644
index 9b700ec63..000000000
--- a/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/src/invA_pwm.c
+++ /dev/null
@@ -1,966 +0,0 @@
-/* ********************************************************************** */
-/* Sourcefile:      invA_pwm.c                                            */
-/*                                                                        */
-/* Project:         eCar project                                          */
-/*                  TriCore Aurix                                         */
-/*                                                                        */
-/* Department:      Valeo-Siemens eAutomotive GmbH                        */
-/*                  VSeA R&D INV ASW DRCO                                 */
-/*                                                                        */
-/* First author:    -                                                     */
-/* Other authors:   -                                                     */
-/* ********************************************************************** */
-/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2018              */
-/* All Rights Reserved. Confidential                                      */
-/* ********************************************************************** */
-
-/*!
-* \\defgroup invA_pwm - low level driver for pwm module
-* \\ingroup Pwm3Pha
-* @{
-*/
-
-#define INVA_PWM_
-
-/*================== [includes] =============================================*/
-#include "invA_pwm.h"
-#include "Pwm3Pha_data.h"
-#include "DrvCtrlSimn_data.h"
-#include "AddGlobalDefines.h"
-
-#include "Std_Types.h"
-#include "Mcal.h"
-#include "IfxStm_reg.h"
-/* !\\misraWarningNo2012: Rule 1.1(DIR) " [L] Number of macro definitions exceeds 4095 - program does not conform strictly to ISO:C99."*/
-/*"Justification: Because of the platfrom approach is nescesary to be have the macros to compile the different SWs"*/
-#include "IfxGtm_reg.h" /*PRQA S 0380*/
-#include "IfxPort_reg.h"
-#include "dsadc.h"
-#include "LlswGtm.h"
-#include "IntPrioDef.h"
-#include "Evadc.h"
-#include "C2cComCmnData.h"
-
-/* PRQA S 4119 EOF*/
-/* PRQA S 0674 EOF*/
-
-/*================== [defines] ==============================================*/
-#define GTM_SYS_FREQ  100000000.0f   /* = 100MHz */
-#define GTM_HALF_SYS_FREQ  (GTM_SYS_FREQ/2.0f)   /* = 50MHz */
-
-
-/*================== [type definitions] =====================================*/
-
-/*================== [local data] ===========================================*/
-
-/* ************************************************************************* */
-
-#define PWM3PHA_START_SEC_VAR_FAST_CLEARED_32
-#include "MemMap.h"
-
-#if 0  /* 100kw */
-static sint32 invA_pwm_MIN_ONTIME_CNTS; /* initialized by invA_pwm_Init */
-static sint32 invA_pwm_MIN_OFFTIME_CNTS; /* initialized by invA_pwm_Init */
-
-/*extern*/ sint32 invA_pwm_DEADTIME_CNTS; /* initialized by invA_pwm_Init */
-/*extern*/ sint32 invA_pwm_HALF_PERIOD_CNTS; /* initialized by invA_pwm_Init */
-/*extern*/ sint32 invA_pwm_PRETRIGGER_CNTS; /* initialized by invA_pwm_Init */
-#endif
-
-#if WRITE_DSADC_EVFLAG_TIMESTAMP==1
-static uint32 invA_pwm_last_HALF_PERIOD_CNTS;        /* initialized by invA_pwm_Init *//* should go into the Pwm3Pha_data.c, should change in ADD*/
-#endif
-
-#if 0  /* 100kw */
-static volatile float32 invA_pwm_HALF_PERIOD_float;             /* initialized by invA_pwm_Init */
-#endif
-
-#define PWM3PHA_STOP_SEC_VAR_FAST_CLEARED_32
-#include "MemMap.h"
-
-/*================== [global data] ===========================================*/
-
-/* ************************************************************************* */
-#define PWM3PHA_START_SEC_CALIB_32
-/*lint -e(537,451) Repeated inclusion is needed. */
-#include "MemMap.h"
-
-#if 0  /* 100kw */
-/*
-@@ SYMBOL = invA_pwm_DEADTIME
-@@ A2L_TYPE = PARAMETER
-@@ DATA_TYPE = FLOAT
-@@ DESCRIPTION = "PWM deadtime"
-@@ GROUP = ModSwtSig | Pwm3Pha
-@@ END
-*/
-static const volatile float32 invA_pwm_DEADTIME=2.5E-6f;            /* = 2.5us */
-/*
-@@ SYMBOL = invA_pwm_PretriggerVzk
-@@ A2L_TYPE = PARAMETER
-@@ DATA_TYPE = FLOAT
-@@ DESCRIPTION = "PWM pretrigger"
-@@ GROUP = ModSwtSig | Pwm3Pha
-@@ END
-*/
-static const volatile float32 invA_pwm_PretriggerVzk=25E-6f;      /* = 25us former: 8us      todo:choose proper time value */
-/*
-@@ SYMBOL = invA_pwm_MIN_PULSE_WIDTH
-@@ A2L_TYPE = PARAMETER
-@@ DATA_TYPE = FLOAT
-@@ DESCRIPTION = "PWM minimum pulse with"
-@@ GROUP = ModSwtSig | Pwm3Pha
-@@ END
-*/
-static const volatile float32 invA_pwm_MIN_PULSE_WIDTH=2.5E-6f;  /* = 2.5us minimum ON time that is allowed to turn on an IGBT */
-#endif
-
-/*
-@@ SYMBOL = invA_dsadc_current_sample_PRETRIGGER_CNTS
-@@ A2L_TYPE = PARAMETER
-@@ DATA_TYPE = UWORD
-@@ DESCRIPTION = "Value for the rising-edge of the trigger that starts DSADC-integration of the current measurement (20us half-integration + 8us discard -5us dely currentSensor)"
-@@ GROUP = ModSwtSig | Pwm3Pha
-@@ END
-*/
-/*Value for the rising-edge of the trigger that starts DSADC-integration of the current measurement - (100MHz clock -> Dt=10ns -> 1us=100) */
-const volatile uint16 invA_dsadc_current_sample_PRETRIGGER_CNTS=(2000U+800U)-500U;  /*20us half-integration + 8us discard -5us Verschiebung MelexisSensor */
-
-#define PWM3PHA_STOP_SEC_CALIB_32
-/*lint -e(537,451) Repeated inclusion is needed. */
-#include "MemMap.h"
-
-#define PWM3PHA_START_SEC_VAR_FAST_INIT_32
-#include "MemMap.h"
-
-/*
-@@ SYMBOL = gcall_count__interrupt_isr_invA_ctrl_gtm
-@@ A2L_TYPE = MEASURE
-@@ DATA_TYPE = ULONG
-@@ DESCRIPTION = "Counter of syno interrupt for the A-Tri-Phase system"
-@@ GROUP = ModSwtSig | Pwm3Pha
-@@ END
-*/
-static uint32 gcall_count__interrupt_isr_invA_ctrl_gtm = 0U;
-
-#if 0  /* 100kw */
-typedef struct
-{
-   /* hardware abstraction pointers (TOM, ATOM) */
-   volatile Ifx_GTM_ATOM_CH_SR0 * const TOP_SET;
-   volatile Ifx_GTM_ATOM_CH_SR1 * const TOP_RST;
-
-   volatile Ifx_GTM_ATOM_CH_SR0 * const BOT_SET;
-   volatile Ifx_GTM_ATOM_CH_SR1 * const BOT_RST;
-
-   /* commons */
-   const sint32 phase_ID;
-   sint32 TOP_rising_2_end_CNTS;
-   sint32 TOP_falling_2_end_CNTS;
-   sint32 BOT_rising_2_end_CNTS;
-   sint32 BOT_falling_2_end_CNTS;
-
-   uint32 TOP_state_at_end_of_1st;
-   uint32 TOP_state_at_end_of_2nd;
-   uint32 BOT_state_at_end_of_1st;
-   uint32 BOT_state_at_end_of_2nd;
-
-   /*********** LOCAL candidates ********************************************************
-    can be promoted to locals (declaration inside the function instead of the structure)
-   *************************************************************************************/
-
-   /* 1st */
-   sint32 on_width_CNTS_1st;                         /* raw theoretical desired on time of the high side */
-   sint32 BOT_falling_edge_at_CNTS;                  /* final decision on the falling edge of BOT */
-   sint32 TOP_rising_edge_at_CNTS;                   /* final decision on the rising edge of TOP */
-   sint32 BOT_demanded_falling_edge_at_CNTS;
-   sint32 BOT_earliest_delayed_rising_event_CNTS;
-   sint32 BOT_earliest_falling_event_CNTS;
-   sint32 TOP_demanded_rising_edge_at_CNTS;
-   sint32 TOP_earliest_rising_event_CNTS;
-
-
-   /* 2nd */
-   sint32 on_width_CNTS_2nd;                         /* raw theoretical desired on time of the high side */
-   sint32 TOP_falling_edge_at_CNTS;                  /* final decision on the falling edge of TOP */
-   sint32 BOT_rising_edge_at_CNTS;                   /* final decision on the rising edge of BOT */
-   sint32 TOP_demanded_falling_edge_at_CNTS;
-   sint32 TOP_earliest_delayed_rising_event_CNTS;
-   sint32 TOP_earliest_falling_event_CNTS;
-   sint32 BOT_demanded_rising_edge_at_CNTS;
-   sint32 BOT_earliest_rising_event_CNTS;
-
-} struct_PWM_PHASEX_DATA;
-
-
-static struct_PWM_PHASEX_DATA invA_phaseU=
-{
-   .phase_ID=0L,                  /* PRQA S 1053 */   /* 0: U, 1: V, 2: W */
-
-   .TOP_rising_2_end_CNTS=0L,                          /*  zero: did not rise (= is low) */
-                                                 /*   max: was high all the time (= is high) */
-                                                 /* value: delta from the edge to the end of the semi-period */
-
-   .TOP_falling_2_end_CNTS=(sint32)(((GTM_SYS_FREQ / 10000.0f)) / 2.0f),
-   /*  zero: did not fall (= is high) */
-   /*   max: was low all the time (= is low)*/
-   /* value: delta from the edge to the end of the semi-period */
-
-   .BOT_rising_2_end_CNTS=0L,                          /*  zero: did not rise (= is low) */
-                                                 /*   max: was high all the time (= is high) */
-                                                 /* value: delta from the edge to the end of the semi-period */
-
-   .BOT_falling_2_end_CNTS=(sint32)(((GTM_SYS_FREQ / 10000.0f)) / 2.0f),
-   /*  zero: did not fall (= is high) */
-   /*   max: was low all the time (= is low) */
-   /* value: delta from the edge to the end of the semi-period */
-
-   .TOP_state_at_end_of_1st=0U,  /*  state high or low of TOP at the end of 1st */
-   .TOP_state_at_end_of_2nd=0U,  /*  state high or low of TOP at the end of 2nd */
-   .BOT_state_at_end_of_1st=0U,  /*  state high or low of TOP at the end of 1st */
-   .BOT_state_at_end_of_2nd=0U,  /*  state high or low of TOP at the end of 2nd */
-
-   /* hardware abstraction pointers (TOM, ATOM) */
-   /* only valid for SL=1 (if SL==0 its the inverse SET<->RST) */
-   /* ATOM0 Channel 1 CCU0 Compare Shadow Register */
-   .TOP_SET=&(GTM_ATOM0_CH1_SR0),
-   /* ATOM0 Channel 1 CCU1 Compare Shadow Register */
-   .TOP_RST=&(GTM_ATOM0_CH1_SR1),
-
-   /* ATOM0 Channel 2 CCU0 Compare Shadow Register */
-   .BOT_SET=&(GTM_ATOM0_CH2_SR0),
-   /* ATOM0 Channel 2 CCU1 Compare Shadow Register */
-   .BOT_RST=&(GTM_ATOM0_CH2_SR1),
-};
-
-static struct_PWM_PHASEX_DATA invA_phaseV=
-{
-   .phase_ID=1L,                    /* PRQA S 1053 */   /* 0: U, 1: V, 2: W */
-
-   .TOP_rising_2_end_CNTS=0L,                          /*  zero: did not rise (= is low) */
-                                                    /*   max: was high all the time (= is high) */
-                                                    /* value: delta from the edge to the end of the semi-period */
-
-   .TOP_falling_2_end_CNTS=(sint32)(((GTM_SYS_FREQ / 10000.0f)) / 2.0f),
-   /*  zero: did not fall (= is high) */
-   /*   max: was low all the time (= is low) */
-   /* value: delta from the edge to the end of the semi-period */
-
-   .BOT_rising_2_end_CNTS=0L,                          /*  zero: did not rise (= is low) */
-                                                    /*   max: was high all the time (= is high) */
-                                                    /* value: delta from the edge to the end of the semi-period */
-
-   .BOT_falling_2_end_CNTS=(sint32)(((GTM_SYS_FREQ / 10000.0f)) / 2.0f),
-   /*  zero: did not fall (= is high) */
-   /*   max: was low all the time (= is low) */
-   /* value: delta from the edge to the end of the semi-period */
-
-   .TOP_state_at_end_of_1st=0U,  /*  state high or low of TOP at the end of 1st */
-   .TOP_state_at_end_of_2nd=0U,  /*  state high or low of TOP at the end of 2nd */
-   .BOT_state_at_end_of_1st=0U,  /*  state high or low of TOP at the end of 1st */
-   .BOT_state_at_end_of_2nd=0U,  /*  state high or low of TOP at the end of 2nd */
-
-   /* hardware abstraction pointers (TOM, ATOM) */
-   /* only valid for SL=1 (if SL==0 its the inverse SET<->RST) */
-   .TOP_SET=&(GTM_ATOM0_CH3_SR0),
-   .TOP_RST=&(GTM_ATOM0_CH3_SR1),
-
-   .BOT_SET=&(GTM_ATOM0_CH4_SR0),
-   .BOT_RST=&(GTM_ATOM0_CH4_SR1),
-};
-
-static struct_PWM_PHASEX_DATA invA_phaseW=
-{
-   .phase_ID=2L,                  /* PRQA S 1053 */     /* 0: U, 1: V, 2: W */
-
-   .TOP_rising_2_end_CNTS=0L,                          /*  zero: did not rise (= is low) */
-                                                    /*   max: was high all the time (= is high) */
-                                                    /* value: delta from the edge to the end of the semi-period */
-
-   .TOP_falling_2_end_CNTS=(sint32)((GTM_SYS_FREQ / 10000.0f) / 2.0f),
-   /*  zero: did not fall (= is high) */
-   /*   max: was low all the time (= is low) */
-   /* value: delta from the edge to the end of the semi-period */
-
-   .BOT_rising_2_end_CNTS=0L,                          /*  zero: did not rise (= is low) */
-                                                    /*   max: was high all the time (= is high) */
-                                                    /* value: delta from the edge to the end of the semi-period */
-
-   .BOT_falling_2_end_CNTS=(sint32)(((GTM_SYS_FREQ / 10000.0f)) / 2.0f),
-   /*  zero: did not fall (= is high) */
-   /*   max: was low all the time (= is low) */
-   /* value: delta from the edge to the end of the semi-period */
-
-   .TOP_state_at_end_of_1st=0U,  /*  state high or low of TOP at the end of 1st */
-   .TOP_state_at_end_of_2nd=0U,  /*  state high or low of TOP at the end of 2nd */
-   .BOT_state_at_end_of_1st=0U,  /*  state high or low of TOP at the end of 1st */
-   .BOT_state_at_end_of_2nd=0U,  /*  state high or low of TOP at the end of 2nd */
-
-   /* hardware abstraction pointers (TOM, ATOM) */
-   /* only valid for SL=1 (if SL==0 its the inverse SET<->RST) */
-   .TOP_SET=&(GTM_ATOM0_CH5_SR0),
-   .TOP_RST=&(GTM_ATOM0_CH5_SR1),
-
-   .BOT_SET=&(GTM_ATOM0_CH6_SR0),
-   .BOT_RST=&(GTM_ATOM0_CH6_SR1),
-};
-#endif
-
-#define PWM3PHA_STOP_SEC_VAR_FAST_INIT_32
-#include "MemMap.h"
-
-
-/* ************************************************************************* */
-#define PWM3PHA_START_SEC_CONST_32
-#include "MemMap.h"
-
-  const uint16 invA_vadc_current_sample_PRETRIGGER_CNTS=300U;    /*3us before to place sample phase to correct place */
-
-#define PWM3PHA_STOP_SEC_CONST_32
-#include "MemMap.h"
-/*================== [prototype of local functions] =========================*/
-
-/*================== [definition of local functions] ========================*/
-
-/*================== [definition of global functions] =======================*/
-#if 0  /* 100kw */
-#define PWM3PHA_START_SEC_CODE_SLOW
-#include "MemMap.h"
-void invA_pwm_Init(void)
-{
-
-
-   invA_pwm_MIN_ONTIME_CNTS=(sint32)((float32)(GTM_SYS_FREQ * invA_pwm_MIN_PULSE_WIDTH));
-   invA_pwm_DEADTIME_CNTS=(sint32)((float32)(GTM_SYS_FREQ * invA_pwm_DEADTIME));
-   invA_pwm_MIN_OFFTIME_CNTS=invA_pwm_MIN_ONTIME_CNTS;
-   invA_pwm_PRETRIGGER_CNTS=(sint32)((float32)(GTM_SYS_FREQ * invA_pwm_PretriggerVzk));
-
-   invA_pwm_HALF_PERIOD_float=(GTM_HALF_SYS_FREQ / PwmSpMgrPwmFrqSp );
-   invA_pwm_HALF_PERIOD_CNTS=(sint32) invA_pwm_HALF_PERIOD_float;
-
-#if WRITE_DSADC_EVFLAG_TIMESTAMP==1U
-   invA_pwm_last_HALF_PERIOD_CNTS = (uint32) invA_pwm_HALF_PERIOD_CNTS;
-#endif
-   return;
-}
-#define PWM3PHA_STOP_SEC_CODE_SLOW
-#include "MemMap.h"
-#endif
-
-
-#define PWM3PHA_START_SEC_CODE_FAST
-#include "MemMap.h"
-void __interrupt (ISR_GTM_PRIO_INVA_CTRL) __vector_table(VTABLE_CPU2) isr_invA_ctrl_gtm(void)    /*PRQA S 3408*/ /*PRQA S 1503*/
-{
-   gcall_count__interrupt_isr_invA_ctrl_gtm++;
-   return;
-}
-
-/* ab hier:  LLSW-Treiber fuer PWM-Impulserzeugung (Greeneisen) */
-#if 0  /* 100kw */
-static inline void invA_pwm_NewPWM_Freq(void)
-{
-#if WRITE_DSADC_EVFLAG_TIMESTAMP==1
-   invA_pwm_last_HALF_PERIOD_CNTS = (uint32) invA_pwm_HALF_PERIOD_CNTS;
-#endif
-
-   /*-> compute next period CNTS */
-
-   invA_pwm_HALF_PERIOD_float=(GTM_HALF_SYS_FREQ / PwmSpMgrPwmFrqSp );
-   invA_pwm_HALF_PERIOD_CNTS=(sint32) invA_pwm_HALF_PERIOD_float;
-
-   /* SOMP PWM with reset **************************************************/
-
-   /* update the main timer CH0 */
-
-   /* CM0:  24 bit compare for PWM frequency:  -> 50us for half pulse -> Tpwm=100us (RESET with SL=0) */
-   GTM_ATOM0_CH0_SR0.U=(uint32)invA_pwm_HALF_PERIOD_CNTS;    /* shadow of CM0 */
-
-   /* CM1:  24 bit compare for ISR_CTRL trigger XXXXus before end of half period (SET with SL=0) */
-   GTM_ATOM0_CH0_SR1.U=((uint32)invA_pwm_HALF_PERIOD_CNTS - (uint32)invA_pwm_PRETRIGGER_CNTS);   /* shadow of CM1 */
-
-   return;
-}
-
-
-static inline
-void invA_pwm_Set_Next_PhaseX_1st(struct_PWM_PHASEX_DATA *X,boolean Pwmfault_injection_Phase)
-{
-   sint32 deadtime_delay;
-   sint32 minofftime_delay;
-   sint32 invA_pwm_SwitchOnDelayFaultInjection_CNTS= 0;
-   float32 invA_Loc_PwmGainfactor = 1.f;
-
-#ifndef SERIES_PRODUCTION
-   if((Pwmfault_injection_Phase==TRUE)&&(DrvCtrlSimnPwmFltInjEna==TRUE))
-   {
-      invA_pwm_SwitchOnDelayFaultInjection_CNTS = (sint32)((float32)(GTM_SYS_FREQ * DrvCtrlSimnPwmSwtOnTopDlyPhaU));
-      if(invA_pwm_SwitchOnDelayFaultInjection_CNTS < 0)
-      {
-          invA_pwm_SwitchOnDelayFaultInjection_CNTS = 0;
-      }
-\t   invA_Loc_PwmGainfactor = DrvCtrlSimnPwmDutyCycGainFacPhaU;
-   }
-#endif
-
-   /*sint32 on_width_CNTS_1st*/     /* COULD BE LOCAL*/
-   /* raw theoretical desired on time of the high side*/
-   /*X->on_width_CNTS_1st=(sint32)((float32)(invA_pwm_dutyUVW[X->phase_ID] * invA_pwm_HALF_PERIOD_float));*/
-   X->on_width_CNTS_1st=(sint32)((float32)(PwmSpMuxDutyCycPha[X->phase_ID] * invA_pwm_HALF_PERIOD_float * invA_Loc_PwmGainfactor));
-   /*sint32 BOT_falling_edge_at_CNTS;*/ /* COULD BE LOCAL*/
-   /*sint32 TOP_rising_edge_at_CNTS; */ /* COULD BE LOCAL*/
-
-   /* take care of BOT demanded*/
-
-   /*sint32 BOT_demanded_falling_edge_at_CNTS;*/  /* COULD BE LOCAL*/
-   /*if(INVA_PHASE_UVW_SWITCH.B1.phaseX_off[X->phase_ID] == 1U)*/
-   if(0U == PwmSpMuxEnaPha[X->phase_ID])
-   {
-      X->BOT_demanded_falling_edge_at_CNTS=2L;/*GTMBUG*/    /*else:=1 */   /* turn off the phase as soon as possible-> BOT going low*/
-   }
-   else
-   {
-      if(X->on_width_CNTS_1st == 0L)
-      {
-         X->BOT_demanded_falling_edge_at_CNTS=0xFFFFL;                 /* %0 percent requested -> no falling edge!!*/
-      }
-      else
-      {
-         X->BOT_demanded_falling_edge_at_CNTS=invA_pwm_HALF_PERIOD_CNTS - X->on_width_CNTS_1st;    /* less than 100% requested turn off BOT with no delay*/
-
-         if(X->BOT_demanded_falling_edge_at_CNTS < 2) /*GTMBUG*/    /*else:<1*/
-         {
-            X->BOT_demanded_falling_edge_at_CNTS=2;/*GTMBUG*/    /*else:=1*/   /* requested turn off BOT with no delay*/
-                                                                 /* if req. is 100% falls at 2*/  /*GTMBUG*/  /*else:1*/
-         }
-      }
-   }
-   /* results is always  2<= X->BOT_demanded_falling_edge_at_CNTS <= invA_pwm_HALF_PERIOD_CNTS*/
-   /*                    ^GTMBUG    else:1<=*/  
-
-   /* take care of BOT allowed*/
-
-   if(X->BOT_state_at_end_of_2nd == 0U)        /* need to make a rising edge of BOT if possible*/
-   {                                       /* was off; 100%; deadtime did not allow it to rise before*/
-
-      /*sint32 BOT_earliest_delayed_rising_event_CNTS*/    /* COULD BE LOCAL*/
-
-      X->BOT_earliest_delayed_rising_event_CNTS=(invA_pwm_DEADTIME_CNTS - X->TOP_falling_2_end_CNTS); /*earliest rising of BOT due to deadtime*/
-
-      /*(invA_pwm_MIN_OFFTIME_CNTS - X->BOT_falling_2_end_CNTS) */          /* earliest rising of BOT due to minimum off time    *not relevant*/
-      /* could only happen with asynchronous emergency turn off*/
-      if(X->BOT_earliest_delayed_rising_event_CNTS < 2L) /*GTMBUG*/                                                                            /*else:<1*/
-      {
-         X->BOT_earliest_delayed_rising_event_CNTS=2L; /*GTMBUG*/                                                                            /*else:=1*/
-      }
-
-      if((X->BOT_demanded_falling_edge_at_CNTS - X->BOT_earliest_delayed_rising_event_CNTS) >= invA_pwm_MIN_ONTIME_CNTS)    /* invA_pwm_MIN_ONTIME_CNTS must not be zero*/
-      {
-         /* there is time to set BOT high and make it low again in this semi-period*/
-         (X->BOT_SET->U)=(uint32)X->BOT_earliest_delayed_rising_event_CNTS;
-
-         X->BOT_falling_edge_at_CNTS=X->BOT_demanded_falling_edge_at_CNTS;
-      }
-      else
-      {
-         /* setting BOT high would cause a pulse that is to small, so it will be suppressed*/
-         (X->BOT_SET->U)=0xFFFFu;
-
-         X->BOT_falling_edge_at_CNTS=X->BOT_demanded_falling_edge_at_CNTS; /* not really necessary since it is low anyway, there is no BOT falling edge!!*/
-      }
-   }
-   else    /* BOT is high at beginning, needs to go down*/
-   {
-      (X->BOT_SET->U)=0xFFFFu;    /* no setting*/
-
-      /*sint32 BOT_earliest_falling_event_CNTS*/   /* COULD BE LOCAL*/
-      X->BOT_earliest_falling_event_CNTS=invA_pwm_MIN_ONTIME_CNTS - X->BOT_rising_2_end_CNTS;
-
-      /* if positive and greater than demanded falling edge then BOT falling edge must be delayed by that value*/
-      /* remark: demanded BOT falling edge is always >=2*/   /*GTMBUG*/  /*else:>=1*/
-      if(X->BOT_earliest_falling_event_CNTS > X->BOT_demanded_falling_edge_at_CNTS)   /* sorry, will have to delay the falling edge!!*/
-      {
-         X->BOT_falling_edge_at_CNTS=X->BOT_earliest_falling_event_CNTS; /* falls where allowed due to minimum pulse width*/
-      }
-      else
-      {
-         X->BOT_falling_edge_at_CNTS=X->BOT_demanded_falling_edge_at_CNTS; /* falls where desired*/
-      }
-   }
-   (X->BOT_RST->U)=(uint32)X->BOT_falling_edge_at_CNTS;        /* program the BOT reset timer*/
-
-   /* take care of the TOP signal */
-   /* generally  it will only rise at some point, or never rise if   0% requested */
-   /* therefore one exception: if the semi-period before was 100% it will have to fall first before it can rise, unless 100% is being requested again */
-
-   /* the falling edge of BOT, as any falling edge is in principle not delayed */
-   /* so adding to it one DEADTIME will lead to the demanded rising edge of TOP */
-   /* in the cases where the falling edge of BOT was delayed, adding one DEADTIME will lead to the proportionally delayed rising edge of TOP */
-   /* this is in most cases equal to the earliest possible rising event */
-
-   /* so it\'s safe to use always the set point of TOP being the falling edge of BOT + DEADTIME as result */
-
-   /*int TOP_demanded_rising_edge_at_CNTS; */ /* COULD BE LOCAL */
-
-   X->TOP_demanded_rising_edge_at_CNTS= (invA_pwm_HALF_PERIOD_CNTS - (X->on_width_CNTS_1st)) + invA_pwm_DEADTIME_CNTS + invA_pwm_SwitchOnDelayFaultInjection_CNTS;    /* requested TOP turn on with delay */
-   /* if the duty request is too small or 0% than */
-   /* the requested rising edge will never be reached, */
-   /* and it will be out of this half */
-   if(X->TOP_demanded_rising_edge_at_CNTS < 2) /*GTMBUG*/                                                                                                       /* else:<1 */
-   {
-      X->TOP_demanded_rising_edge_at_CNTS=2; /*GTMBUG*/                                                                                                        /*else:=1 */
-   }
-
-   /*sint32 TOP_earliest_rising_event_CNTS;*/   /* COULD BE LOCAL */
-
-   if(X->TOP_state_at_end_of_2nd == 0U)        /* TOP started low, prior: normal, 0% or off */
-   {
-      (X->TOP_RST->U)=0xFFFFu;        /* no reset of TOP */
-
-      /* remark: BOT falling edge is always >=2*/  /*GTMBUG*/   /* else:>=1 */
-      deadtime_delay=(X->BOT_falling_edge_at_CNTS + invA_pwm_DEADTIME_CNTS);
-      minofftime_delay=(invA_pwm_MIN_OFFTIME_CNTS - X->TOP_falling_2_end_CNTS);
-      if(deadtime_delay > minofftime_delay)
-      {
-         X->TOP_earliest_rising_event_CNTS=deadtime_delay;     /* earliest rising of TOP one deadtime after the just calculated BOT falling edge */
-      }
-      else
-      {
-         X->TOP_earliest_rising_event_CNTS=minofftime_delay;  /* earliest rising of TOP due to minimum off time */
-                                                              /* this will only become true if the minimum pulse width is bigger than one deadtime */
-      }
-   }
-   else    /* started high, prior was 100% */
-   {
-      if(X->on_width_CNTS_1st < invA_pwm_HALF_PERIOD_CNTS)                                           /* TOP must go immediately low when exiting 100% */
-      {
-         (X->TOP_RST->U)=2u; /*GTMBUG*/                                           /*else:=1*/
-
-         deadtime_delay=(X->BOT_falling_edge_at_CNTS + invA_pwm_DEADTIME_CNTS);
-         minofftime_delay=(2 + invA_pwm_MIN_OFFTIME_CNTS); /*GTMBUG*/                                           /*else:1+ */
-         if(deadtime_delay > minofftime_delay)
-         {
-            X->TOP_earliest_rising_event_CNTS=deadtime_delay;        /* this is due deadtime, since BOT meanwhile jumped around */
-         }
-         else
-         {
-            X->TOP_earliest_rising_event_CNTS=minofftime_delay;      /* this is due to going low, minimum pulse condition */
-         }
-      }
-      else    /* still 100% request */
-      {
-         X->TOP_earliest_rising_event_CNTS=0; /*GTMBUG*/    /*else:1 */      /* if it started high there is no restriction on going (staying) high */
-
-         (X->TOP_RST->U)=0xFFFFu;        /* no reset of TOP */
-      }
-   }
-
-   /*if(INVA_PHASE_UVW_SWITCH.B1.phaseX_off[X->phase_ID] == 1U)*/
-   if(0U == PwmSpMuxEnaPha[X->phase_ID])
-   {
-      (X->TOP_RST->U)=2u; /*GTMBUG*/        /*else:1*/  /* turn off the phase as soon as possible-> TOP going low (falling edge is not delayed)*/
-
-      X->TOP_demanded_rising_edge_at_CNTS=0xFFFFL;  /* TOP will not go high*/
-   }
-
-   if(X->TOP_earliest_rising_event_CNTS > X->TOP_demanded_rising_edge_at_CNTS)
-   {
-      X->TOP_rising_edge_at_CNTS=X->TOP_earliest_rising_event_CNTS;     /* extra delay situation*/
-                                                                        /* may be out of the semi-period*/
-   }
-   else
-   {
-      X->TOP_rising_edge_at_CNTS=X->TOP_demanded_rising_edge_at_CNTS;   /* the demanded is ok*/
-                                                                        /* maybe out of the semi-period*/
-   }
-
-   (X->TOP_SET->U)=(uint32)X->TOP_rising_edge_at_CNTS; /* program the TOP set timer */
-
-   /* compute distances and states */
-
-   if(X->TOP_rising_edge_at_CNTS > invA_pwm_HALF_PERIOD_CNTS)
-   {
-      X->TOP_rising_2_end_CNTS=0L;      /* no negative distance, zero saturation: this case did not rise (= is low) */
-      X->TOP_state_at_end_of_1st=0U;    /* state of TOP is low at the end of 1st */
-   }
-   else
-   {
-      X->TOP_rising_2_end_CNTS=invA_pwm_HALF_PERIOD_CNTS - X->TOP_rising_edge_at_CNTS;    /* if max: was high all the time (= is high) */
-      /* if value>=0: delta from the edge to the end of the semi-period */
-      X->TOP_state_at_end_of_1st=1U;                                                    /* state of TOP is high at the end of 1st */
-   }
-
-   if(X->BOT_falling_edge_at_CNTS > invA_pwm_HALF_PERIOD_CNTS)
-   {
-      X->BOT_falling_2_end_CNTS=0L;     /* no negative distance, zero saturation: this case did not fall (= is high) */
-      X->BOT_state_at_end_of_1st=1U;    /* state of BOT is high at the end of 1st */
-   }
-   else
-   {
-      X->BOT_falling_2_end_CNTS=invA_pwm_HALF_PERIOD_CNTS - X->BOT_falling_edge_at_CNTS;  /* if max: was low all the time (= is low) */
-      /* if value>=0: delta from the edge to the end of the semi-period */
-      X->BOT_state_at_end_of_1st=0U;                                                    /* state of BOT is low at the end of 1st */
-   }
-
-#ifndef SERIES_PRODUCTION
-   if((Pwmfault_injection_Phase==TRUE)&&(DrvCtrlSimnPwmFltInjEna==TRUE))
-   {
-      if(DrvCtrlSimnPwmSwtOffTopPhaU==TRUE)
-      {
-         /*Top-SwitchOff */
-         (X->TOP_SET->U)=0xFFFFu; /* program the TOP set timer */
-         (X->TOP_RST->U)=2u;
-      }
-      if(DrvCtrlSimnPwmSwtOffBotPhaU==TRUE)
-      {
-         /*Bot-SwitchOff */
-         (X->BOT_SET->U)=0xFFFFu; /* program the Bot set timer */
-         (X->BOT_RST->U)=2u;
-      }
-   }
-#endif
-
-   return;
-}
-
-static inline
-void invA_pwm_Set_Next_PhaseX_2nd(struct_PWM_PHASEX_DATA *X,boolean Pwmfault_injection_Phase)
-{
-
-   sint32 deadtime_delay;
-   sint32 minofftime_delay;
-   sint32 invA_pwm_SwitchOnDelayFaultInjection_CNTS= 0;
-   float32 invA_Loc_PwmGainfactor = 1.f;
-
-#ifndef SERIES_PRODUCTION
-   if((Pwmfault_injection_Phase==TRUE)&&(DrvCtrlSimnPwmFltInjEna==TRUE))
-   {
-      invA_pwm_SwitchOnDelayFaultInjection_CNTS = (sint32)((float32)(GTM_SYS_FREQ * DrvCtrlSimnPwmSwtOnBotDlyPhaU));
-      if(invA_pwm_SwitchOnDelayFaultInjection_CNTS < 0)
-      {
-         invA_pwm_SwitchOnDelayFaultInjection_CNTS = 0;
-      }
-      invA_Loc_PwmGainfactor = DrvCtrlSimnPwmDutyCycGainFacPhaU;
-   }
-#endif
-
-   /*sint32 on_width_CNTS_2nd */     /* COULD BE LOCAL */
-   /* raw theoretical desired on time of the high side */
-   /*X->on_width_CNTS_2nd=(sint32)((float32)(invA_pwm_dutyUVW[X->phase_ID] * invA_pwm_HALF_PERIOD_float)); */
-   X->on_width_CNTS_2nd=(sint32)((float32)(PwmSpMuxDutyCycPha[X->phase_ID] * invA_pwm_HALF_PERIOD_float * invA_Loc_PwmGainfactor));
-
-   /*sint32 TOP_falling_edge_at_CNTS; */     /* COULD BE LOCAL */
-   /*sint32 BOT_rising_edge_at_CNTS; */      /* COULD BE LOCAL */
-
-   /* take care of TOP demanded */
-
-   /*sint32 TOP_demanded_falling_edge_at_CNTS; */    /* COULD BE LOCAL */
-
-   /*if(INVA_PHASE_UVW_SWITCH.B1.phaseX_off[X->phase_ID] == 1U) */
-   if(0U == PwmSpMuxEnaPha[X->phase_ID])
-   {
-      X->TOP_demanded_falling_edge_at_CNTS=2L;/*GTMBUG*/    /*else:=1 */    /* turn off the phase as soon as possible-> BOT going low */
-   }
-   else
-   {
-      if(X->on_width_CNTS_2nd < 2L) /*GTMBUG*/    /*else:<1 */
-      {
-         X->TOP_demanded_falling_edge_at_CNTS=2;/*GTMBUG*/    /*else:=1 */   /* requested turn off TOP with no delay */
-                                                              /* if req. is 0% falls at 2*/   /*GTMBUG*/  /*else:1 */
-      }
-      else
-      {
-         if(X->on_width_CNTS_2nd == invA_pwm_HALF_PERIOD_CNTS)
-         {
-            X->TOP_demanded_falling_edge_at_CNTS=0xFFFFL;                 /* %100 percent requested -> no falling edge!! */
-         }
-         else
-         {
-            X->TOP_demanded_falling_edge_at_CNTS=X->on_width_CNTS_2nd;    /* less than 100% requested turn off TOP with no delay */
-         }
-      }
-   }
-   /* results is always  2<= X->TOP_demanded_falling_edge_at_CNTS <= invA_pwm_HALF_PERIOD_CNTS */
-   /*                    ^*/  /*GTMBUG*/  /*else:1<= */
-
-   /* take care of TOP allowed */
-
-   if(X->TOP_state_at_end_of_1st == 0U)        /* need to make a rising edge of TOP if possible */
-   {                                       /* was off; 0%; deadtime did not allow it to rise before */
-
-      /*sint32 TOP_earliest_delayed_rising_event_CNTS */    /* COULD BE LOCAL */
-      X->TOP_earliest_delayed_rising_event_CNTS=(invA_pwm_DEADTIME_CNTS - X->BOT_falling_2_end_CNTS); /* earliest rising of TOP due to deadtime */
-
-      /*(invA_pwm_MIN_OFFTIME_CNTS - X->TOP_falling_2_end_CNTS) */              /* earliest rising of TOP due to minimum off time    *not relevant */
-      /* could only happen with asynchronous emergency turn off */
-      if(X->TOP_earliest_delayed_rising_event_CNTS < 2L) /*GTMBUG*/                                                                            /*else:<1 */
-      {
-         X->TOP_earliest_delayed_rising_event_CNTS=2L; /*GTMBUG*/                                                                            /*else:=1 */
-      }
-
-      if((X->TOP_demanded_falling_edge_at_CNTS - X->TOP_earliest_delayed_rising_event_CNTS) >= invA_pwm_MIN_ONTIME_CNTS)    /* invA_pwm_MIN_ONTIME_CNTS must not be zero */
-      {
-         /* there is time to set TOP high and make it low again in this semi-period */
-         (X->TOP_SET->U)=(uint32)X->TOP_earliest_delayed_rising_event_CNTS;
-         X->TOP_falling_edge_at_CNTS=X->TOP_demanded_falling_edge_at_CNTS;
-      }
-      else
-      {
-         /* setting TOP high would cause a pulse that is to small, so it will be suppressed */
-         (X->TOP_SET->U)=0xFFFFu;
-         X->TOP_falling_edge_at_CNTS=X->TOP_demanded_falling_edge_at_CNTS; /* not really necessary since it is low anyway, there is no TOP falling edge!! */
-      }
-   }
-   else    /* TOP is high at beginning, needs to go down */
-   {
-      (X->TOP_SET->U)=0xFFFFu;    /* no setting */
-
-      /*sint32 TOP_earliest_falling_event_CNTS */   /* COULD BE LOCAL */
-      X->TOP_earliest_falling_event_CNTS=invA_pwm_MIN_ONTIME_CNTS - X->TOP_rising_2_end_CNTS;
-
-      /* if positive and greater than demanded falling edge then TOP falling edge must be delayed by that value */
-      /* remark: demanded TOP falling edge is always >=2*/   /*GTMBUG*/  /*else:>=1 */
-      if(X->TOP_earliest_falling_event_CNTS > X->TOP_demanded_falling_edge_at_CNTS)   /* sorry, will have to delay the falling edge!! */
-      {
-         X->TOP_falling_edge_at_CNTS=X->TOP_earliest_falling_event_CNTS; /* falls where allowed due to minimum pulse width */
-      }
-      else
-      {
-         X->TOP_falling_edge_at_CNTS=X->TOP_demanded_falling_edge_at_CNTS; /* falls where desired */
-      }
-   }
-   (X->TOP_RST->U)=(uint32)X->TOP_falling_edge_at_CNTS;      /* program the TOP reset timer */
-
-   /* take care of the BOT signal */
-   /* generally  it will only rise at some point, or never rise if 100% requested */
-   /* therefore one exception: if the semi-period before was   0% it will have to fall first before it can rise, unless   0% is being requested again */
-   
-   /* the falling edge of TOP, as any falling edge is in principle not delayed */
-   /* so adding to it one DEADTIME will lead to the demanded rising edge of BOT */
-   /* in the cases where the falling edge of TOP was delayed, adding one DEADTIME will lead to the proportionally delayed rising edge of BOT */
-   /* this is in most cases equal to the earliest possible rising event */
-   
-   /* so it\'s safe to use always the set point of BOT being the falling edge of TOP + DEADTIME as result */
-
-   /*sint32 BOT_demanded_rising_edge_at_CNTS;*/  /* COULD BE LOCAL */
-
-   X->BOT_demanded_rising_edge_at_CNTS=X->on_width_CNTS_2nd + invA_pwm_DEADTIME_CNTS + invA_pwm_SwitchOnDelayFaultInjection_CNTS;    /* requested BOT turn on with delay */
-                                                                                         /* if the duty request is too big or 100% than */
-                                                                                         /* the requested rising edge will never be reached, */
-                                                                                         /* and it will be out of this half */
-   if(X->BOT_demanded_rising_edge_at_CNTS < 2) /*GTMBUG*/      /*else:<1 */
-   {
-      X->BOT_demanded_rising_edge_at_CNTS=2; /*GTMBUG*/       /*else:=1 */
-   }
-
-   /*sint32 BOT_earliest_rising_event_CNTS; */   /* COULD BE LOCAL */
-
-   if(X->BOT_state_at_end_of_1st == 0U)        /* BOT started low, prior: normal, 100% or off */
-   {
-      (X->BOT_RST->U)=0xFFFFu;        /* no reset of BOT */
-
-      /* remark: TOP falling edge is always >=2*/   /*GTMBUG*/  /*else:>=1 */
-      deadtime_delay=(X->TOP_falling_edge_at_CNTS + invA_pwm_DEADTIME_CNTS);
-      minofftime_delay=(invA_pwm_MIN_OFFTIME_CNTS - X->BOT_falling_2_end_CNTS);
-      if(deadtime_delay > minofftime_delay)
-      {
-         X->BOT_earliest_rising_event_CNTS=deadtime_delay;     /* earliest rising of BOT one deadtime after the just calculated TOP falling edge */
-      }
-      else
-      {
-         X->BOT_earliest_rising_event_CNTS=minofftime_delay;  /* earliest rising of BOT due to minimum off time */
-                                                              /* this will only become true if the minimum pulse width is bigger than one deadtime */
-      }
-   }
-   else    /* started high, prior was   0% */
-   {
-      if(X->on_width_CNTS_2nd > 0L)                                                               /* BOT must go immediately low when exiting 0% */
-      {
-         (X->BOT_RST->U)=2u; /*GTMBUG*/                                                               /*else:=1 */
-
-        deadtime_delay=(X->TOP_falling_edge_at_CNTS + invA_pwm_DEADTIME_CNTS);
-        minofftime_delay=(2 + invA_pwm_MIN_OFFTIME_CNTS); /*GTMBUG*/                                                               /*else:1+ */
-         if(deadtime_delay > minofftime_delay)
-         {
-            X->BOT_earliest_rising_event_CNTS=deadtime_delay;    /* this is due deadtime, since TOP meanwhile jumped around */
-         }
-         else
-         {
-            X->BOT_earliest_rising_event_CNTS=minofftime_delay;  /* this is due to going low, minimum pulse condition */
-         }
-      }
-      else    /* still 0% request */
-      {
-         X->BOT_earliest_rising_event_CNTS=2; /*GTMBUG*/    /*else:1  */     /* if it started high there is no restriction on going (staying) high */
-
-         (X->BOT_RST->U)=0xFFFFu;        /* no reset of BOT */
-      }
-   }
-
-   /*if(INVA_PHASE_UVW_SWITCH.B1.phaseX_off[X->phase_ID] == 1U) */
-   if(0U == PwmSpMuxEnaPha[X->phase_ID])
-   {
-      (X->BOT_RST->U)=2u; /*GTMBUG*/        /*else:1 */  /* turn off the phase as soon as possible-> BOT going low (falling edge is not delayed) */
-      X->BOT_demanded_rising_edge_at_CNTS=0xFFFFL;  /* BOT will not go high */
-   }
-
-   if(X->BOT_earliest_rising_event_CNTS > X->BOT_demanded_rising_edge_at_CNTS)
-   {
-      X->BOT_rising_edge_at_CNTS=X->BOT_earliest_rising_event_CNTS;     /* extra delay situation */
-                                                                        /* may be out of the semi-period */
-   }
-   else
-   {
-      X->BOT_rising_edge_at_CNTS=X->BOT_demanded_rising_edge_at_CNTS;   /* the demanded is ok */
-      /* maybe out of the semi-period */
-   }
-
-   (X->BOT_SET->U)=(uint32)X->BOT_rising_edge_at_CNTS; /* program the BOT set timer */
-
-   /* compute distances and states */
-
-   if(X->BOT_rising_edge_at_CNTS > invA_pwm_HALF_PERIOD_CNTS)
-   {
-      X->BOT_rising_2_end_CNTS=0L;      /* no negative distance, zero saturation: this case did not rise (= is low) */
-      X->BOT_state_at_end_of_2nd=0U;    /* state of BOT is low at the end of 2nd */
-   }
-   else
-   {
-      X->BOT_rising_2_end_CNTS=invA_pwm_HALF_PERIOD_CNTS - X->BOT_rising_edge_at_CNTS;    /* if max: was high all the time (= is high) */
-      /* if value>=0: delta from the edge to the end of the semi-period */
-      X->BOT_state_at_end_of_2nd=1U;                                                    /* state of BOT is high at the end of 2nd */
-   }
-
-   if(X->TOP_falling_edge_at_CNTS > invA_pwm_HALF_PERIOD_CNTS)
-   {
-      X->TOP_falling_2_end_CNTS=0L;     /* no negative distance, zero saturation: this case did not fall (= is high) */
-      X->TOP_state_at_end_of_2nd=1U;    /* state of TOP is high at the end of 2nd */
-   }
-   else
-   {
-      X->TOP_falling_2_end_CNTS=invA_pwm_HALF_PERIOD_CNTS - X->TOP_falling_edge_at_CNTS;  /* if max: was low all the time (= is low) */
-      /* if value>=0: delta from the edge to the end of the semi-period */
-      X->TOP_state_at_end_of_2nd=0U;                                                    /* state of TOP is low at the end of 1st */
-   }
-
-#ifndef SERIES_PRODUCTION
-   if((Pwmfault_injection_Phase==TRUE)&&(DrvCtrlSimnPwmFltInjEna==TRUE))
-   {
-      if(DrvCtrlSimnPwmSwtOffTopPhaU==TRUE)
-      {
-         /*Top-SwitchOff */
-         (X->TOP_SET->U)=0xFFFFu; /* program the TOP set timer*/
-         (X->TOP_RST->U)=2u;
-      }
-      if(DrvCtrlSimnPwmSwtOffBotPhaU==TRUE)
-      {
-         /*Bop-SwitchOff */
-         (X->BOT_SET->U)=0xFFFFu; /* program the Bot set timer*/
-         (X->BOT_RST->U)=2u;
-      }
-   }
-#endif
-
-   return;
-}
-
-/* update of the first half of PWM pulse */
-static inline
-void invA_pwm_Set_Next_1st(void)
-{
-   sint32 VADC_sample_time;
-   /*ATOM0_7 will generate the DSADC start integration signal */
-   /*                     VADC sample trigger */
-   GTM_ATOM0_CH7_SR0.U=(((uint32)invA_pwm_HALF_PERIOD_CNTS - (uint32)invA_dsadc_current_sample_PRETRIGGER_CNTS) + ((uint32)invA_pwm_DEADTIME_CNTS / 2u));  /* SET EDGE of SOUR (with SL=1)*/
-   /*todo: if invA_dsadc_current_sample_PRETRIGGER is to small the SR0 value may get >invA_pwm_HALF_PERIOD_CNTS -> no signal!! */
-
-   VADC_sample_time= (invA_pwm_DEADTIME_CNTS / 2) - (sint32) invA_vadc_current_sample_PRETRIGGER_CNTS;
-      if (VADC_sample_time>0)
-      {
-         if (VADC_sample_time==1)
-         {
-            VADC_sample_time=2;                  /* correct GTM bug */
-         }
-         GTM_ATOM0_CH7_SR1.U= (uint32)VADC_sample_time;                         /* RESET EDGE of SOUR (with SL=1) */
-      }
-      else
-      {
-         GTM_ATOM0_CH7_SR1.U= ((uint32)invA_pwm_HALF_PERIOD_CNTS+(uint32)VADC_sample_time);    /* RESET EDGE of SOUR (with SL=1) */
-      }                                                        /* no reset :  24 bit compare for the RESET EDGE of SOUR (with SL=1) */
-
-   invA_pwm_Set_Next_PhaseX_1st(&invA_phaseU,TRUE);
-   invA_pwm_Set_Next_PhaseX_1st(&invA_phaseV,FALSE);
-   invA_pwm_Set_Next_PhaseX_1st(&invA_phaseW,FALSE);
-
-   return;
-} /* END of invA_pwm_Set_Next_1st */
-
-/* update of the second half of PWM pulse */
-static inline
-void invA_pwm_Set_Next_2nd(void)
-{
-   sint32 VADC_sample_time;
-   /*ATOM0_7 will generate the DSADC start integration signal */
-   /*                     VADC sample trigger */
-
-   GTM_ATOM0_CH7_SR0.U=(uint32)(((uint32)invA_pwm_HALF_PERIOD_CNTS - (uint32)invA_dsadc_current_sample_PRETRIGGER_CNTS) + ((uint32)invA_pwm_DEADTIME_CNTS / 2u)); /* SET EDGE of SOUR (with SL=1)*/
-   /*todo: if invA_dsadc_current_sample_PRETRIGGER is to small the SR0 value may get >invA_pwm_HALF_PERIOD_CNTS -> no signal!! */
-
-   VADC_sample_time = (invA_pwm_DEADTIME_CNTS / 2) - (sint32) invA_vadc_current_sample_PRETRIGGER_CNTS;
-   if (VADC_sample_time>0)
-   {
-      if (VADC_sample_time==1)
-      {
-         VADC_sample_time=2;                  /* correct GTM bug */
-      }
-      GTM_ATOM0_CH7_SR1.U= (uint32)VADC_sample_time;                         /* RESET EDGE of SOUR (with SL=1) */
-   }
-   else
-   {
-      GTM_ATOM0_CH7_SR1.U= ((uint32)invA_pwm_HALF_PERIOD_CNTS+(uint32)VADC_sample_time);    /* RESET EDGE of SOUR (with SL=1) */
-   }
-
-   invA_pwm_Set_Next_PhaseX_2nd(&invA_phaseU,TRUE);
-   invA_pwm_Set_Next_PhaseX_2nd(&invA_phaseV,FALSE);
-   invA_pwm_Set_Next_PhaseX_2nd(&invA_phaseW,FALSE);
-
-   return;
-} /* END of invA_pwm_Set_Next_2nd */
-#endif
-
-#if 0  /* 100kw */
-/* update PWM */
-void invA_pwm_Set_Next(void)
-{
-
-   /* set up new PWM frequency */
-   invA_pwm_NewPWM_Freq();
-
-   /* in der fallenden Flanke wird die Frequenz
-    * und der Wert fuer die naechste steigende Flanke gesetzt */
-   if (PWM_HALF_FALLING == DrvCtrlSdlPwmHalfAct)
-   {
-      invA_pwm_Set_Next_1st();
-   }
-   else /* PWM3PHA_PWMHALF_FALLING == Pwm3PhaPwmHalf */
-   {
-      invA_pwm_Set_Next_2nd();
-   }
-
-   __dsync();
-   return;
-}
-#endif
-
-#define PWM3PHA_STOP_SEC_CODE_FAST
-#include "MemMap.h"
-
-/*================== [closure] ==============================================*/
-/*! \\misra Warning No C2004:19.6 "Using \'#undef\' for master c-file"          */
-#undef INVA_PWM_ /* PRQA S 0841 */
-/*! @} doxygen end of group definition */
-/* ********************************************************************** */
-/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2018              */
-/* All Rights Reserved. Confidential                                      */
-/* ********************************************************************** */
-/*==================[end of file]============================================*/
diff --git a/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/test/rtrt/package/Pwm3Pha.ptu b/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/test/rtrt/package/Pwm3Pha.ptu
deleted file mode 100644
index 3d1184e0e..000000000
--- a/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/test/rtrt/package/Pwm3Pha.ptu
+++ /dev/null
@@ -1,1098 +0,0 @@
---********************************************************************************
--- tool : C Source Code Parser VERSION 8.0.0.5.340.013
---*                                                                              *
---%c attolstart "A:\\src\\fw_cu\\Components\\Inv\\ModSwtSig\\Pwm3Pha\\src\\Pwm3Pha.c" "A:\\test\\50_L5_Units_Parts\\10_SWUT\\110_DRCO\\30_packages\\Pwm3Pha\\Pwm3Pha.ptu" /INSERT /INCL="A:/test/50_L5_Units_Parts/10_SWUT/110_DRCO/10_configurations/include,/src/fw_cu/Components/Cmn/Com/C2cCom/include,/src/fw_cu/Components/Cmn/Initialize/CrtInit/include,/src/fw_cu/Components/Cmn/Shared/MemMap/include,/src/fw_cu/Components/Cmn/Shared/SysDef/include,/src/fw_cu/Components/Extern/AutoCore/eclipse/plugins/Base_TS_TxDxM5I0R0/include,/src/fw_cu/Components/Extern/AutoCore/eclipse/plugins/Os_TS_T16D15M6I0R0/include,/src/fw_cu/Components/Extern/AutoCore/eclipse/plugins/Os_TS_T16D15M6I0R0/include/TRICORE,/src/fw_cu/Components/Extern/AutoCore/eclipse/plugins/Os_TS_T16D15M6I0R0/include/TRICORE/TC277,/src/fw_cu/Components/Extern/AutoCore/eclipse/plugins/Os_TS_T16D15M6I0R0/include/TRICORE/TC27X,/src/fw_cu/Components/Extern/AutoCore/eclipse/plugins/Platforms_TS_T16D15M2I0R0/include/TRICORE,/src/fw_cu/Components/Extern/AutoCore/eclipse/plugins/Platforms_TS_T16D15M2I0R0/include/TRICORE/tasking,/src/fw_cu/Components/Extern/AutoCore/eclipse/plugins/Resource_TS_T16D15M1I0R0/include,/src/fw_cu/Components/Extern/AutoCore/eclipse/plugins/Rte_TS_TxDxM6I2R0/include,/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/include,/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/src,/src/fw_cu/Components/Inv/ValMeasAndProc/DSADC/include,/src/fw_cu/workspace/Tresos/nextgen/output/generated/include,A:/test/50_L5_Units_Parts/10_SWUT/110_DRCO/10_configurations/include,/src/fw_cu/Components/Cmn/Com/C2cCom/include,/src/fw_cu/Components/Cmn/Initialize/CrtInit/include,/src/fw_cu/Components/Cmn/Shared/MemMap/include,/src/fw_cu/Components/Cmn/Shared/SysDef/include,/src/fw_cu/Components/Extern/AutoCore/eclipse/plugins/Base_TS_TxDxM5I0R0/include,/src/fw_cu/Components/Extern/AutoCore/eclipse/plugins/Os_TS_T16D15M6I0R0/include,/src/fw_cu/Components/Extern/AutoCore/eclipse/plugins/Os_TS_T16D15M6I0R0/include/TRICORE,/src/fw_cu/Components/Extern/AutoCore/eclipse/plugins/Os_TS_T16D15M6I0R0/include/TRICORE/TC277,/src/fw_cu/Components/Extern/AutoCore/eclipse/plugins/Os_TS_T16D15M6I0R0/include/TRICORE/TC27X,/src/fw_cu/Components/Extern/AutoCore/eclipse/plugins/Platforms_TS_T16D15M2I0R0/include/TRICORE,/src/fw_cu/Components/Extern/AutoCore/eclipse/plugins/Platforms_TS_T16D15M2I0R0/include/TRICORE/tasking,/src/fw_cu/Components/Extern/AutoCore/eclipse/plugins/Resource_TS_T16D15M1I0R0/include,/src/fw_cu/Components/Extern/AutoCore/eclipse/plugins/Rte_TS_TxDxM6I2R0/include,/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/include,/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/src,/src/fw_cu/Components/Inv/ValMeasAndProc/DSADC/include,/src/fw_cu/workspace/Tresos/nextgen/output/generated/include" /DEFINE="_TASKING_C_TRICORE_,TS_ARCH_FAMILY=TS_TRICORE,TS_ARCH_DERIVATE=TS_TC277,OS_TOOL=OS_tasking,OS_ARCH=OS_TRICORE,OS_CPU=OS_TC277,OS_MEMMAP=0,OS_DEVELOPMENT_SANITY_CHECKS=0,OS_USE_CLZ_QUEUE_ALGORITHM=1,OS_USE_TRACE=0,OS_KERNEL_TYPE=OS_SYSTEM_CALL,OS_MEMORY_MODEL=OS_MM_DEFAULT,COM_DONT_PROVIDE_LEGACY_SYMBOLIC_NAMES,TMM_MEASURE_GLOBAL=1,__PROC_TC27X__,__CPU_TC27X__,USE_TASKING_INIT=1,OS_RELEASE_SUFFIX=OS_AS403,UNIT_TESTING,_ATL_PREPRO_ONLY" /STD_DEFINE="C:\\Tools\\IBM\\TESTRE~1\\targets\\CWINAU~1\\ana\\atus_c.def"
---*                                                                              *
--- File : A:\\test\\50_L5_Units_Parts\\10_SWUT\\110_DRCO\\30_packages\\Pwm3Pha\\Pwm3Pha.ptu
---*                                                                              *
---%d DATE : Wed Jan 09 09:31:35 2019
---*                                                                              *
---********************************************************************************
--- ---------------------------------------------------------------------- --
--- Ptu File: Pwm3Pha.ptu --
--- --
--- Project: VW-MEB Software --
--- --
--- Major SW Revision: 01--
--- Minor SW Revision: 01--
--- --
--- TriCore --
--- --
--- Department: VSeA
---
--- First author: Roberts,  Indirakanth--
--- --
--- ---------------------------------------------------------------------- --
--- Copyright (C) Valeo Siemens eAutomotive GmbH 2019 --
--- All Rights Reserved. Confidential --
--- ---------------------------------------------------------------------- --
-HEADER Pwm3Pha, , 
-
---------------------------------------------------------------------------------
---
--- INCLUDED FILE DECLARATIONS (-INCLUDED OPTION)
---
---------------------------------------------------------------------------------
-
-##include "\\src\\fw_cu\\Components\\Inv\\ModSwtSig\\Pwm3Pha\\src\\Pwm3Pha.c"
-
---------------------------------------------------------------------------------
-
-BEGIN
-
---------------------------------------------------------------------------------
---
--- STUB DECLARATIONS OF THE TESTED OR INTEGRATED UNITS
---
---------------------------------------------------------------------------------
-
-    #PwmHalf Pwm3PhaPwmHalfAct[1]; /* /src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/include/Pwm3Pha_data.h */
-    #PwmMode DrvCtrlSimnPwmModReq; /* /src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/include/Pwm3Pha_data.h */
-    #boolean DrvCtrlSimnPwmModEna; /* /src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/include/Pwm3Pha_data.h */
-    #float32 SysPrmPwmFrqDblUpd; /* /src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/include/Pwm3Pha_data.h */
-    #float32 SysPrmPwmFrqMin; /* /src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/include/Pwm3Pha_data.h */
-    #float32 SysPrmPwmFrqMax; /* /src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/include/Pwm3Pha_data.h */
-  --  #float32 SyncPwmCalcnPwmFreq; /* /src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/include/Pwm3Pha_data.h */
-    #DrvCtrlC2cDataType DrvCtrlC2cData; /* /src/fw_cu/Components/Cmn/Com/C2cCom/include/C2cComDrvCtrlData.h */
-    #float32 Pwm3PhaCycTiNext[1]; /* /src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/include/Pwm3Pha_data.h */
-    #float32 Pwm3PhaCycTiAct[1]; /* /src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/include/Pwm3Pha_data.h */
-    #float32 SysPrmPwmFrqSngUpd; /* /src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/include/Pwm3Pha_data.h */
-    #float32 Pwm3PhaPwmFrqAct[1]; /* /src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/include/Pwm3Pha_data.h */
-    #PwmMode Pwm3PhaPwmModAct[1]; /* /src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/include/Pwm3Pha_data.h */
-    #float32 Pwm3PhaAscDutyCyc; /* /src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/include/Pwm3Pha_data.h */
-    #boolean DrvCtrlSeqrAscReq; /* /src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/include/Pwm3Pha_data.h */
-    #uint8 SysPrmDrvgDirRvs; /* /src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/include/Pwm3Pha_data.h */
-    #float32 Mod3PhaDutyCycPha[1][3]; /* /src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/include/Pwm3Pha_data.h */
-    #boolean DrvCtrlSeqrSoftAscReq; /* /src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/include/Pwm3Pha_data.h */
-    #boolean DrvCtrlSeqrPlsEnaReq; /* /src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/include/Pwm3Pha_data.h */
-    #float32 DrvCtrlSimnPwm3PhaDutyCycPha[1][3]; /* /src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/include/Pwm3Pha_data.h */
-    #float32 Pwm3PhaMuxDutyCycPha[1][3]; /* /src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/include/Pwm3Pha_data.h */
-    #boolean DrvCtrlSimnPwm3PhaEnaPha[1][3]; /* /src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/include/Pwm3Pha_data.h */
-    #boolean Pwm3PhaMuxEnaPha[1][3]; /* /src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/include/Pwm3Pha_data.h */
-    #uint8 Pwm3PhaMuxSel; /* /src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/include/Pwm3Pha_data.h */
-    #boolean DrvCtrlSimnPwm3PhaSimnEna; /* /src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/include/Pwm3Pha_data.h */
-    #float32 DrvCtrlSimnPwmFrqReq;
-    #float32 IvtrPwmFrqDrtgVal;
-    #boolean  DrvCtrlSimnPwmFrqEna;
-    #float32 SysPrmPwmFrqDrvResv;
-    #uint8 rtid2;
-    #uint8 rtid3;
-DEFINE STUB Pwm3Pha_c
-    #void invA_pwm_Set_Next(void); /* /src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/include/invA_pwm.h */
-    #void invA_pwm_Init(void); /* /src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/include/invA_pwm.h */
-END DEFINE
-##undef SYSCON_FTR_AC_ISO_DETN
-##define SYSCON_FTR_AC_ISO_DETN 1
---------------------------------------------------------------------------------
---
--- ENVIRONMENTS DECLARATIONS
---
---------------------------------------------------------------------------------
-
---------------------------------------------------------------------------------
--- INCLUDED FILE ENVIRONNEMENT
---------------------------------------------------------------------------------
-
--- Environment of the file A:\\src\\fw_cu\\Components\\Inv\\ModSwtSig\\Pwm3Pha\\src\\Pwm3Pha.c
-ENVIRONMENT ENV_Pwm3Pha_c
---  ARRAY Pwm3PhaPwmFrqNext,\t\tinit = { others => 0.0 },\t\tev = init
---  VAR Pwm3PhaPwmModeNext,\t\tinit = PWM3PHA_PWMMODE_SINGLEUPDATE,\t\tev = init
---  VAR Pwm3PhaPwmModeSet,\t\tinit = PWM3PHA_PWMMODE_SINGLEUPDATE,\t\tev = init
-END ENVIRONMENT -- ENV_Pwm3Pha_c
-USE ENV_Pwm3Pha_c
-
---------------------------------------------------------------------------------
---
--- SERVICES DECLARATIONS
---
---------------------------------------------------------------------------------
-
---------------------------------------------------------------------------------
--- Declaration of the service Pwm3Pha_NextPwmHalfA
---------------------------------------------------------------------------------
-SERVICE Pwm3Pha_NextPwmHalfA
-SERVICE_TYPE extern
-\tTEST TC-GLIB-61261-Pwm3Pha_NextPwmHalfA- 001
-    \tFAMILY nominal
-\t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT. Author: Tibor Balogh
-      \t\t COMMENT. Date: 2019-09-30
-\t\tCOMMENT. This function checks the switching rising anf falling pwm half
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. List of Requirements  : GLIB-61261
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Tese Case ID : TC-GLIB-61261-Pwm3Pha_NextPwmHalfA- 001
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Testcase Description :  
-\t\tCOMMENT   \t\t\t\t\tSet    Pwm3PhaPwmHalfAct[SYSDEF_PHA_SET_A] to the value of Pwm3PhaPwmHalfAct[SYSDEF_PHA_SET_A] + 1) & 0x1 \t
-  \t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT  Test type : Normal
-\t\tCOMMENT. *****************************************************************************************************************************************************
-\t\t
-\t\tELEMENT
-\t\t\tVAR Pwm3PhaPwmHalfAct[SYSDEF_PHA_SET_A] ,    \t\t\t\tinit=0,   \t\tev =  1\t\t\t\t\t\t\t--Pwm3PhaPwmHalfAct[SYSDEF_PHA_SET_A] = (Pwm3PhaPwmHalfAct[SYSDEF_PHA_SET_A] + 1) & 0x1
-             \t\t #Pwm3Pha_NextPwmHalfA();
-      \t\t END ELEMENT
-\tEND TEST -- TEST TC-GLIB-61261-Pwm3Pha_NextPwmHalfA- 001
-END SERVICE -- Pwm3Pha_NextPwmHalfA
-
-
---------------------------------------------------------------------------------
--- Declaration of the service Pwm3Pha_NextPwmFrq
---------------------------------------------------------------------------------
-SERVICE Pwm3Pha_NextPwmFrq
-SERVICE_TYPE extern
-\t# float32 NxtCycleTimeFact =0 ;
- \t #PwmMode PwmModeNext_Temp=0;
-   \t#float32 PwmFrqNext_Temp=0;
-\tTEST TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 001
-      \t FAMILY nominal
-\t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT. Author:Tibor Balogh
-      \t  \tCOMMENT. Date: 2019-09-30
-\t\tCOMMENT.  This function checks the calculation of the next pwm frequency and timing
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. List of Requirements  : GLIB-61259
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Tese Case ID : TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 001
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Testcase Description :  
-\t\tCOMMENT   \t\t\t\t\tSet Pwm3PhaPwmModeSet to the value of Pwm3PhaPwmModeNext
-\t\tCOMMENT \t\t\t\t\tSet Pwm3PhaPwmFrqAct[SYSDEF_PHA_SET_A] to the value of Pwm3PhaPwmFrqNext[SYSDEF_PHA_SET_A
-\t\tCOMMENT \t\t\t\t\tSet    Pwm3PhaCycTiActSYSDEF_PHA_SET_A] to the value of Pwm3PhaCycTiNext[SYSDEF_PHA_SET_A] 
-\t\tCOMMENT\t\t\t\t       Set PwmFrqNext_Temp to the value of IvtrPwmFrqDrtgVal
-  \t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT  Test type : Normal
-\t\tCOMMENT. *****************************************************************************************************************************************************
-\t\tELEMENT
-\t\t\t VAR PwmModeNext_Temp,\t\t\t\t\t\t\t\t\t\tinit =0,\t\t\t\t\t\tev = 0
-\t\t\t VAR Pwm3PhaPwmModeNext ,\t\t\t\t\t\t\t\t\t init=0,             \t\t\t\tev=init\t\t\t\t\t\t\t-- Pwm3PhaPwmModeSet = Pwm3PhaPwmModeNext
-     \t \t\t VAR Pwm3PhaPwmModeSet ,\t\t\t\t\t\t\t   \t  \t\t init=1,\t\t\t\t\t\tev= 0
- \t\t\tVAR PwmFrqNext_Temp,\t\t\t\t\t\t\t\t     \t\t\t init=1.0f,\t\t\t\t\tev = init
-\t\t\tVAR SysPrmPwmFrqMax,\t\t\t\t\t\t\t\t\t\t\t init =10102.0f,\t\t\t\tev = init
-\t\t\tVAR NxtCycleTimeFact,\t\t\t\t\t\t\t\t\t\t\t init = 1.0f,\t\t\t\t\tev = init
-\t \t\t VAR Pwm3PhaPwmFrqNext[SYSDEF_PHA_SET_A],  \t\t\t init=1.1f,\t\t\t\t\tev =400.0f\t\t\t\t\t\t--Pwm3PhaPwmFrqAct[SYSDEF_PHA_SET_A] = Pwm3PhaPwmFrqNext[SYSDEF_PHA_SET_A]
-   \t      \t\t VAR Pwm3PhaPwmFrqAct[SYSDEF_PHA_SET_A], \t\t      \t\t init= 1000.0f,\t\t\t\tev= 1.1f
-\t \t \t VAR Pwm3PhaCycTiNext[SYSDEF_PHA_SET_A], \t\t     \t\t init=2.5e-005,                  \tev=2.5e-3\t\t\t\t\t\t--Pwm3PhaCycTiAct[SYSDEF_PHA_SET_A] = Pwm3PhaCycTiNext[SYSDEF_PHA_SET_A]
-   \t\t \t VAR Pwm3PhaCycTiAct[SYSDEF_PHA_SET_A],                  \t\t init=1000.0f,\t\t\t\tev=2.5e-005
-\t     \t \tVAR IvtrPwmFrqDrtgVal,\t\t\t\t\t\t\t\t\t\t\t init=400.0f,\t\t\t\t\tev=init\t\t\t\t\t\t\t--Verifying  the actually frequency setpoint
-\t \t\t
-\t \t\t#Pwm3Pha_NextPwmFrq();
-        \tEND ELEMENT
-\t END TEST --  TEST TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 001
-
-\tTEST TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 002
-       FAMILY nominal
-\t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT. Author:Tibor Balogh
-        \tCOMMENT. Date: 2019-09-30
-\t\tCOMMENT.  This function checks the calculation of the next pwm frequency and timing
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. List of Requirements  : GLIB-61259
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Tese Case ID : TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 002
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Testcase Description :  
-\t\tCOMMENT   \tChecking if  part,
-\t\tCOMMENT \t\t\t\t\t    If DrvCtrlSimnPwmFrqEna is equal to true
-\t\tCOMMENT \t\t\t\t\t    Set PwmFrqNext_Temp to the value of DrvCtrlSimnPwmFrqReq
-  \t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT  Test type : Normal
-\t\tCOMMENT. *****************************************************************************************************************************************************
-\t\tELEMENT
-\t \t \t\tVAR DrvCtrlSimnPwmFrqEna,\t\t\t\t\t\t\t\tinit =TRUE,\t\t\t\tev = init\t\t\t\t\t\t-- if(FALSE != DrvCtrlSimnPwmFrqEna)
-\t\t\t\tVAR DrvCtrlSimnPwmFrqReq,\t\t\t\t\t\t\t\tinit = 500.0f,\t\t\t\tev = init
-\t\t\t       VAR PwmFrqNext_Temp,\t\t\t\t\t\t\t\t\tinit = 0.0f,\t\t\t\t\tev = init\t\t\t\t\t\t\t-- PwmFrqNext_Temp = DrvCtrlSimnPwmFrqReq
-\t\t\t\t#Pwm3Pha_NextPwmFrq();
-       \t END ELEMENT
-\t END TEST --  TEST TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 002
-
-\tTEST TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 003
-       FAMILY nominal
-\t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT. Author:Tibor Balogh
-       \t COMMENT. Date: 2019-09-30
-\t\tCOMMENT.  This function checks the calculation of the next pwm frequency and timing
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. List of Requirements  : GLIB-61259
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Tese Case ID : TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 003
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Testcase Description :  
-\t\tCOMMENT   \tChecking else  part,
-\t\tCOMMENT \t\t\t\t\t    If DrvCtrlSimnPwmFrqEna is equal to false
-\t\tCOMMENT \t\t\t\t\t    Set PwmFrqNext_Temp to the value of DrvCtrlSimnPwmFrqReq
-  \t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT  Test type : Robustness
-\t\tCOMMENT. *****************************************************************************************************************************************************
-\t\tELEMENT
-\t \t \t\tVAR DrvCtrlSimnPwmFrqEna,\t\t\t\t\t\t\t\tinit =FALSE,\t\t\tev = init\t\t\t\t\t\t\t-- if(FALSE = DrvCtrlSimnPwmFrqEna)
-\t\t\t
-\t\t\t\t#Pwm3Pha_NextPwmFrq();
-      \t      END ELEMENT
-\t END TEST --  TEST TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 003
-
-\tTEST TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 004
-\tFAMILY nominal
-\t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT. Author: Tibor Balogh
-       \tCOMMENT. Date: 2019-09-30
-\t\tCOMMENT.  This function checks the calculation of the next pwm frequency and timing
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. List of Requirements  : GLIB-61259
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Tese Case ID : TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 004
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Testcase Description :  
-\t\tCOMMENT   \t\t\t\t\tSet PwmFrqNext_Temp to the value of IvtrPwmFrqDrtgVal
-\t\tCOMMENT \t\t\t\t\tIf PwmFrqNext_Temp is greater than SysPrmPwmFrqMax + PWM_FRQ_HEADROOM
-\t\tCOMMENT \t\t\t\t\tSet PwmFrqNext_Temp to the value of SysPrmPwmFrqMax + PWM_FRQ_HEADROOM
-  \t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT  Test type : Normal
-\t\tCOMMENT. *****************************************************************************************************************************************************
-\t\tELEMENT
-\t\t\tVAR IvtrPwmFrqDrtgVal,\t\t\t\t                        \t\t    init = 13000.0f,\t\t\t\tev = init\t\t\t\t\t\t\t\t--PwmFrqNext_Temp > (SysPrmPwmFrqMax + PWM_FRQ_HEADROOM)
-\t\t\tVAR SysPrmPwmFrqMax,\t\t \t\t\t\t                   \t    init = 10102.0f,\t\t\t\tev = init
-\t\tVAR SysPrmPwmFrqDrvResv,\t\tinit =1.0f,\t\tev = init
-
-\t\t \tVAR PwmFrqNext_Temp,\t\t\t\t\t\t                         init =0.0f,\t\t\t\t\tev= init
-  \t\t \t#Pwm3Pha_NextPwmFrq();
-\t\tEND ELEMENT
-\tEND TEST -- TEST  TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 004
-
-\tTEST TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 005
-\tFAMILY nominal
-\t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT. Author: Tibor Balogh
-      \t\t COMMENT. Date: 2019-09-30
-\t\tCOMMENT.  This function checks the calculation of the next pwm frequency and timing
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. List of Requirements  : GLIB-61259
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Tese Case ID : TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 005
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Testcase Description :  
-\t\tCOMMENT   \tChecking elseif  part,Set PwmFrqNext_Temp to the value of IvtrPwmFrqDrtgVal
-\t\tCOMMENT \t\t\t\t\t    If PwmFrqNext_Temp is lesser than SysPrmPwmFrqMin + PWM_FRQ_HEADROOM
-\t\tCOMMENT \t\t\t\t\t    Set PwmFrqNext_Temp to the value of SysPrmPwmFrqMin + PWM_FRQ_HEADROOM 
-  \t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT  Test type : Normal
-\t\tCOMMENT. *****************************************************************************************************************************************************
-\t\tELEMENT
-\t\t\tVAR IvtrPwmFrqDrtgVal,\t\t\t\t\t                  \t\tinit = 300.0f,\t\t\t\t\t\tev = init\t\t\t\t\t\t\t--PwmFrqNext_Temp < (SysPrmPwmFrqMin - PWM_FRQ_HEADROOM)
-\t\t\tVAR SysPrmPwmFrqMin,\t        \t\t\t\t               \tinit = 10102.0f,\t\t\t\t\t\tev = init
-VAR SysPrmPwmFrqDrvResv,\t\tinit =1.0f,\t\tev = init
-
-              \tVAR PwmFrqNext_Temp,\t          \t\t\t\t                     init=0.0f,\t     \t\t\t\t      \t\t ev= init
-\t\t\t #Pwm3Pha_NextPwmFrq();
-\t\tEND ELEMENT
-\tEND TEST --TEST  TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 005
-
-\tTEST TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 006
-\tFAMILY nominal
-\t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT. Author: Tibor Balogh
-     \t\tCOMMENT. Date: 2019-09-30
-\t\tCOMMENT.  This function checks the calculation of the next pwm frequency and timing
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. List of Requirements  : GLIB-61259
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Tese Case ID :TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 006
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Testcase Description :  
-\t\tCOMMENT   Checking else part,Set PwmFrqNext_Temp to the value of IvtrPwmFrqDrtgVal
-\t\tCOMMENT \t\t\t\t\tIf PwmFrqNext_Temp is equal to  SysPrmPwmFrqMax + PWM_FRQ_HEADROOM
-\t\tCOMMENT \t\t\t\t\tthen 
-\t\tCOMMENT\t\t\t\t\tDo Nothing
-  \t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT  Test type : Normal
-\t\tCOMMENT. *****************************************************************************************************************************************************
-\t\tELEMENT
-\t\t\tVAR IvtrPwmFrqDrtgVal,\t\t\t\t\t\t\t\tinit = 0,\t\t\t\t\t\t\tev = init
-             \t\t VAR SysPrmPwmFrqMin,\t                \t\t\t\t\tinit =100.0f,\t\t\t\t\tev = init
-VAR SysPrmPwmFrqDrvResv,\t\tinit =1.0f,\t\tev = init
-
-             \t\t VAR PwmFrqNext_Temp,\t           \t\t\t\t\t\t init=0.0f,\t\t\t\t\t\tev= init
-\t\t\t #Pwm3Pha_NextPwmFrq();
-\t\tEND ELEMENT
-      END TEST--TEST TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 006
-
-\tTEST TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 007
-\tFAMILY nominal
-\t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT. Author: Tibor Balogh
-        \t COMMENT. Date: 2019-09-30
-\t\tCOMMENT.  This function checks the calculation of the next pwm frequency and timing
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. List of Requirements  : GLIB-61259
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Tese Case ID : TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 007
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Testcase Description :  
-\t\tCOMMENT   \t\t\t\t\tSet PwmFrqNext_Temp to the value of IvtrPwmFrqDrtgVal
-\t\tCOMMENT \t\t\t\t\tIf PwmFrqNext_Temp is greater than  SysPrmPwmFrqDblUpd
-\t\tCOMMENT \t\t\t\t\tSet PwmModeNext_Temp to the value of PWM3PHA_PWMMODE_DOUBLE_UPDATE
-  \t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT  Test type : Normal
-\t\tCOMMENT. *****************************************************************************************************************************************************
-\t\tELEMENT
-\t\t\tVAR IvtrPwmFrqDrtgVal,\t\t\t\t\t\t\t\t\tinit = 1000.0f,\t\t\t\t\t\tev = init\t\t\t\t\t\t\t\t--PwmFrqNext_Temp > SysPrmPwmFrqDblUpd
-\t\t\tVAR SysPrmPwmFrqDblUpd,\t\t\t\t\t\t\t\tinit =600.0f,\t\t\t\t\t\tev = init
-\t\t\tVAR PwmModeNext_Temp,\t\t\t\t\t\t\t\tinit =0,\t\t\t\t\t\t\t\tev = init
-\t\t\t #Pwm3Pha_NextPwmFrq();
-\t\tEND ELEMENT
-\tEND TEST--TEST TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 007
-
-\tTEST TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 008
-\tFAMILY nominal
-\t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT. Author: Tibor Balogh
-        \t COMMENT. Date: 2019-09-30
-\t\tCOMMENT.  This function checks thecalculation of the next pwm frequency and timing
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. List of Requirements  : GLIB-61259
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Tese Case ID : TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 008
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Testcase Description :  
-\t\tCOMMENT   checking else part,Set PwmFrqNext_Temp to the value of IvtrPwmFrqDrtgVal
-\t\tCOMMENT \t\t\t\t\tIf PwmFrqNext_Temp is lesser than  SysPrmPwmFrqDblUpd
-\t\tCOMMENT \t\t\t\t\tthen do nothing
-  \t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT  Test type : Robustness
-\t\tCOMMENT. *****************************************************************************************************************************************************
-\t\tELEMENT
-\t\t\tVAR IvtrPwmFrqDrtgVal,\t\t\t\t\t\t\t\t\tinit = 600.0f,\t\t\t\t\tev = init\t\t\t\t\t\t\t\t--PwmFrqNext_Temp <SysPrmPwmFrqDblUpd
-\t\t\tVAR SysPrmPwmFrqDblUpd,\t\t\t\t\t\t\t\tinit =1000.0f,\t\t\t\t\tev = init
-\t\t\tVAR PwmModeNext_Temp,\t\t\t\t\t\t\t\tinit =0,\t\t\t\t\t\t\tev = init
-\t\t \t#Pwm3Pha_NextPwmFrq();
-\t\tEND ELEMENT
-\tEND TEST--TEST TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 008
-\t
-\tTEST TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 009
-\tFAMILY nominal
-\t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT. Author: Tibor Balogh
-       \t COMMENT. Date: 2019-09-30
-\t\tCOMMENT. This function checks the calculation of the next pwm frequency and timing
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. List of Requirements  : GLIB-61259
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Tese Case ID : TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 009
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Testcase Description :  
-\t\tCOMMENT   \t\t\t\t\tIf   DrvCtrlSimnPwmModEna is equal to TRUE
-\t\tCOMMENT \t\t\t\t\tSet PwmModeNext_Tempto the value of DrvCtrlSimnPwmModReq  
-  \t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT  Test type : Normal
-\t\tCOMMENT. *****************************************************************************************************************************************************
-\t\tELEMENT
-\t\t\tVAR DrvCtrlSimnPwmModEna,\t\t\t\t\t\t\t\tinit = TRUE,\t\t\t\tev = init\t\t\t\t\t\t\t\t--FALSE != DrvCtrlSimnPwmModEna
-\t\t\tVAR DrvCtrlSimnPwmModReq,\t\t\t\t\t\t\tinit = 1,\t\t\t\t\t\tev = init
-\t\t\tVAR PwmModeNext_Temp,\t\t\t\t\t\t\t\tinit =1,\t\t\t\t\t\tev = init
-\t\t \t#Pwm3Pha_NextPwmFrq();
-\t\tEND ELEMENT
-\tEND TEST--TEST TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 009
-
-\tTEST TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 010
-\tFAMILY nominal
-\t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT. Author: Tibor Balogh
-       \t COMMENT. Date: 2019-09-30
-\t\tCOMMENT. This function checks the calculation of the next pwm frequency and timing
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. List of Requirements  : GLIB-61259
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Tese Case ID : TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 010
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Testcase Description :  
-\t\tCOMMENT   \t\t\t\t\tIf   DrvCtrlSimnPwmModEna is equal to False
-\t\tCOMMENT \t\t\t\t\tthen else part
-  \t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT  Test type : Robustnes
-\t\tCOMMENT. *****************************************************************************************************************************************************
-\t\tELEMENT
-\t\t\tVAR DrvCtrlSimnPwmModEna,\t\t\t\t\t\t\t\tinit = FALSE,\t\t\t\tev = init\t\t\t\t\t\t\t\t--FALSE = DrvCtrlSimnPwmModEna
-\t\t\t
-\t\t \t#Pwm3Pha_NextPwmFrq();
-\t\tEND ELEMENT
-\tEND TEST--TEST TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 010
-
-\tTEST TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 011
-\tFAMILY nominal
-\t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT. Author: Tibor Balogh
-        \t COMMENT. Date: 2019-09-30
-\t\tCOMMENT.  This function checks the calculation of the next pwm frequency and timing
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. List of Requirements  : GLIB-61259
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Tese Case ID : TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 011
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Testcase Description :  
-\t\tCOMMENT   \t\t\t\t\tSet   Pwm3PhaPwmModeSet to  the value of1
-\t\tCOMMENT \t\t\t\t\tSet PwmModeNext_Temp  to the value of 0
-\t\tCOMMENT \t\t\t\t\tSet Pwm3PhaPwmHalfAct[SYSDEF_PHA_SET_A] to the value of 1
-\t\tCOMMENT\t\t\t\t\tIf (PWM3PHA_PWMMODE_DOUBLEUPDATE == Pwm3PhaPwmModeSet) && (PWM3PHA_PWMMODE_SINGLEUPDATE == PwmModeNext_Temp)  && (PWM3PHA_PWMHALF_FALLING == Pwm3PhaPwmHalfAct[SYSDEF_PHA_SET_A]) is true
-\t\tCOMMENT\t\t\t\t        Set PwmModeNext_Temp to the value of  PWM3PHA_PWMMODE_DOUBLEUPDATE 
-  \t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT  Test type : Normal
-\t\tCOMMENT. *****************************************************************************************************************************************************
-\t\tELEMENT
-\t\t\tVAR    DrvCtrlSimnPwmModEna,\t                                       \t\t\t init = FALSE, \t\t  ev=  init\t\t\t\t\t\t
-\t\t\t VAR    Pwm3PhaPwmModeNext,\t\t\t\t\t\t\t\t\tinit = 1,\t\t\t\t  ev = init
-            \t\t VAR     Pwm3PhaPwmModeSet,\t\t\t\t\t\t\t\t\tinit = 1, \t\t\t  ev=  init
-\t      \t\tVAR    Pwm3PhaPwmHalfAct[SYSDEF_PHA_SET_A],\t\t\t\tinit = 1,\t\t\t\t  ev = init
-\t      \t\t VAR    PwmModeNext_Temp,\t\t\t\t\t\t\t\t\t\tinit = 0,\t\t\t \t  ev= init
-              \t #Pwm3Pha_NextPwmFrq();
-      \t\t END ELEMENT
-\tEND TEST--TEST TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 011
-
-\tTEST TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 012
-\tFAMILY nominal
-\t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT. Author: Tibor Balogh
-       \t COMMENT. Date: 2019-09-30
-\t\tCOMMENT.  This function checks the calculation of the next pwm frequency and timing
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. List of Requirements  : GLIB-61259
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Tese Case ID :TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 012
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Testcase Description :  
-\t\tCOMMENT   \t\t\t\t\t if  PWM3PHA_PWMMODE_DOUBLEUPDATE  is equal to PwmModeNext_Temp
-\t\tCOMMENT \t\t\t\t\tSet NxtCycleTimeFact  to 0.5f
-  \t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT  Test type : Normal
-\t\tCOMMENT. *****************************************************************************************************************************************************
-\t\tELEMENT
-\t\t\t VAR    PwmModeNext_Temp,\t\t\t\t\t\t\t\t\t\tinit = 1, \t\t\t\t\tev= init\t\t\t\t\t\t--PWM3PHA_PWMMODE_DOUBLEUPDATE == PwmModeNext_Temp
-\t\t  \tVAR    NxtCycleTimeFact,\t\t\t\t\t\t\t\t\t\t\tinit= 1.0f,\t\t\t\t\tev= init
-\t\t\t #Pwm3Pha_NextPwmFrq();
-\t\tEND ELEMENT
-\tEND TEST--TEST TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 012
-
-\tTEST TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 013
-\tFAMILY nominal
-\t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT. Author:Tibor Balogh
-     \t\t COMMENT. Date: 2019-09-30
-\t\tCOMMENT.  This function checks the calculation of the next pwm frequency and timing
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. List of Requirements  : GLIB-61259
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Tese Case ID : TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 013
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Testcase Description :  
-\t\tCOMMENT \t\t\t\t\tSet   Pwm3PhaPwmModeNext to the value of PwmModeNext_Temp
-\t\tCOMMENT \t\t\t\t\tSet Pwm3PhaPwmFrqNext[SYSDEF_PHA_SET_A] to the value of  PwmFrqNext_Temp  
-\t\tCOMMENT \t\t\t\t\tSet  Pwm3PhaCycTiNext[SYSDEF_PHA_SET_A] to the value of NxtCycleTimeFact / Pwm3PhaPwmFrqNext[SYSDEF_PHA_SET_A] 
-  \t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT  Test type : Normal
-\t\tCOMMENT. *****************************************************************************************************************************************************
-\t\tELEMENT
-\t\t\t VAR    IvtrPwmFrqDrtgVal,\t\t\t\t\t\t\t\t\t\t\t\tinit = 600.0f,\t\t\t\tev=  init\t\t\t\t\t\t
-\t       \t VAR PwmModeNext_Temp,\t\t\t\t\t\t\t\t\t\t\tinit = 0,\t\t\t\t\t\tev = init
-\t\t  \tVAR Pwm3PhaPwmModeNext ,\t\t\t\t\t\t\t\t\t\tinit= 5,             \t\t\t\tev= 1\t\t\t\t\t\t\t----Pwm3PhaPwmModeNext = PwmModeNext_Temp
-\t\t\tVAR NxtCycleTimeFact,\t\t\t\t\t\t\t\t\t\t\t\tinit = 1.0f,\t\t\t\t\tev = init
-\t\t\t VAR Pwm3PhaPwmFrqNext[SYSDEF_PHA_SET_A],  \t\t\t\tinit= 5.0f,\t\t\t\t\t\tev= 600.0f\t\t\t\t\t\t--Pwm3PhaPwmFrqNext[SYSDEF_PHA_SET_A] = PwmFrqNext_Temp
-      \t   \t \t VAR Pwm3PhaCycTiNext[SYSDEF_PHA_SET_A], \t\t\t\t\tinit=1.0f,\t\t\t\t\t\tev  = 8.333334e-4\t\t\t--Pwm3PhaCycTiNext[SYSDEF_PHA_SET_A] = NxtCycleTimeFact / Pwm3PhaPwmFrqNext[SYSDEF_PHA_SET_A]
-\t\t\t #Pwm3Pha_NextPwmFrq();
-\t\tEND ELEMENT
-\t
-END TEST--TEST TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 013
-
-
-\tTEST TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 014
-\tFAMILY nominal
-\t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT. Author:Tibor Balogh
-     \t\t COMMENT. Date: 2019-09-30
-\t\tCOMMENT.  This function checks the calculation of the next pwm frequency and timing
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. List of Requirements  : GLIB-61259
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Tese Case ID : TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 014
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Testcase Description :  
-\t\tCOMMENT \t\t\t\t\tSet   IvtrPwmFrqDrtgVal to the value 1000.0
-\t\tCOMMENT \t\t\t\t\tSet SysPrmPwmFrqDblUpd  to the value 600.0 
-\t\tCOMMENT \t\t\t\t\tSet  PwmModeNext_Temp to the value of PWM3PHA_PWMMODE_SINGLEUPDATE
-\t      COMMENT \t\t\t\t\tSet  Pwm3PhaPwmModeSet to the value of PWM3PHA_PWMMODE_DOUBLEUPDATE
-\t      COMMENT \t\t\t\t\tSet  Pwm3PhaPwmHalfAct[SYSDEF_PHA_SET_A] to the value of PWM3PHA_PWMHALF_FALLING
-  \t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT  Test type : Normal
-\t\tCOMMENT. *****************************************************************************************************************************************************
-\t\tELEMENT\t\t\t\t
-\t       \tVAR IvtrPwmFrqDrtgVal,\t\t\t\t\t\t\t\t\tinit = 1000.0f,\t\t\t\t\t\tev = init\t\t\t\t\t\t\t\t--PwmFrqNext_Temp > SysPrmPwmFrqDblUpd
-\t\t\tVAR SysPrmPwmFrqDblUpd,\t\t\t\t\t\t\t\tinit =600.0f,\t\t\t\t\t\tev = init
-\t\t\tVAR PwmModeNext_Temp,\t\t\t\t\t\t\t\t\t\t\tinit = PWM3PHA_PWMMODE_SINGLEUPDATE,\t\t\t\t\t\tev = init
-\t\t\tVAR  Pwm3PhaPwmModeSet, \t\t\t\t\t\t\t\t\t\tinit=PWM3PHA_PWMMODE_DOUBLEUPDATE ,\t\t\t\t\t\tev=init
-\t\t\tVAR  Pwm3PhaPwmHalfAct[SYSDEF_PHA_SET_A],\t\t\t\t\tinit=PWM3PHA_PWMHALF_FALLING,\t\t\t\t\t\t\t\t\tev=init
-\t\t\t #Pwm3Pha_NextPwmFrq();
-\t\tEND ELEMENT
-\tEND TEST--TEST TC-GLIB-61259-Pwm3Pha_NextPwmFrq- 014
-
-END SERVICE -- Pwm3Pha_NextPwmFrq
-
-
---------------------------------------------------------------------------------
--- Declaration of the service Pwm3Pha_RunMux
---------------------------------------------------------------------------------
-SERVICE Pwm3Pha_RunMux
-SERVICE_TYPE inline
-    #uint32 PhaseSetLoc;
-    \tTEST TC-GLIB-60696-Pwm3Pha_RunMux- 001
-   \t FAMILY nominal
-\t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT. Author: Tibor Balogh
-        \tCOMMENT. Date: 2019-09-30
-\t\tCOMMENT. Multiplexer run function for checking the Pwm3Pha inputs
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. List of Requirements  : GLIB-60696
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Tese Case ID : TC-GLIB-60696-Pwm3Pha_RunMux- 001
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Testcase Description :  
-\t\tCOMMENT   \t\t\t\t\tIf DrvCtrlSimnPwm3PhaSimnEna is equal to True
-\t\tCOMMENT \t\t\t\t\tSet  Pwm3PhaMuxSel to the value of PWM3PHA_MUXSEL_DRVCTRLSIMN
-\t\tCOMMENT \t\t\t\t\tSet  Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_U] to the value of DrvCtrlSimnPwm3PhaEna[PhaseSetLoc][SYSDEF_PHA_U] 
-\t\tCOMMENT \t\t\t\t\tSet  Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_V] to the value of DrvCtrlSimnPwm3PhaEna[PhaseSetLoc][SYSDEF_PHA_V]
-\t\tCOMMENT\t\t\t\t       Set  Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_W] to the value of DrvCtrlSimnPwm3PhaEna[PhaseSetLoc][SYSDEF_PHA_W]
-\t\tCOMMENT\t\t\t\t       Set Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_U] to the value of DrvCtrlSimnPwm3PhaDutyCycPha[PhaseSetLoc][SYSDEF_PHA_U]
-\t\tCOMMENT\t\t\t\t       Set Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_V] to the value of DrvCtrlSimnPwm3PhaDutyCycPha[PhaseSetLoc][SYSDEF_PHA_V]
-\t\tCOMMENT\t\t\t\t       Set Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_W] to the value of DrvCtrlSimnPwm3PhaDutyCycPha[PhaseSetLoc][SYSDEF_PHA_W]
-  \t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT  Test type : Normal
-\t\tCOMMENT. *****************************************************************************************************************************************************
-\t\t ELEMENT
-\t\t\tVAR DrvCtrlSimnPwm3PhaSimnEna,\t\t\t\t\t\t\t\t\t\t\t\t\tinit = TRUE,\t\t\tev = init\t\t\t--FALSE != DrvCtrlSimnPwm3PhaSimnEna
-\t\t\tVAR PhaseSetLoc,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinit = 0,\t\t\t\t\tev = init
-\t\t\tVAR Pwm3PhaMuxSel,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinit = 1,\t\t\t\t\tev = 0
-\t\t\tVAR DrvCtrlSimnPwm3PhaEnaPha[PhaseSetLoc][SYSDEF_PHA_U],\t\t\t\t\tinit = 1,\t\t\t\t\tev = init
-\t\t\tVAR Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_U],\t\t\t\t\t\t\tinit = 0,\t\t\t\t\tev = 1
-\t\t\tVAR  DrvCtrlSimnPwm3PhaEnaPha[PhaseSetLoc][SYSDEF_PHA_V],\t\t\t\t\tinit = 0,\t\t\t\t\tev = init
-\t\t\tVAR Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_V],\t\t\t\t\t\t\tinit = 1,\t\t\t\t\tev = 0
-\t\t\tVAR  DrvCtrlSimnPwm3PhaEnaPha[PhaseSetLoc][SYSDEF_PHA_W],\t\t\t\tinit = 1,\t\t\t\t\tev = init
-\t\t\tVAR Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_W],\t\t\t\t\t\t\tinit = 0,\t\t\t\t\tev = 1
-\t\t\tVAR  DrvCtrlSimnPwm3PhaDutyCycPha[PhaseSetLoc][SYSDEF_PHA_U],\t\t\tinit = 1.0f,\t\t\t\tev = init
-\t\t\tVAR  Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_U],\t        \t\t\tinit = 0.0f,\t\t\t\tev = 1.0f
-\t\t\tVAR  DrvCtrlSimnPwm3PhaDutyCycPha[PhaseSetLoc][SYSDEF_PHA_V],\t\t\t\tinit = 0.0f,\t\t\t\tev = init
-\t\t\tVAR  Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_V],\t\t\t\t\tinit =1.0f,\t\t\t\tev =0.0f
-\t\t\tVAR DrvCtrlSimnPwm3PhaDutyCycPha[PhaseSetLoc][SYSDEF_PHA_W],\t\t\t\tinit = 0.0f,\t\t\t\tev = init
-\t\t\tVAR  Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_W] ,\t\t\t\t\tinit = 1.0f,\t\t\t\tev = 0.0f
-            \t\t #Pwm3Pha_RunMux(PhaseSetLoc);
-       \t END ELEMENT
- \t END TEST -- TEST TC-GLIB-60696-Pwm3Pha_RunMux- 001
-      
-     TEST TC-GLIB-60696-Pwm3Pha_RunMux- 002
-\tFAMILY nominal
-\t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT. Author: Tibor Balogh
-      \t\tCOMMENT. Date: 2019-09-30
-\t\tCOMMENT. Multiplexer run function for checking the Pwm3Pha inputs
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. List of Requirements  : GLIB-60696
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Tese Case ID :TC-GLIB-60696-Pwm3Pha_RunMux- 002
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Testcase Description :  
-\t\tCOMMENT   \t\t\t\t\tIf DrvCtrlSimnPwm3PhaSimnEna is equal to false
-\t\tCOMMENT                                   then 
-\t\tCOMMENT                                   else part
-  \t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT  Test type : Normal
-\t\tCOMMENT. *****************************************************************************************************************************************************
-\t\tELEMENT
-\t\t\tVAR DrvCtrlSimnPwm3PhaSimnEna,\t\t\t\t\t\t\t\t\t\t\t\tinit = FALSE,\t\tev = init\t\t\t\t--FALSE = DrvCtrlSimnPwm3PhaSimnEna
-\t\t\t #Pwm3Pha_RunMux(PhaseSetLoc);
-\t \tEND ELEMENT
-  \t END TEST--TEST TC-GLIB-60696-Pwm3Pha_RunMux- 002
-
-\tTEST TC-GLIB-60696-Pwm3Pha_RunMux- 003
-\tFAMILY nominal
-\t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT. Author: Tibor Balogh
-        \tCOMMENT. Date: 2019-09-30
-\t\tCOMMENT. Multiplexer run function for checking the Pwm3Pha inputs
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. List of Requirements  : GLIB-60696
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Tese Case ID :TC-GLIB-60696-Pwm3Pha_RunMux- 003
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Testcase Description :  
-\t\tCOMMENT   \t\t\t\t\tif  DrvCtrlSeqrPlsEnaReq is equal to 1 and  DrvCtrlSeqrSoftAscReq is equal to 1
-\t\tCOMMENT \t\t\t\t\tSet Pwm3PhaMuxSel  to the value of  PWM3PHA_MUXSEL_MOD3PHA
-\t\tCOMMENT \t\t\t\t\tSet Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_U]   to 1
-\t\tCOMMENT \t\t\t\t\tSet Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_V]   to 1
-\t\tCOMMENT \t\t\t\t\tSet Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_W]   to 1
-\t\tCOMMENT \t\t\t\t\tSet Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_U]  to the value of  Mod3PhaDutyCycPha[PhaseSetLoc][SYSDEF_PHA_U]
-\t\tCOMMENT\t\t\t\t\tif SysPrmDrvgDirRvs is equal to 0
-\t\tCOMMENT \t\t\t\t      Set Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_V] to the value of  Mod3PhaDutyCycPha[PhaseSetLoc][SYSDEF_PHA_V]
-\t\tCOMMENT\t\t\t\t      Set Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_W] to the value of  Mod3PhaDutyCycPha[PhaseSetLoc][SYSDEF_PHA_W]
-  \t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT  Test type : Normal
-\t\tCOMMENT. *****************************************************************************************************************************************************
-\t\tELEMENT
-\t\t\tVAR DrvCtrlSimnPwm3PhaSimnEna,\t\t\t\t\t\t\t\t\t\t\t\tinit = FALSE,\t\tev =init\t\t\t\t\t\t
-\t\t\tVAR DrvCtrlSeqrPlsEnaReq,\t\t\t\t\t\t\t\t\t\t\t\t\t\tinit = 1,\t\t\t\tev = init\t\t\t\t\t--(0U != DrvCtrlSeqrPlsEnaReq) || (0U != DrvCtrlSeqrSoftAscReq)
-\t\t\tVAR DrvCtrlSeqrSoftAscReq,\t\t\t\t\t\t\t\t\t\t\t\t\t\tinit = 1,\t\t\t\tev = init
-\t\t\tVAR Pwm3PhaMuxSel,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinit = 1,\t\t\t\tev = 2
-\t\t\tVAR Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_U],\t\t\t\t\t\tinit = 0,\t\t\t\tev = 1
-\t\t\tVAR Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_V],\t\t\t\t\t\tinit = 0,\t\t\t\tev = 1
-\t\t\tVAR Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_W],\t\t\t\t\t\tinit = 0,\t\t\t\tev = 1
-\t\t\tVAR Mod3PhaDutyCycPha[PhaseSetLoc][SYSDEF_PHA_U],\t\t\t\t\t\tinit = 1.0f,\t\t\tev = init
-\t\t\tVAR Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_U],\t\t\t\t\tinit = 0.0f,\t\t\tev =1.0f
-\t\t\tVAR SysPrmDrvgDirRvs,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinit = 0,\t\t\t\tev = init\t\t\t\t\t--if (0U == SysPrmDrvgDirRvs)
-\t\t\tVAR  Mod3PhaDutyCycPha[PhaseSetLoc][SYSDEF_PHA_V],\t\t           \t\t       init = 1.0f,\t\t\tev =init
-\t\t\tVAR  Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_V],\t\t\t\tinit =0.0f,\t\t\tev =1.0f
-\t\t\tVAR  Mod3PhaDutyCycPha[PhaseSetLoc][SYSDEF_PHA_W],\t\t\t\t\tinit = 1.0f,\t\t\tev =init
-\t\t\tVAR   Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_W],\t\t\t\tinit =0.0f,\t\t\tev = 1.0f
-            \t\t #Pwm3Pha_RunMux(PhaseSetLoc);
-\t\tEND ELEMENT
-\tEND TEST--TEST TC-GLIB-60696-Pwm3Pha_RunMux- 003
-
-\tTEST TC-GLIB-60696-Pwm3Pha_RunMux- 004
-\tFAMILY nominal
-\t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT. Author: Tibor Balogh
-        \tCOMMENT. Date: 2019-09-30
-\t\tCOMMENT. Multiplexer run function for checking the Pwm3Pha inputs
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. List of Requirements  :GLIB-60696
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Tese Case ID :TC-GLIB-60696-Pwm3Pha_RunMux- 004
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Testcase Description :  
-\t\tCOMMENT   \t\t\t\t\tif  DrvCtrlSeqrPlsEnaReq is equal to -1 and  DrvCtrlSeqrSoftAscReq is equal to- 1
-\t\tCOMMENT \t\t\t\t\tSet Pwm3PhaMuxSel  to the value of  PWM3PHA_MUXSEL_MOD3PHA
-\t\tCOMMENT \t\t\t\t\tSet Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_U]   to 1
-\t\tCOMMENT \t\t\t\t\tSet Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_V]   to 1
-\t\tCOMMENT \t\t\t\t\tSet Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_W]   to 1
-\t\tCOMMENT \t\t\t\t\tSet Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_U]  to the value of  Mod3PhaDutyCycPha[PhaseSetLoc][SYSDEF_PHA_U]
-\t\tCOMMENT\t\t\t\t\tif SysPrmDrvgDirRvs is equal to 0
-\t\tCOMMENT \t\t\t\t\tSet Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_V] to the value of  Mod3PhaDutyCycPha[PhaseSetLoc][SYSDEF_PHA_V]
-\t\tCOMMENT\t\t\t\t       Set Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_W] to the value of  Mod3PhaDutyCycPha[PhaseSetLoc][SYSDEF_PHA_W]
-  \t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT  Test type : Boundary value  analysis
-\t\tCOMMENT. *****************************************************************************************************************************************************
-\t\tELEMENT
-\t\t\tVAR DrvCtrlSimnPwm3PhaSimnEna,\t\t\t\t\t\t\t\t\t\t\t\tinit = FALSE,\t\tev =init
-\t\t\tVAR DrvCtrlSeqrPlsEnaReq,\t\t\t\t\t\t\t\t\t\t\t\t\t\tinit = -1,\t\t\tev = init\t\t\t\t\t--(0U != DrvCtrlSeqrPlsEnaReq) || (0U != DrvCtrlSeqrSoftAscReq)
-\t\t\tVAR DrvCtrlSeqrSoftAscReq,\t\t\t\t\t\t\t\t\t\t\t\t\t\tinit = -1,\t\t\tev = init
-\t\t\tVAR Pwm3PhaMuxSel,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinit = 1,\t\t\t\tev = 2
-\t\t\tVAR Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_U],\t\t\t\t\t\tinit = 0,\t\t\t\tev = 1
-\t\t\tVAR Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_V],\t\t\t\t\t\tinit = 0,\t\t\t\tev = 1
-\t\t\tVAR Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_W],\t\t\t\t\t\tinit = 0,\t\t\t\tev = 1
-\t\t\tVAR Mod3PhaDutyCycPha[PhaseSetLoc][SYSDEF_PHA_U],\t\t\t\t\t\tinit = 1.0f,\t\t\tev = init
-\t\t\tVAR Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_U],\t\t\t\t\tinit = 0.0f,\t\t\tev =1.0f
-\t\t\tVAR SysPrmDrvgDirRvs,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinit = 0,\t\t\t\tev = init\t\t\t\t\t--if (0U == SysPrmDrvgDirRvs)
-\t\t\tVAR  Mod3PhaDutyCycPha[PhaseSetLoc][SYSDEF_PHA_V],\t\t           \t\t       init = 1.0f,\t\t\tev =init
-\t\t\tVAR  Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_V],\t\t\t\tinit =0.0f,\t\t\tev =1.0f
-\t\t\tVAR  Mod3PhaDutyCycPha[PhaseSetLoc][SYSDEF_PHA_W],\t\t\t\t\tinit = 1.0f,\t\t\tev =init
-\t\t\tVAR   Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_W],\t\t\t\tinit =0.0f,\t\t\tev = 1.0f
-          \t   \t#Pwm3Pha_RunMux(PhaseSetLoc);
-\t\tEND ELEMENT
-\tEND TEST--TEST TC-GLIB-60696-Pwm3Pha_RunMux- 004
-
-\tTEST TC-GLIB-60696-Pwm3Pha_RunMux- 005
-\tFAMILY nominal
-\t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT. Author: Tibor Balogh
-       \t  COMMENT. Date: 2019-09-30
-\t\tCOMMENT. Multiplexer run function for checking the Pwm3Pha inputs
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. List of Requirements  :GLIB-60696
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Tese Case ID :TC-GLIB-60696-Pwm3Pha_RunMux- 005
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Testcase Description :  
-\t\tCOMMENT   \t\t\t\t\tif  DrvCtrlSeqrPlsEnaReq is equal to 1 and  DrvCtrlSeqrSoftAscReq is equal to 1
-\t\tCOMMENT \t\t\t\t\tSet Pwm3PhaMuxSel  to the value of  PWM3PHA_MUXSEL_MOD3PHA
-\t\tCOMMENT \t\t\t\t\tSet Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_U]   to 1
-\t\tCOMMENT \t\t\t\t\tSet Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_V]   to 1
-\t\tCOMMENT \t\t\t\t\tSet Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_W]   to 1
-\t\tCOMMENT \t\t\t\t       Set Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_U]  to the value of  Mod3PhaDutyCycPha[PhaseSetLoc][SYSDEF_PHA_U]
-\t\tCOMMENT\t\t\t\t\tif SysPrmDrvgDirRvs is not  equal to 0
-\t\tCOMMENT \t\t\t\t      Set Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_V] to the value of  Mod3PhaDutyCycPha[PhaseSetLoc][SYSDEF_PHA_W]
-\t\tCOMMENT\t\t\t\t      Set Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_W] to the value of  Mod3PhaDutyCycPha[PhaseSetLoc][SYSDEF_PHA_V]
-  \t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT  Test type : Normal
-\t\tCOMMENT. *****************************************************************************************************************************************************
-\t\tELEMENT
-\t\t\tVAR DrvCtrlSimnPwm3PhaSimnEna,\t\t\t\t\t\t\t\t\t\t\t\tinit = FALSE,\t\tev =init\t\t\t\t\t\t
-\t\t\tVAR DrvCtrlSeqrPlsEnaReq,\t\t\t\t\t\t\t\t\t\t\t\t\t\tinit = 1,\t\t\t\tev = init\t\t\t\t\t--(0U != DrvCtrlSeqrPlsEnaReq) || (0U != DrvCtrlSeqrSoftAscReq)
-\t\t\tVAR DrvCtrlSeqrSoftAscReq,\t\t\t\t\t\t\t\t\t\t\t\t\t\tinit = 1,\t\t\t\tev = init
-\t\t\tVAR Pwm3PhaMuxSel,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinit = 1,\t\t\t\tev = 2
-\t\t\tVAR Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_U],\t\t\t\t\t\tinit = 0,\t\t\t\tev = 1
-\t\t\tVAR Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_V],\t\t\t\t\t\tinit = 0,\t\t\t\tev = 1
-\t\t\tVAR Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_W],\t\t\t\t\t\tinit = 0,\t\t\t\tev = 1
-\t\t\tVAR Mod3PhaDutyCycPha[PhaseSetLoc][SYSDEF_PHA_U],\t\t\t\t\t\tinit = 1.0f,\t\t\tev = init
-\t\t\tVAR Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_U],\t\t\t\t\tinit = 0.0f,\t\t\tev =1.0f
-\t\t\tVAR SysPrmDrvgDirRvs,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinit = 1,\t\t\t\tev = init\t\t\t\t\t--(0U!= SysPrmDrvgDirRvs)
-\t\t\tVAR  Mod3PhaDutyCycPha[PhaseSetLoc][SYSDEF_PHA_W],\t\t\t\t\tinit = 0.0f,\t\t\tev = init
-\t\t\tVAR  Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_V] ,\t\t\t\tinit = 1.0f,\t\t\tev = 0.0f
-\t\t\tVAR  Mod3PhaDutyCycPha[PhaseSetLoc][SYSDEF_PHA_V],\t\t\t\t\t\tinit = 1.0f,\t\t\tev = init
-\t\t\tVAR Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_W],\t\t\t\tinit = 0.0f,\t\t\tev = 1.0f
-          \t       #Pwm3Pha_RunMux(PhaseSetLoc);
-\t\tEND ELEMENT
-\tEND TEST--TEST TC-GLIB-60696-Pwm3Pha_RunMux- 005
-
-\tTEST TC-GLIB-60696-Pwm3Pha_RunMux- 006
-\tFAMILY nominal
-\t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT. Author: Tibor Balogh
-       \t  COMMENT. Date: 2019-09-30
-\t\tCOMMENT. Multiplexer run function for checking the Pwm3Pha inputs
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. List of Requirements  :GLIB-60696
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Tese Case ID :TC-GLIB-60696-Pwm3Pha_RunMux- 006
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Testcase Description :  
-\t\tCOMMENT   \t\t\t\t\tif  DrvCtrlSeqrPlsEnaReq is equal to -1 and  DrvCtrlSeqrSoftAscReq is equal to -1
-\t\tCOMMENT \t\t\t\t\tSet Pwm3PhaMuxSel  to the value of  PWM3PHA_MUXSEL_MOD3PHA
-\t\tCOMMENT \t\t\t\t\tSet Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_U]   to 1
-\t\tCOMMENT \t\t\t\t\tSet Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_V]   to 1
-\t\tCOMMENT \t\t\t\t\tSet Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_W]   to 1
-\t\tCOMMENT \t\t\t\t       Set Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_U]  to the value of  Mod3PhaDutyCycPha[PhaseSetLoc][SYSDEF_PHA_U]
-\t\tCOMMENT\t\t\t\t\tif SysPrmDrvgDirRvs is not  equal to 0
-\t\tCOMMENT \t\t\t\t      Set Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_V] to the value of  Mod3PhaDutyCycPha[PhaseSetLoc][SYSDEF_PHA_W]
-\t\tCOMMENT\t\t\t\t      Set Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_W] to the value of  Mod3PhaDutyCycPha[PhaseSetLoc][SYSDEF_PHA_V]
-  \t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT  Test type : Boundary  value analysis
-\t\tCOMMENT. *****************************************************************************************************************************************************
-\t\tELEMENT
-\t\t\tVAR DrvCtrlSimnPwm3PhaSimnEna,\t\t\t\t\t\t\t\t\t\t\t\tinit = FALSE,\t\tev =init
-\t\t\tVAR DrvCtrlSeqrPlsEnaReq,\t\t\t\t\t\t\t\t\t\t\t\t\t\tinit = -1,\t\t\tev = init\t\t\t\t\t--(0U != DrvCtrlSeqrPlsEnaReq) || (0U != DrvCtrlSeqrSoftAscReq)
-\t\t\tVAR DrvCtrlSeqrSoftAscReq,\t\t\t\t\t\t\t\t\t\t\t\t\t\tinit = -1,\t\t\tev = init
-\t\t\tVAR Pwm3PhaMuxSel,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinit = 1,\t\t\t\tev = 2
-\t\t\tVAR Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_U],\t\t\t\t\t\tinit = 0,\t\t\t\tev = 1
-\t\t\tVAR Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_V],\t\t\t\t\t\tinit = 0,\t\t\t\tev = 1
-\t\t\tVAR Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_W],\t\t\t\t\t\tinit = 0,\t\t\t\tev = 1
-\t\t\tVAR Mod3PhaDutyCycPha[PhaseSetLoc][SYSDEF_PHA_U],\t\t\t\t\t\tinit = 1.0f,\t\t\tev = init
-\t\t\tVAR Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_U],\t\t\t\t\tinit = 0.0f,\t\t\tev =1.0f
-\t\t\tVAR SysPrmDrvgDirRvs,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinit = -1,\t\t\tev = init\t\t\t\t\t--(0U!= SysPrmDrvgDirRvs)
-\t\t\tVAR  Mod3PhaDutyCycPha[PhaseSetLoc][SYSDEF_PHA_W],\t\t\t\t\tinit = 0.0f,\t\t\tev = init
-\t\t\tVAR  Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_V] ,\t\t\t\tinit = 1.0f,\t\t\tev = 0.0f
-\t\t\tVAR  Mod3PhaDutyCycPha[PhaseSetLoc][SYSDEF_PHA_V],\t\t\t\t\t\tinit = 1.0f,\t\t\tev = init
-\t\t\tVAR Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_W],\t\t\t\tinit = 0.0f,\t\t\tev = 1.0f
-              \t#Pwm3Pha_RunMux(PhaseSetLoc);
-\t\tEND ELEMENT
-\tEND TEST--TEST TC-GLIB-60696-Pwm3Pha_RunMux- 006
-  
-
-\t TEST TC-GLIB-60696-Pwm3Pha_RunMux- 007
-\tFAMILY nominal
-\t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT. Author: Tibor Balogh
-      \t  \tCOMMENT. Date: 2019-09-30
-\t\tCOMMENT. Multiplexer run function for checking the Pwm3Pha inputs
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. List of Requirements  : GLIB-60696
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Tese Case ID : TC-GLIB-60696-Pwm3Pha_RunMux- 007
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Testcase Description :  
-\t\tCOMMENT   \t\t\t\t\tif  DrvCtrlSeqrPlsEnaReq is NOT  equal to 1 and  DrvCtrlSeqrSoftAscReq is  NOTequal to 1
-\t\tCOMMENT\t\t\t\t       CHECKING ELSE PART
-  \t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT  Test type : Normal
-\t\tCOMMENT. *****************************************************************************************************************************************************
-\t\tELEMENT
-\t\t\tVAR DrvCtrlSeqrPlsEnaReq,\t\t\t\t\t\t\t\t\t\t\t\tinit = 0,\t\t\t\tev = init\t\t\t\t\t\t\t\t--(0U = DrvCtrlSeqrPlsEnaReq) || (0U = DrvCtrlSeqrSoftAscReq)
-\t\t\tVAR DrvCtrlSeqrSoftAscReq,\t\t\t\t\t\t\t\t\t\t\t\tinit = 0,\t\t\t\tev = init
-\t\t\t#Pwm3Pha_RunMux(PhaseSetLoc);
-\t\tEND ELEMENT
-       END TEST--TEST TC-GLIB-60696-Pwm3Pha_RunMux- 007
-
-\tTEST TC-GLIB-60696-Pwm3Pha_RunMux- 008
-\tFAMILY nominal
-\t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT. Author: Tibor Balogh
-      \t\t  COMMENT. Date: 2019-09-30
-\t\tCOMMENT.Multiplexer run function for checking the Pwm3Pha inputs
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. List of Requirements  :GLIB-60696
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Tese Case ID : TC-GLIB-60696-Pwm3Pha_RunMux- 008
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Testcase Description :  
-\t\tCOMMENT   \t\t\t\t\tIf    DrvCtrlSeqrAscReq is equal to 1
-\t\tCOMMENT \t\t\t\t\tSet Pwm3PhaMuxSel to the value of  PWM3PHA_MUXSEL_ASCREQ
-\t\tCOMMENT \t\t\t\t\tSet Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_U] to 1
-\t\tCOMMENT \t\t\t\t\tSet Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_V] to 1
-\t\tCOMMENT \t\t\t\t\tSet Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_W] to 1
-\t\tCOMMENT \t\t\t\t\tSet Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_U] to the value of  Pwm3PhaAscDutyCyc
-\t\tCOMMENT \t\t\t\t\tSet Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_V] to the value of  Pwm3PhaAscDutyCyc
-\t\tCOMMENT\t\t\t\t       Set Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_W] to the value of  Pwm3PhaAscDutyCyc                              
-  \t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT  Test type : Normal
-\t\tCOMMENT. *****************************************************************************************************************************************************
-\t\tELEMENT
-\t\t\tVAR SysPrmDrvgDirRvs,\t\t\t\t\t\t\t\t\t\t\t\t\tinit = 1,\t\t\tev = init\t\t\t\t\t\t\t
-\t\t\tVAR DrvCtrlSimnPwm3PhaSimnEna,\t\t\t\t\t\t\t\t\t\tinit = FALSE,\tev =init
-\t\t\tVAR DrvCtrlSeqrPlsEnaReq,\t\t\t\t\t\t\t\t\t\t\t\tinit = 0,\t\t\tev = init
-\t\t\tVAR DrvCtrlSeqrSoftAscReq,\t\t\t\t\t\t\t\t\t\t\t\tinit = 0,\t\t\tev = init
-\t\t\tVAR DrvCtrlSeqrAscReq,\t\t\t\t\t\t\t\t\t\t\t\t\tinit = 1,\t\t\tev = init\t\t\t\t\t\t--(0U != DrvCtrlSeqrAscReq)
-\t\t\tVAR PhaseSetLoc,\t\t\t\t\t\t\t\t\t\t\t\t\t\tinit = 0,\t\t\tev = init
-\t\t\tVAR  Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_U] ,\t\t\tinit = 0,\t\t\tev = 1
-\t\t\tVAR  Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_V] ,\t\t\tinit = 0,\t\t\tev = 1
-\t\t\tVAR  Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_W] ,\t\t\tinit = 0,\t\t\tev = 1
-\t\t\tVAR Pwm3PhaAscDutyCyc,\t\t\t\t\t\t\t\t\t\t\t\tinit = 1.0f,\t\tev = init
-\t\t\tVAR  Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_U],\t\tinit = 0.0f,\t\tev = 1.0f
-\t\t\tVAR Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_V],\t\t\tinit = 0.0f,\t\tev = 1.0f
-\t\t\tVAR Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_W],\t\tinit = 0.0f,\t\tev = 1.0f
-\t\t\t #Pwm3Pha_RunMux(PhaseSetLoc);
-\t\tEND ELEMENT
-\tEND TEST--TEST TC-GLIB-60696-Pwm3Pha_RunMux- 008
-
-\tTEST TC-GLIB-60696-Pwm3Pha_RunMux- 009
-\tFAMILY nominal
-\t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT. Author: Tibor Balogh
-        \tCOMMENT. Date: 2019-09-30
-\t\tCOMMENT. This function checks the handling of PWM module
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. List of Requirements  : GLIB-60696
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Tese Case ID : TC-GLIB-60696-Pwm3Pha_RunMux- 009
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Testcase Description :  
-\t\tCOMMENT   \t\t\t\t\tIf    DrvCtrlSeqrAscReq is equal to -1
-\t\tCOMMENT \t\t\t\t\tSet Pwm3PhaMuxSel to the value of  PWM3PHA_MUXSEL_ASCREQ
-\t\tCOMMENT \t\t\t\t\tSet Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_U] to 1
-\t\tCOMMENT \t\t\t\t\tSet Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_V] to 1
-\t\tCOMMENT \t\t\t\t\tSet Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_W] to 1
-\t\tCOMMENT \t\t\t\t\tSet Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_U] to the value of  Pwm3PhaAscDutyCyc
-\t\tCOMMENT \t\t\t\t\tSet Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_V] to the value of  Pwm3PhaAscDutyCyc
-\t\tCOMMENT\t\t\t\t       Set Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_W] to the value of  Pwm3PhaAscDutyCyc                              
-  \t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT  Test type : Boundary value analysis
-\t\tCOMMENT. *****************************************************************************************************************************************************
-\t\tELEMENT
-\t\t\tVAR SysPrmDrvgDirRvs,\t\t\t\t\t\t\t\t\t\t\t\t\tinit = 1,\t\t\tev = init
-\t\t\tVAR DrvCtrlSimnPwm3PhaSimnEna,\t\t\t\t\t\t\t\t\t\tinit = FALSE,\tev =init
-\t\t\tVAR DrvCtrlSeqrPlsEnaReq,\t\t\t\t\t\t\t\t\t\t\t\tinit = 0,\t\t\tev = init
-\t\t\tVAR DrvCtrlSeqrSoftAscReq,\t\t\t\t\t\t\t\t\t\t\t\tinit = 0,\t\t\tev = init
-\t\t\tVAR DrvCtrlSeqrAscReq,\t\t\t\t\t\t\t\t\t\t\t\t\tinit = -1,\t\tev = init\t\t\t\t\t\t--(0U != DrvCtrlSeqrAscReq)
-\t\t\tVAR PhaseSetLoc,\t\t\t\t\t\t\t\t\t\t\t\t\t\tinit = 0,\t\t\tev = init
-\t\t\tVAR  Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_U] ,\t\t\tinit = 0,\t\t\tev = 1
-\t\t\tVAR  Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_V] ,\t\t\tinit = 0,\t\t\tev = 1
-\t\t\tVAR  Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_W] ,\t\t\tinit = 0,\t\t\tev = 1
-\t\t\tVAR Pwm3PhaAscDutyCyc,\t\t\t\t\t\t\t\t\t\t\t\tinit = 1.0f,\t\tev = init
-\t\t\tVAR  Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_U],\t\tinit = 0.0f,\t\tev = 1.0f
-\t\t\t\t\tVAR Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_V],\t\t\tinit = 0.0f,\t\tev = 1.0f
-\t\t\t\tVAR Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_W],\t\tinit = 0.0f,\t\tev = 1.0f
-\t\t\t #Pwm3Pha_RunMux(PhaseSetLoc);
-\t\tEND ELEMENT
-\tEND TEST--TEST TC-GLIB-60696-Pwm3Pha_RunMux- 009
-\t
-      TEST TC-GLIB-60696-Pwm3Pha_RunMux- 010
-\tFAMILY nominal
-\t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT. Author: Tibor Balogh
-       \tCOMMENT. Date: 2019-09-30
-\t\tCOMMENT.This function checks the handling of PWM module
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. List of Requirements  :GLIB-60696
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Tese Case ID : TC-GLIB-60696-Pwm3Pha_RunMux- 010
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Testcase Description :  
-\t\tCOMMENT   \tCHECKING ELSE PART,If    DrvCtrlSeqrAscReq is  not equal to 1
-\t\tCOMMENT \t\t\t\t\tSet Pwm3PhaMuxSel to the value of  PWM3PHA_MUXSEL_SPOREQ
-\t\tCOMMENT \t\t\t\t\tSet Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_U] to 0
-\t\tCOMMENT \t\t\t\t\tSet Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_V] to 0
-\t\tCOMMENT \t\t\t\t\tSet Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_W] to 0
-\t\tCOMMENT \t\t\t\t\tSet Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_U] to 0.F
-\t\tCOMMENT \t\t\t\t\tSet Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_V] to 0.F
-\t\tCOMMENT \t\t\t\t\tSet Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_W] to 0.F
-  \t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT  Test type : Normal
-\t\tCOMMENT. *****************************************************************************************************************************************************
-\t\tELEMENT
-\t\t\tVAR  DrvCtrlSeqrAscReq,\t\t\t\t\t\t\t\t\t\t\t\tinit = 0,\t\t\tev = init\t\t\t\t\t\t\t\t--(0U = DrvCtrlSeqrAscReq)
-\t\t\tVAR Pwm3PhaMuxSel,\t\t\t\t\t\t\t\t\t\t\t\tinit = 1,\t\t\tev = 4
-\t\t\tVAR Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_U],\t\t\tinit = 1,\t\t\tev = 0
-\t\t\tVAR Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_V],\t\t\tinit = 1,\t\t\tev = 0
-\t\t\tVAR Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_W],\t\t\tinit = 1,\t\t\tev = 0
-\t\t\tVAR  Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_U],\tinit =1.0f,\t\tev = 0.0f
-\t\t\tVAR  Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_V],\tinit =1.0f,\t\tev = 0.0f
-\t\t\tVAR  Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_W],\tinit =1.0f,\t\tev = 0.0f
-\t\t #Pwm3Pha_RunMux(PhaseSetLoc);
-\t\tEND ELEMENT
-\tEND TEST--TEST TC-GLIB-60696-Pwm3Pha_RunMux- 010
-
-  TEST TC-GLIB-60696-Pwm3Pha_RunMux- 011
-\tFAMILY nominal
-\t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT. Author: Tibor Balogh
-      \t\t COMMENT. Date: 2019-09-30
-\t\tCOMMENT.Multiplexer run function for checking the Pwm3Pha inputs
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. List of Requirements  : GLIB-60696
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Tese Case ID : TC-GLIB-60696-Pwm3Pha_RunMux- 011
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Testcase Description :   \t\t\t\t      
-\t\tCOMMENT                                 Set Pwm3PhaPwmModAct[PhaseSetLoc]  to the value of  Pwm3PhaPwmModeSet
-  \t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT  Test type : Normal
-\t\tCOMMENT. *****************************************************************************************************************************************************
-\t\tELEMENT
-\t\t\tVAR Pwm3PhaPwmModeSet,\t\t\t\t\t\t\t\t\t\tinit = 1,\t\t\tev = init\t\t\t\t\t\t\t\t\t-- Pwm3PhaPwmModAct[PhaseSetLoc] = Pwm3PhaPwmModeSet
-\t\t\tVAR Pwm3PhaPwmModAct[PhaseSetLoc],\t\t\t\t\t\tinit = 0,\t\t\tev = 1
-\t\t\t #Pwm3Pha_RunMux(PhaseSetLoc);
-\t\tEND ELEMENT
-\tEND TEST--TEST TC-GLIB-60696-Pwm3Pha_RunMux- 011
-
-TEST TC-GLIB-60696-Pwm3Pha_RunMux- 012
-\tFAMILY nominal
-\t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT. Author: Tibor Balogh
-      \t\t COMMENT. Date: 2019-09-30
-\t\tCOMMENT.Multiplexer run function for checking the Pwm3Pha inputs
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. List of Requirements  : GLIB-60696
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Tese Case ID : TC-GLIB-60696-Pwm3Pha_RunMux- 012
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Testcase Description :   \t\t\t\t      
-\t\tCOMMENT                                 If DrvCtrlSimnPwm3PhaSimnEna is equal to True
-\t\tCOMMENT \t\t\t\t\tSet  Pwm3PhaMuxSel to the value of PWM3PHA_MUXSEL_DRVCTRLSIMN
-\t\tCOMMENT \t\t\t\t\tSet  Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_U] to the value of DrvCtrlSimnPwm3PhaEna[PhaseSetLoc][SYSDEF_PHA_U] 
-\t\tCOMMENT \t\t\t\t\tSet  Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_V] to the value of DrvCtrlSimnPwm3PhaEna[PhaseSetLoc][SYSDEF_PHA_V]
-\t\tCOMMENT\t\t\t\t       Set  Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_W] to the value of DrvCtrlSimnPwm3PhaEna[PhaseSetLoc][SYSDEF_PHA_W]
-\t\tCOMMENT\t\t\t\t       Set Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_U] to the value of DrvCtrlSimnPwm3PhaDutyCycPha[PhaseSetLoc][SYSDEF_PHA_U]
-\t\tCOMMENT\t\t\t\t       Set Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_V] to the value of DrvCtrlSimnPwm3PhaDutyCycPha[PhaseSetLoc][SYSDEF_PHA_V]
-\t\tCOMMENT\t\t\t\t       Set Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_W] to the value of DrvCtrlSimnPwm3PhaDutyCycPha[PhaseSetLoc][SYSDEF_PHA_W]
-  \t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT  Test type : Boundary Value
-\t\tCOMMENT. *****************************************************************************************************************************************************
-\t\tELEMENT
-\t\t\tVAR rtid2,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinit in {0,1},\t\t\t\tev=init
-\t\t\tVAR rtid3,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinit in {0,1,2},\t\t\tev=init
-\t\t\t
-\t\t\tVAR DrvCtrlSimnPwm3PhaSimnEna,\t\t\t\t\t\t\t\t\t\tinit = TRUE,\t\t\tev = init\t\t\t\t\t\t\t\t\t-- Pwm3PhaPwmModAct[PhaseSetLoc] = Pwm3PhaPwmModeSet
-
-\t\t\tVAR DrvCtrlSimnPwm3PhaEnaPha[PhaseSetLoc][SYSDEF_PHA_U],\t\tinit (rtid2) in {0,1},\t\tev=init
- \t\t\tVAR Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_U],\t\t\t\tinit=0,\t\t\t\t\tev (rtid2) with{0,1}
-\t\t\tVAR DrvCtrlSimnPwm3PhaEnaPha[PhaseSetLoc][SYSDEF_PHA_V],\t\tinit (rtid2) in {0,1},\t\tev=init
- \t\t\tVAR Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_V],\t\t\t\tinit=0,\t\t\t\t\tev (rtid2) with{0,1}
-\t\t\tVAR DrvCtrlSimnPwm3PhaEnaPha[PhaseSetLoc][SYSDEF_PHA_W],\t\tinit (rtid2) in {0,1},\t\tev=init
- \t\t\tVAR Pwm3PhaMuxEnaPha[PhaseSetLoc][SYSDEF_PHA_W],\t\t\tinit=0,\t\t\t\t\tev (rtid2) with{0,1}
-
-\t\t\tVAR DrvCtrlSimnPwm3PhaDutyCycPha[PhaseSetLoc][SYSDEF_PHA_U],  init (rtid3) in {0.0F,0.5F,1.0F},\t\tev=init 
-\t\t\tVAR Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_U],\t\t\tinit=0.0F,\t\t\t\t\t\t\t\tev (rtid3) with {0.0F,0.5F,1.0F}
-\t\t\tVAR DrvCtrlSimnPwm3PhaDutyCycPha[PhaseSetLoc][SYSDEF_PHA_V],  init (rtid3)  in  {0.0F,0.5F,1.0F},\t\tev=init 
-\t\t\tVAR Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_V],\t\t\tinit=0.0F,\t\t\t\t\t\t\t\tev (rtid3) with {0.0F,0.5F,1.0F}
-\t\t\tVAR DrvCtrlSimnPwm3PhaDutyCycPha[PhaseSetLoc][SYSDEF_PHA_W],  init (rtid3)  in {0.0F,0.5F,1.0F},\t\tev=init 
-\t\t\tVAR Pwm3PhaMuxDutyCycPha[PhaseSetLoc][SYSDEF_PHA_W],\t\tinit=0.0F,\t\t\t\t\t\t\t\tev (rtid3) with {0.0F,0.5F,1.0F}
-
-\t\t\t #Pwm3Pha_RunMux(PhaseSetLoc);
-\t\tEND ELEMENT
-\tEND TEST--TEST TC-GLIB-60696-Pwm3Pha_RunMux- 012
-END SERVICE -- Pwm3Pha_RunMux
-
---------------------------------------------------------------------------------
--- Declaration of the service Pwm3Pha_Init
---------------------------------------------------------------------------------
-SERVICE Pwm3Pha_Init
-SERVICE_TYPE extern
-
-\tTEST TC-GLIB-60697-Pwm3Pha_Init- 001
-       FAMILY nominal
-\t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT. Author: Tibor Balogh
-        \tCOMMENT. Date: 2019-09-30
-\t\tCOMMENT. init function of the pwm module
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. List of Requirements  : GLIB-60697
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Tese Case ID : TC-GLIB-60697-Pwm3Pha_Init- 001
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Testcase Description :  
-\t\tCOMMENT   \t\t\t\t\tSet  Pwm3PhaPwmFrqAct to  the value of SysPrmPwmFrqSngUpd      
-\t\tCOMMENT \t\t\t\t\tSet    Pwm3PhaPwmFrqNext[SYSDEF_PHA_SET_A]     to  the value of SysPrmPwmFrqSngUpd 
-\t\tCOMMENT \t\t\t\t\tSet    Pwm3PhaCycTiAct[SYSDEF_PHA_SET_A]   to the value of        1.F / SysPrmPwmFrqSngUpd
-\t\tCOMMENT \t\t\t\t\tSet  Pwm3PhaCycTiNext[SYSDEF_PHA_SET_A]to the value of  1.F / SysPrmPwmFrqSngUpd 
-\t\tCOMMENT \t\t\t\t\tCalling  the function invA_pwm_Init()
-  \t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT  Test type : Boundary Value
-\t\tCOMMENT. *****************************************************************************************************************************************************
-\t  \tELEMENT
-
-\t\t\tVAR rtid3,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinit in {0,1,2},\t\t\tev=init\t
-              \tVAR      SysPrmPwmFrqSngUpd , \t\t       \t\t\t\t\t\t\tinit (rtid3) in{500.0F,6000.0F,50000.0F},\t\t\tev = init\t\t\t\t\t--Pwm3PhaPwmFrqAct[SYSDEF_PHA_SET_A] = SysPrmPwmFrqSngUpd
-   \t       \tVAR \tPwm3PhaPwmFrqAct[SYSDEF_PHA_SET_A] , \t\t     \t  \t\tinit  = 0.0f, \t\t\t\t ev (rtid3) with {500.0F,6000.0F,50000.0F}\t\t\t\t\t--Pwm3PhaPwmFrqNext[SYSDEF_PHA_SET_A] = SysPrmPwmFrqSngUpd
-\t\t\tVAR Pwm3PhaPwmFrqNext[SYSDEF_PHA_SET_A],\t\t\t\t\t\tinit = 0,\t\t\t\t\tev  (rtid3) with {500.0F,6000.0F,50000.0F}
-\t\t\tVAR Pwm3PhaCycTiAct[SYSDEF_PHA_SET_A],\t\t\t\t\t\t\tinit = 1.0f,\t\t\t\tev (rtid3) with {1.0/500.0F,1.0/6000.0F,1.0/50000.0F}\t-- Pwm3PhaCycTiAct[SYSDEF_PHA_SET_A] = 1.F / SysPrmPwmFrqSngUpd
-\t\t\tVAR  Pwm3PhaCycTiNext[SYSDEF_PHA_SET_A],\t\t\t\t\t\tinit = 1.0f,\t\t\t\tev (rtid3) with {1.0/500.0F,1.0/6000.0F,1.0/50000.0F}\t--Pwm3PhaCycTiNext[SYSDEF_PHA_SET_A] = 1.F / SysPrmPwmFrqSngUpd
-\t\t\tSTUB  invA_pwm_Init()
-\t      \t\t#Pwm3Pha_Init();
-\t\tEND ELEMENT
- \tEND TEST --  TEST TC-GLIB-60697-Pwm3Pha_Init- 001
-END SERVICE -- Pwm3Pha_Init
-
-
-------------------------------------------------------------------------------
--- Declaration of the service Pwm3Pha_RunA
---------------------------------------------------------------------------------
-SERVICE Pwm3Pha_RunA
-SERVICE_TYPE extern
-   \t TEST TC-GLIB-61260-Pwm3Pha_RunA- 001
-    \tFAMILY nominal
-\t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT. Author:Tibor Balogh
-     \t\t COMMENT. Date: 2019-09-30
-\t\tCOMMENT. This function checks the  pwm phase system A
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. List of Requirements  : GLIB-61260
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Tese Case ID : TC-GLIB-61260-Pwm3Pha_RunA- 001
-\t\tCOMMENT. *******************************************************************************************************************************************************
-\t\tCOMMENT. Testcase Description :  
-\t\tCOMMENT   \t\t\t\t\t Set  DrvCtrlC2cData.DutyCycPhaU to the value of  Pwm3PhaMuxDutyCycPha[SYSDEF_PHA_SET_A][SYSDEF_PHA_U]
-\t\tCOMMENT \t\t\t\t\tSet  DrvCtrlC2cData.DutyCycPhaV to the value of  Pwm3PhaMuxDutyCycPha[SYSDEF_PHA_SET_A][SYSDEF_PHA_V]
-\t\tCOMMENT \t\t\t\t\tSet  DrvCtrlC2cData.DutyCycPhaW to the value of  Pwm3PhaMuxDutyCycPha[SYSDEF_PHA_SET_A][SYSDEF_PHA_W]
-\t\tCOMMENT \t\t\t\t\tCalling  the function invA_pwm_Set_Next()
-  \t\tCOMMENT. ******************************************************************************************************************************************************
-\t\tCOMMENT  Test type : Boundary Value and Normal
-\t\tCOMMENT. *****************************************************************************************************************************************************
-      \t\tELEMENT
-\t      \t\tVAR rtid3,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinit in {0,1,2},\t\t\tev=init 
-
-\t\t\tSTUB  invA_pwm_Set_Next()
-\t\t\tVAR SysPrmDrvgDirRvs,\t\t\t\t\t\t\t\t\t\t\t\t\t\tinit = 1,\t\t\t\tev = init
-\t\t\tVAR DrvCtrlSimnPwm3PhaSimnEna,\t\t\t\t\t\t\t\t\t\t\t\tinit = FALSE,\t\tev =init
-\t\t\tVAR DrvCtrlSeqrPlsEnaReq,\t\t\t\t\t\t\t\t\t\t\t\t\t\tinit = 0,\t\t\t\tev = init
-\t\t\tVAR DrvCtrlSeqrSoftAscReq,\t\t\t\t\t\t\t\t\t\t\t\t\tinit = 0,\t\t\t\tev = init
-\t\t\tVAR DrvCtrlSeqrAscReq,\t\t\t\t\t\t\t\t\t\t\t\t\t\tinit = 1,\t\t\t\tev = init
-\t\t\tVAR Pwm3PhaAscDutyCyc,\t\t\t\t\t\t\t\t\t\t\t\t\t\tinit (rtid3) in {0.0F,0.5F,1.0F},\t\tev=init 
-\t\t\tVAR Pwm3PhaMuxDutyCycPha[SYSDEF_PHA_SET_A][SYSDEF_PHA_U],\t\tinit (rtid3) in {0.0F,0.5F,1.0F},\t\tev=init 
-\t\t\tVAR DrvCtrlC2cData.DutyCycPhaU,\t\t\t\t\t\t\t\t\t\t\t\tinit=0.0F,\t\t\t\t\t\t\tev (rtid3) with {0.0F,0.5F,1.0F}\t\t--DrvCtrlC2cData.DutyCycPhaU = Pwm3PhaMuxDutyCycPha[SYSDEF_PHA_SET_A][SYSDEF_PHA_U]
-\t\t\tVAR Pwm3PhaMuxDutyCycPha[SYSDEF_PHA_SET_A][SYSDEF_PHA_V],\t\tinit (rtid3) in {0.0F,0.5F,1.0F},\t\tev=init 
-\t\t\tVAR DrvCtrlC2cData.DutyCycPhaV,\t\t\t\t\t\t\t\t\t\t\t\tinit=0.0F,\t\t\t\t\t\t\tev (rtid3) with {0.0F,0.5F,1.0F}\t\t--DrvCtrlC2cData.DutyCycPhaV = Pwm3PhaMuxDutyCycPha[SYSDEF_PHA_SET_A][SYSDEF_PHA_V]
-\t\t\tVAR Pwm3PhaMuxDutyCycPha[SYSDEF_PHA_SET_A][SYSDEF_PHA_W],\t\tinit (rtid3) in {0.0F,0.5F,1.0F},\t\tev=init 
-\t\t\tVAR DrvCtrlC2cData.DutyCycPhaW ,\t\t\t\t\t\t\t\t\t\t\tinit=0.0F,\t\t\t\t\t\t\tev (rtid3) with {0.0F,0.5F,1.0F}\t-- DrvCtrlC2cData.DutyCycPhaW = Pwm3PhaMuxDutyCycPha[SYSDEF_PHA_SET_A][SYSDEF_PHA_W]
-\t\t\t  #Pwm3Pha_RunA();
-       \t END ELEMENT
-     END TEST -- TEST TC-GLIB-61260-Pwm3Pha_RunA- 001
-
-END SERVICE -- Pwm3Pha_RunA
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
diff --git a/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/test/rtrt/package/Pwm3Pha.rtp b/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/test/rtrt/package/Pwm3Pha.rtp
deleted file mode 100644
index f1d101a21..000000000
--- a/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/test/rtrt/package/Pwm3Pha.rtp
+++ /dev/null
@@ -1,231 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!DOCTYPE project SYSTEM "C:\\Program Files (x86)\\IBM\\TestRealTime\\lib\\project.dtd" >
-<project>
-  <group>
-    <node>
-      <data>
-        <name>Pwm3Pha</name>
-        <quid>600341474</quid>
-        <renameable>false</renameable>
-        <deletable>true</deletable>
-        <open>true</open>
-        <sorted>false</sorted>
-        <executionResult>0</executionResult>
-      </data>
-      <current_configuration>C Aurix TC27x Tasking Compiler - Trace32 Debugger</current_configuration>
-      <state>0</state>
-      <background>false</background>
-      <configuration_list>
-        <configuration>
-          <name>C Aurix TC27x Tasking Compiler - Trace32 Debugger</name>
-        </configuration>
-      </configuration_list>
-    </node>
-    <group_child>
-      <unit_testing>
-        <test>
-          <node>
-            <data>
-              <name>Test</name>
-              <quid>600341550</quid>
-              <renameable>true</renameable>
-              <deletable>true</deletable>
-              <open>true</open>
-              <sorted>false</sorted>
-              <executionResult>0</executionResult>
-            </data>
-            <current_configuration>C Aurix TC27x Tasking Compiler - Trace32 Debugger</current_configuration>
-            <state>0</state>
-            <background>false</background>
-            <outfilename_list>
-              <outfilename>
-                <filetype>1563769615_DUM</filetype>
-                <filepath>.\\cwinAurixTrace32\\TP.o,.\\cwinAurixTrace32\\products.h,.\\cwinAurixTrace32\\atu.cio,.\\Test.atc.txt,.\\Test.summary.txt</filepath>
-              </outfilename>
-              <outfilename>
-                <filetype>1563769615_EXE</filetype>
-                <filepath>.\\cwinAurixTrace32\\Test.elf</filepath>
-              </outfilename>
-              <outfilename>
-                <filetype>1563769615_RI2</filetype>
-                <filepath>.\\Test.ri2</filepath>
-              </outfilename>
-              <outfilename>
-                <filetype>1563769615_RIO</filetype>
-                <filepath>.\\cwinAurixTrace32\\TTest.rio</filepath>
-              </outfilename>
-              <outfilename>
-                <filetype>1563769615_ROD</filetype>
-                <filepath>.\\cwinAurixTrace32\\TTest.rod</filepath>
-              </outfilename>
-              <outfilename>
-                <filetype>1563769615_SPT</filetype>
-                <filepath>.\\cwinAurixTrace32\\Test.spt</filepath>
-              </outfilename>
-              <outfilename>
-                <filetype>1563769615_TDF</filetype>
-                <filepath>.\\cwinAurixTrace32\\Test.tdf</filepath>
-              </outfilename>
-              <outfilename>
-                <filetype>1563769615_TIO</filetype>
-                <filepath>.\\cwinAurixTrace32\\Test.tio</filepath>
-              </outfilename>
-              <outfilename>
-                <filetype>1563769615_XRD</filetype>
-                <filepath>.\\cwinAurixTrace32\\Test.xrd</filepath>
-              </outfilename>
-            </outfilename_list>
-            <perlscript_after_child>UnitTesting.pl</perlscript_after_child>
-            <configuration_list>
-              <configuration>
-                <name>C Aurix TC27x Tasking Compiler - Trace32 Debugger</name>
-                <ge_user_incdir>\\test\\50_L5_Units_Parts\\10_SWUT\\110_DRCO\\10_configurations\\include,\\src\\fw_cu\\Components\\Cmn\\Com\\C2cCom\\include,\\src\\fw_cu\\Components\\Cmn\\Initialize\\CrtInit\\include,\\src\\fw_cu\\Components\\Cmn\\Shared\\MemMap\\include,\\src\\fw_cu\\Components\\Cmn\\Shared\\SysDef\\include,\\src\\fw_cu\\Components\\Extern\\AutoCore\\eclipse\\plugins\\Base_TS_TxDxM5I0R0\\include,\\src\\fw_cu\\Components\\Extern\\AutoCore\\eclipse\\plugins\\Os_TS_T16D15M6I0R0\\include,\\src\\fw_cu\\Components\\Extern\\AutoCore\\eclipse\\plugins\\Os_TS_T16D15M6I0R0\\include\\TRICORE,\\src\\fw_cu\\Components\\Extern\\AutoCore\\eclipse\\plugins\\Os_TS_T16D15M6I0R0\\include\\TRICORE\\TC277,\\src\\fw_cu\\Components\\Extern\\AutoCore\\eclipse\\plugins\\Os_TS_T16D15M6I0R0\\include\\TRICORE\\TC27X,\\src\\fw_cu\\Components\\Extern\\AutoCore\\eclipse\\plugins\\Platforms_TS_T16D15M2I0R0\\include\\TRICORE,\\src\\fw_cu\\Components\\Extern\\AutoCore\\eclipse\\plugins\\Platforms_TS_T16D15M2I0R0\\include\\TRICORE\\tasking,\\src\\fw_cu\\Components\\Extern\\AutoCore\\eclipse\\plugins\\Resource_TS_T16D15M1I0R0\\include,\\src\\fw_cu\\Components\\Extern\\AutoCore\\eclipse\\plugins\\Rte_TS_TxDxM6I2R0\\include,\\src\\fw_cu\\Components\\Inv\\ModSwtSig\\Pwm3Pha\\include,\\src\\fw_cu\\Components\\Inv\\ModSwtSig\\Pwm3Pha\\src,\\src\\fw_cu\\Components\\Inv\\ValMeasAndProc\\DSADC\\include,\\src\\fw_cu\\workspace\\Tresos\
extgen\\output\\generated\\include,\\src\\fw_cu\\Components\\Inv\\Simn\\DrvCtrlSimn\\include,\\src\\fw_cu\\Components\\Inv\\LimAndDrt\\IvtrPwmFrqDrtg\\include</ge_user_incdir>
-                <tsf_selective_file>TSPlatforms.h</tsf_selective_file>
-                <exclude_dir>\\src\\fw_cu\\Components\\Extern\\AutoCore\\eclipse\\plugins\\Platforms_TS_T16D15M2I0R0\\include\\TRICORE,\\src\\fw_cu\\Components\\Cmn\\MngFlts\\ErrDeb\\include</exclude_dir>
-              </configuration>
-            </configuration_list>
-          </node>
-          <test_child>
-            <unittesting_script>
-              <test_script>
-                <nodefile_ref>
-                  <node>
-                    <data>
-                      <name>Pwm3Pha.ptu</name>
-                      <quid>600341610</quid>
-                      <renameable>false</renameable>
-                      <deletable>true</deletable>
-                      <open>true</open>
-                      <sorted>false</sorted>
-                      <executionResult>0</executionResult>
-                    </data>
-                    <current_configuration>C Aurix TC27x Tasking Compiler - Trace32 Debugger</current_configuration>
-                    <state>0</state>
-                    <background>false</background>
-                    <outfilename_list>
-                      <outfilename>
-                        <filetype>1563769615_C  </filetype>
-                        <filepath>.\\cwinAurixTrace32\\TTest.c,.\\cwinAurixTrace32\\TTest.ic</filepath>
-                      </outfilename>
-                      <outfilename>
-                        <filetype>1563769615_DUM</filetype>
-                        <filepath>.\\cwinAurixTrace32\\TTest_aug.c,.\\cwinAurixTrace32\\TTest_aug.i</filepath>
-                      </outfilename>
-                      <outfilename>
-                        <filetype>1563769615_FDC</filetype>
-                        <filepath>.\\PWM3PHA.C.fdc</filepath>
-                      </outfilename>
-                      <outfilename>
-                        <filetype>1563769615_H  </filetype>
-                        <filepath>.\\cwinAurixTrace32\\attol_cfg.h</filepath>
-                      </outfilename>
-                      <outfilename>
-                        <filetype>1563769615_OBJ</filetype>
-                        <filepath>.\\cwinAurixTrace32\\TTest.o</filepath>
-                      </outfilename>
-                      <outfilename>
-                        <filetype>1563769615_TDC</filetype>
-                        <filepath>.\\cwinAurixTrace32\\TTest.tdc</filepath>
-                      </outfilename>
-                      <outfilename>
-                        <filetype>1563769615_TSF</filetype>
-                        <filepath>.\\cwinAurixTrace32\\Test.tsf,.\\PWM3PHA.C.tsf</filepath>
-                      </outfilename>
-                    </outfilename_list>
-                    <perlscript_after_child>TestScript.pl</perlscript_after_child>
-                    <configuration_list>
-                      <configuration>
-                        <name>C Aurix TC27x Tasking Compiler - Trace32 Debugger</name>
-                      </configuration>
-                    </configuration_list>
-                  </node>
-                  <filepath>.\\Pwm3Pha.ptu</filepath>
-                </nodefile_ref>
-                <cas_all>
-                  <cas>Pwm3Pha_NextPwmHalfA.TC-GLIB-61261-Pwm3Pha_NextPwmHalfA-</cas>
-                  <cas>Pwm3Pha_NextPwmFrq.TC-GLIB-61259-Pwm3Pha_NextPwmFrq-</cas>
-                  <cas>Pwm3Pha_NextPwmFrq.TC-GLIB-61259-Pwm3Pha_NextPwmFrq-</cas>
-                  <cas>Pwm3Pha_NextPwmFrq.TC-GLIB-61259-Pwm3Pha_NextPwmFrq-</cas>
-                  <cas>Pwm3Pha_NextPwmFrq.TC-GLIB-61259-Pwm3Pha_NextPwmFrq-</cas>
-                  <cas>Pwm3Pha_NextPwmFrq.TC-GLIB-61259-Pwm3Pha_NextPwmFrq-</cas>
-                  <cas>Pwm3Pha_NextPwmFrq.TC-GLIB-61259-Pwm3Pha_NextPwmFrq-</cas>
-                  <cas>Pwm3Pha_NextPwmFrq.TC-GLIB-61259-Pwm3Pha_NextPwmFrq-</cas>
-                  <cas>Pwm3Pha_NextPwmFrq.TC-GLIB-61259-Pwm3Pha_NextPwmFrq-</cas>
-                  <cas>Pwm3Pha_NextPwmFrq.TC-GLIB-61259-Pwm3Pha_NextPwmFrq-</cas>
-                  <cas>Pwm3Pha_NextPwmFrq.TC-GLIB-61259-Pwm3Pha_NextPwmFrq-</cas>
-                  <cas>Pwm3Pha_NextPwmFrq.TC-GLIB-61259-Pwm3Pha_NextPwmFrq-</cas>
-                  <cas>Pwm3Pha_NextPwmFrq.TC-GLIB-61259-Pwm3Pha_NextPwmFrq-</cas>
-                  <cas>Pwm3Pha_NextPwmFrq.TC-GLIB-61259-Pwm3Pha_NextPwmFrq-</cas>
-                  <cas>Pwm3Pha_NextPwmFrq.TC-GLIB-61259-Pwm3Pha_NextPwmFrq-</cas>
-                  <cas>Pwm3Pha_RunMux.TC-GLIB-60696-Pwm3Pha_RunMux-</cas>
-                  <cas>Pwm3Pha_RunMux.TC-GLIB-60696-Pwm3Pha_RunMux-</cas>
-                  <cas>Pwm3Pha_RunMux.TC-GLIB-60696-Pwm3Pha_RunMux-</cas>
-                  <cas>Pwm3Pha_RunMux.TC-GLIB-60696-Pwm3Pha_RunMux-</cas>
-                  <cas>Pwm3Pha_RunMux.TC-GLIB-60696-Pwm3Pha_RunMux-</cas>
-                  <cas>Pwm3Pha_RunMux.TC-GLIB-60696-Pwm3Pha_RunMux-</cas>
-                  <cas>Pwm3Pha_RunMux.TC-GLIB-60696-Pwm3Pha_RunMux-</cas>
-                  <cas>Pwm3Pha_RunMux.TC-GLIB-60696-Pwm3Pha_RunMux-</cas>
-                  <cas>Pwm3Pha_RunMux.TC-GLIB-60696-Pwm3Pha_RunMux-</cas>
-                  <cas>Pwm3Pha_RunMux.TC-GLIB-60696-Pwm3Pha_RunMux-</cas>
-                  <cas>Pwm3Pha_RunMux.TC-GLIB-60696-Pwm3Pha_RunMux-</cas>
-                  <cas>Pwm3Pha_RunMux.TC-GLIB-60696-Pwm3Pha_RunMux-</cas>
-                  <cas>Pwm3Pha_Init.TC-GLIB-60697-Pwm3Pha_Init-</cas>
-                  <cas>Pwm3Pha_RunA.TC-GLIB-61260-Pwm3Pha_RunA-</cas>
-                </cas_all>
-                <fam_all>
-                  <fam>nominal</fam>
-                </fam_all>
-                <cas_selection>
-                  <cas>Pwm3Pha_NextPwmHalfA</cas>
-                  <cas>Pwm3Pha_NextPwmFrq</cas>
-                  <cas>Pwm3Pha_RunMux</cas>
-                  <cas>Pwm3Pha_Init</cas>
-                  <cas>Pwm3Pha_RunA</cas>
-                </cas_selection>
-                <fam_selection>
-                  <fam>nominal</fam>
-                </fam_selection>
-                <instance></instance>
-                <use_vtselection>true</use_vtselection>
-                <use_vtfamselection>true</use_vtfamselection>
-              </test_script>
-            </unittesting_script>
-            <source>
-              <nodefile_ref>
-                <node>
-                  <data>
-                    <name>Pwm3Pha.c</name>
-                    <quid>600341608</quid>
-                    <renameable>false</renameable>
-                    <deletable>true</deletable>
-                    <open>true</open>
-                    <sorted>false</sorted>
-                    <executionResult>5</executionResult>
-                  </data>
-                  <current_configuration>C Aurix TC27x Tasking Compiler - Trace32 Debugger</current_configuration>
-                  <state>1</state>
-                  <background>false</background>
-                  <perlscript_after_child>Source.pl</perlscript_after_child>
-                  <configuration_list>
-                    <configuration>
-                      <name>C Aurix TC27x Tasking Compiler - Trace32 Debugger</name>
-                    </configuration>
-                  </configuration_list>
-                </node>
-                <filepath>..\\..\\..\\..\\..\\..\\src\\fw_cu\\Components\\Inv\\ModSwtSig\\Pwm3Pha\\src\\Pwm3Pha.c</filepath>
-              </nodefile_ref>
-            <integrated>false</integrated>
-            <source_child>
-            </source_child>
-            </source>
-          </test_child>
-        </test>
-      </unit_testing>
-    </group_child>
-  </group>
-  <object_file>Pwm3Pha.inf</object_file>
-  <sort_method>1</sort_method>
-  <root_configuration_list>
-  </root_configuration_list>
-  <version_file>1</version_file>
-</project>
diff --git a/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/test/rtrt/report/CoverageReport.zip b/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/test/rtrt/report/CoverageReport.zip
deleted file mode 100644
index a82afcda8..000000000
Binary files a/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/test/rtrt/report/CoverageReport.zip and /dev/null differ
diff --git a/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/test/rtrt/report/RTRT_Report.zip b/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/test/rtrt/report/RTRT_Report.zip
deleted file mode 100644
index fa4a17b43..000000000
Binary files a/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/test/rtrt/report/RTRT_Report.zip and /dev/null differ
diff --git a/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/test/rtrt/report/TestReport.zip b/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/test/rtrt/report/TestReport.zip
deleted file mode 100644
index 089450cb3..000000000
Binary files a/src/fw_cu/Components/Inv/ModSwtSig/Pwm3Pha/test/rtrt/report/TestReport.zip and /dev/null differ
diff --git a/src/fw_cu/Components/Inv/RtEnv/DrvCtrlSdl/src/DrvCtrlSdl.c b/src/fw_cu/Components/Inv/RtEnv/DrvCtrlSdl/src/DrvCtrlSdl.c
index 0992c279d..e6faab1b9 100644
--- a/src/fw_cu/Components/Inv/RtEnv/DrvCtrlSdl/src/DrvCtrlSdl.c
+++ b/src/fw_cu/Components/Inv/RtEnv/DrvCtrlSdl/src/DrvCtrlSdl.c
@@ -53,7 +53,6 @@
 #include "IvtrHvDcBusBarTempDrtg_Wrpr.h"
 #include "PerfIndcrCalcn_Wrpr.h"
 #include "Mod3Pha.h"
-#include "Pwm3Pha.h"
 #include "PwmSpMgr_Wrpr.h"
 #include "PwmSpCalcn_Wrpr.h"
 #include "PwmSpMux_Wrpr.h"
diff --git a/src/fw_cu/Components/Inv/ValMeasAndProc/BswFpgaIf/include/BswFpgaIf.h b/src/fw_cu/Components/Inv/ValMeasAndProc/BswFpgaIf/include/BswFpgaIf.h
index a774b35bf..2532dc673 100644
--- a/src/fw_cu/Components/Inv/ValMeasAndProc/BswFpgaIf/include/BswFpgaIf.h
+++ b/src/fw_cu/Components/Inv/ValMeasAndProc/BswFpgaIf/include/BswFpgaIf.h
@@ -21,8 +21,7 @@
 #include "Std_Types.h"
 #include "C2cComSftyData.h"
 #include "AddEnumTypes.h"
-#include "Pwm3Pha_data.h"
-#include "invA_pwm.h"
+#include "PwmSpMux_WrprData.h"
 #include "Mod3PhTL_Data.h"
 #include "HvAcIMeas_data.h"
 #include "HvDcUMeas_WrprData.h"
diff --git a/src/fw_cu/build/ComponentConfig.xml b/src/fw_cu/build/ComponentConfig.xml
index 866d670c3..c38d1e289 100644
--- a/src/fw_cu/build/ComponentConfig.xml
+++ b/src/fw_cu/build/ComponentConfig.xml
@@ -146,7 +146,6 @@
 \t\t\t\t\t$(SOURCE_CODE_ROOT)/Cmn/Shared/SysDef/src/AdditionalA2LComments.c
 \t\t\t\t\t$(SOURCE_CODE_ROOT)/Cmn/ValMeasAndProc/VADC/src/Vadc_Cfg.c
 \t\t\t\t\t$(SOURCE_CODE_ROOT)/Inv/LimAndDrt/HVLoadCalcn/src/HvLoadCalcn_Wrpr.c
-\t\t\t\t\t$(SOURCE_CODE_ROOT)/Inv/ModSwtSig/Pwm3Pha/src/invA_pwm.c
 \t\t\t\t\t$(SOURCE_CODE_ROOT)/Inv/RtEnv/DrvCtrlSdl/src/DrvCtrlSdl.c
 \t\t\t\t\t$(SOURCE_CODE_ROOT)/Inv/RtEnv/DrvCtrlSeqr/src/DrvCtrlSeqr.c
 \t\t\t\t\t$(SOURCE_CODE_ROOT)/Inv/TqCtrl/AsmCtrl/src/AsmCtrl.c
diff --git a/src/fw_cu/build/Parfiles/P2_100kW/Testbench/VW310E_76_49_A274_0028_VEH_200901.par b/src/fw_cu/build/Parfiles/P2_100kW/Testbench/VW310E_76_49_A274_0028_VEH_200901.par
index 3376cf591..b7152c98f 100644
--- a/src/fw_cu/build/Parfiles/P2_100kW/Testbench/VW310E_76_49_A274_0028_VEH_200901.par
+++ b/src/fw_cu/build/Parfiles/P2_100kW/Testbench/VW310E_76_49_A274_0028_VEH_200901.par
@@ -18448,10 +18448,6 @@ filter_phi_TL_CalibParam.omegaMechLearningBegin [FLOAT]  157.0796356201172 ;  15
 filter_phi_TL_CalibParam.omegaMechLearningEnd [FLOAT]  1570.79638671875 ;  1570.79638671875
 filter_phi_TL_CalibParam.polePairs [UINT(32)]  4 ;  4
 filter_phi_TL_CalibParam.polePairsInv [FLOAT]  0.25 ;  0.25
-invA_dsadc_current_sample_PRETRIGGER_CNTS [UINT(16)]  2300 ;  2300
-;invA_pwm_DEADTIME [FLOAT]  0.0000021999999262334313 ;  0.0000021999999262334313
-;invA_pwm_MIN_PULSE_WIDTH [FLOAT]  0.000004080000053363619 ;  0.000004080000053363619
-;invA_pwm_PretriggerVzk [FLOAT]  0.00002499999936844688 ;  0.00002499999936844688
 HvAcIMeasProdData.RAW2AMPERE_U_GAIN [FLOAT]  0.670009971 ; 0.67001
 HvAcIMeasProdData.RAW2AMPERE_U_OFFSET [FLOAT]  -2055 ; -2055
 HvAcIMeasProdData.RAW2AMPERE_V_GAIN [FLOAT]  0.673399985 ; 0.6734
diff --git a/src/fw_cu/build/a2l/Measurements-to-Timeslices-Mapping.csv b/src/fw_cu/build/a2l/Measurements-to-Timeslices-Mapping.csv
index ff454f2ea..7f1c8ce90 100644
--- a/src/fw_cu/build/a2l/Measurements-to-Timeslices-Mapping.csv
+++ b/src/fw_cu/build/a2l/Measurements-to-Timeslices-Mapping.csv
@@ -3544,7 +3544,6 @@ BswFpgaIfIpduTx.Data16,Core_2,C2_128ms,128,,,DRCO
 BswFpgaIfIpduTx.Data32,Core_2,C2_128ms,128,,,DRCO
 BswFpgaIfIpduTx.Data8,Core_2,C2_128ms,128,,,DRCO
 FreeSpaceOfOVR,Core_0,C0_10ms_Slow,10,XCP event based,shared variable,BSW
-gcall_count__interrupt_isr_invA_ctrl_gtm,Core_0,C0_1ms_TimeTask,1,,,BSW
 HvAcAp_AliveCount,Core_0,C0_1ms_TimeTask,1,,,DRCO
 HvAcIFndmtlCptAmpCalcn_AlvCntr,Core_2,C2_100u_PWM,0.1,,,DRCO
 HvAcIFndmtlCptAmpCalcn_InputData.Cosine,Core_2,C2_100u_PWM,0.1,,,DRCO
'
